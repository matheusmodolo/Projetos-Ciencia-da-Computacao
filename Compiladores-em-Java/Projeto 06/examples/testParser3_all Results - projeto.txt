Parsing Incorrect_101.cprl...
*** Syntax error detected near line 7, character 4:
    Expecting ";" but found "else" instead.
Errors detected in Incorrect_101.cprl -- parsing terminated.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 5
          },
          "text": "x"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ],
    "subprogDecls": []
  },
  "stmtPart": {
    "statements": [
      {
        "booleanExpr": {
          "L1": "L0",
          "L2": "L1",
          "leftOperand": {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 1,
                  "charNumber": 5
                },
                "text": "x"
              },
              "type": {
                "name": "Integer",
                "size": 4
              }
            },
            "indexExprs": [],
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 5,
              "charNumber": 7
            }
          },
          "operator": {
            "symbol": "greaterThan",
            "position": {
              "lineNumber": 5,
              "charNumber": 9
            },
            "text": "\u003e"
          },
          "rightOperand": {
            "literal": {
              "symbol": "intLiteral",
              "position": {
                "lineNumber": 5,
                "charNumber": 11
              },
              "text": "0"
            },
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 5,
              "charNumber": 11
            }
          },
          "exprType": {
            "name": "Boolean",
            "size": 1
          },
          "exprPosition": {
            "lineNumber": 5,
            "charNumber": 9
          }
        },
        "thenStmts": [
          null
        ],
        "elsifParts": [],
        "elseStmts": [
          {
            "variable": {
              "decl": {
                "scopeLevel": "PROGRAM",
                "relAddr": 0,
                "idToken": {
                  "symbol": "identifier",
                  "position": {
                    "lineNumber": 1,
                    "charNumber": 5
                  },
                  "text": "x"
                },
                "type": {
                  "name": "Integer",
                  "size": 4
                }
              },
              "indexExprs": [],
              "exprType": {
                "name": "Integer",
                "size": 4
              },
              "exprPosition": {
                "lineNumber": 8,
                "charNumber": 7
              }
            },
            "expr": {
              "leftOperand": {
                "decl": {
                  "scopeLevel": "PROGRAM",
                  "relAddr": 0,
                  "idToken": {
                    "symbol": "identifier",
                    "position": {
                      "lineNumber": 1,
                      "charNumber": 5
                    },
                    "text": "x"
                  },
                  "type": {
                    "name": "Integer",
                    "size": 4
                  }
                },
                "indexExprs": [],
                "exprType": {
                  "name": "Integer",
                  "size": 4
                },
                "exprPosition": {
                  "lineNumber": 8,
                  "charNumber": 12
                }
              },
              "operator": {
                "symbol": "plus",
                "position": {
                  "lineNumber": 8,
                  "charNumber": 14
                },
                "text": "+"
              },
              "rightOperand": {
                "literal": {
                  "symbol": "intLiteral",
                  "position": {
                    "lineNumber": 8,
                    "charNumber": 16
                  },
                  "text": "1"
                },
                "exprType": {
                  "name": "Integer",
                  "size": 4
                },
                "exprPosition": {
                  "lineNumber": 8,
                  "charNumber": 16
                }
              },
              "exprType": {
                "name": "Integer",
                "size": 4
              },
              "exprPosition": {
                "lineNumber": 8,
                "charNumber": 14
              }
            },
            "assignPosition": {
              "lineNumber": 8,
              "charNumber": 9
            }
          }
        ],
        "L1": "L2",
        "L2": "L3"
      }
    ]
  },
  "varLength": 0,
  "L1": "L4"
}
<sep>
Parsing Incorrect_102.cprl...
*** Syntax error detected near line 8, character 4:
    Expecting "." but found ";" instead.
Errors detected in Incorrect_102.cprl -- parsing terminated.

*** AST Dump ***
The AST could not be built.
<sep>
Parsing Incorrect_103.cprl...
*** Syntax error detected near line 7, character 4:
    Identifier "i" cannot start a statement.
Errors detected in Incorrect_103.cprl -- parsing terminated.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "literal": {
          "symbol": "intLiteral",
          "position": {
            "lineNumber": 1,
            "charNumber": 12
          },
          "text": "5"
        },
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 7
          },
          "text": "i"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      },
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 2,
            "charNumber": 5
          },
          "text": "x"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ],
    "subprogDecls": []
  },
  "stmtPart": {
    "statements": [
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 2,
                "charNumber": 5
              },
              "text": "x"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 6,
            "charNumber": 4
          }
        },
        "expr": {
          "literal": {
            "symbol": "intLiteral",
            "position": {
              "lineNumber": 6,
              "charNumber": 9
            },
            "text": "2"
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 6,
            "charNumber": 9
          }
        },
        "assignPosition": {
          "lineNumber": 6,
          "charNumber": 6
        }
      },
      null
    ]
  },
  "varLength": 0,
  "L1": "L0"
}
<sep>
Parsing Incorrect_104.cprl...
*** Syntax error detected near line 6, character 13:
    Identifier "z" has not been declared.
Errors detected in Incorrect_104.cprl -- parsing terminated.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 5
          },
          "text": "x"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      },
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 8
          },
          "text": "y"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ],
    "subprogDecls": []
  },
  "stmtPart": {
    "statements": [
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 1,
                "charNumber": 8
              },
              "text": "y"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 5,
            "charNumber": 4
          }
        },
        "expr": {
          "operator": {
            "symbol": "minus",
            "position": {
              "lineNumber": 5,
              "charNumber": 9
            },
            "text": "-"
          },
          "operand": {
            "literal": {
              "symbol": "intLiteral",
              "position": {
                "lineNumber": 5,
                "charNumber": 10
              },
              "text": "5"
            },
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 5,
              "charNumber": 10
            }
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 5,
            "charNumber": 9
          }
        },
        "assignPosition": {
          "lineNumber": 5,
          "charNumber": 6
        }
      },
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 1,
                "charNumber": 5
              },
              "text": "x"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 6,
            "charNumber": 4
          }
        },
        "expr": {
          "leftOperand": {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 1,
                  "charNumber": 8
                },
                "text": "y"
              },
              "type": {
                "name": "Integer",
                "size": 4
              }
            },
            "indexExprs": [],
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 6,
              "charNumber": 9
            }
          },
          "operator": {
            "symbol": "plus",
            "position": {
              "lineNumber": 6,
              "charNumber": 11
            },
            "text": "+"
          },
          "rightOperand": null,
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 6,
            "charNumber": 11
          }
        },
        "assignPosition": {
          "lineNumber": 6,
          "charNumber": 6
        }
      }
    ]
  },
  "varLength": 0,
  "L1": "L0"
}
<sep>
Parsing Incorrect_105.cprl...
*** Syntax error detected near line 5, character 9:
    Identifier "FALSE" has not been declared.
Errors detected in Incorrect_105.cprl -- parsing terminated.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 5
          },
          "text": "b"
        },
        "type": {
          "name": "Boolean",
          "size": 1
        }
      }
    ],
    "subprogDecls": []
  },
  "stmtPart": {
    "statements": [
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 1,
                "charNumber": 5
              },
              "text": "b"
            },
            "type": {
              "name": "Boolean",
              "size": 1
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Boolean",
            "size": 1
          },
          "exprPosition": {
            "lineNumber": 5,
            "charNumber": 4
          }
        },
        "expr": null,
        "assignPosition": {
          "lineNumber": 5,
          "charNumber": 6
        }
      }
    ]
  },
  "varLength": 0,
  "L1": "L0"
}
<sep>
Parsing Incorrect_106.cprl...
*** Syntax error detected near line 5, character 13:
    Invalid literal expression.
*** Syntax error detected near line 9, character 9:
    Identifier "boolean" has not been declared.
*** Syntax error detected near line 13, character 7:
    Invalid expression.
*** Syntax error detected near line 16, character 7:
    Identifier "d" cannot start a statement.
Errors detected in Incorrect_106.cprl -- parsing terminated.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "literal": {
          "symbol": "intLiteral",
          "position": {
            "lineNumber": 3,
            "charNumber": 12
          },
          "text": "1"
        },
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 3,
            "charNumber": 7
          },
          "text": "a"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      },
      {
        "literal": {
          "symbol": "intLiteral",
          "position": {
            "lineNumber": 4,
            "charNumber": 12
          },
          "text": "2"
        },
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 4,
            "charNumber": 7
          },
          "text": "b"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      },
      {
        "literal": null,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 5,
            "charNumber": 7
          },
          "text": "c"
        },
        "type": {
          "name": "UNKNOWN",
          "size": 0
        }
      },
      {
        "literal": {
          "symbol": "intLiteral",
          "position": {
            "lineNumber": 6,
            "charNumber": 12
          },
          "text": "4"
        },
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 6,
            "charNumber": 7
          },
          "text": "d"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      },
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 8,
            "charNumber": 5
          },
          "text": "x"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      },
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 9,
            "charNumber": 5
          },
          "text": "y"
        },
        "type": {
          "name": "UNKNOWN",
          "size": 0
        }
      }
    ],
    "subprogDecls": []
  },
  "stmtPart": {
    "statements": [
      {
        "booleanExpr": {
          "L1": "L0",
          "L2": "L1",
          "leftOperand": null,
          "operator": {
            "symbol": "equals",
            "position": {
              "lineNumber": 13,
              "charNumber": 7
            },
            "text": "\u003d"
          },
          "rightOperand": {
            "literal": {
              "symbol": "intLiteral",
              "position": {
                "lineNumber": 13,
                "charNumber": 9
              },
              "text": "2"
            },
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 13,
              "charNumber": 9
            }
          },
          "exprType": {
            "name": "Boolean",
            "size": 1
          },
          "exprPosition": {
            "lineNumber": 13,
            "charNumber": 7
          }
        },
        "thenStmts": [
          {
            "variable": {
              "decl": {
                "scopeLevel": "PROGRAM",
                "relAddr": 0,
                "idToken": {
                  "symbol": "identifier",
                  "position": {
                    "lineNumber": 8,
                    "charNumber": 5
                  },
                  "text": "x"
                },
                "type": {
                  "name": "Integer",
                  "size": 4
                }
              },
              "indexExprs": [],
              "exprType": {
                "name": "Integer",
                "size": 4
              },
              "exprPosition": {
                "lineNumber": 14,
                "charNumber": 7
              }
            },
            "expr": {
              "literal": {
                "symbol": "intLiteral",
                "position": {
                  "lineNumber": 14,
                  "charNumber": 12
                },
                "text": "1"
              },
              "exprType": {
                "name": "Integer",
                "size": 4
              },
              "exprPosition": {
                "lineNumber": 14,
                "charNumber": 12
              }
            },
            "assignPosition": {
              "lineNumber": 14,
              "charNumber": 9
            }
          }
        ],
        "elsifParts": [],
        "elseStmts": [
          null
        ],
        "L1": "L2",
        "L2": "L3"
      }
    ]
  },
  "varLength": 0,
  "L1": "L4"
}
<sep>
Parsing Incorrect_107.cprl...
Parsing complete.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 5
          },
          "text": "x"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ],
    "subprogDecls": []
  },
  "stmtPart": {
    "statements": [
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 1,
                "charNumber": 5
              },
              "text": "x"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 5,
            "charNumber": 4
          }
        },
        "expr": {
          "literal": {
            "symbol": "trueRW",
            "position": {
              "lineNumber": 5,
              "charNumber": 9
            },
            "text": "true"
          },
          "exprType": {
            "name": "Boolean",
            "size": 1
          },
          "exprPosition": {
            "lineNumber": 5,
            "charNumber": 9
          }
        },
        "assignPosition": {
          "lineNumber": 5,
          "charNumber": 6
        }
      }
    ]
  },
  "varLength": 0,
  "L1": "L0"
}
<sep>
Parsing Incorrect_108.cprl...
Parsing complete.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 5
          },
          "text": "x"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ],
    "subprogDecls": []
  },
  "stmtPart": {
    "statements": [
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 1,
                "charNumber": 5
              },
              "text": "x"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 5,
            "charNumber": 4
          }
        },
        "expr": {
          "literal": {
            "symbol": "intLiteral",
            "position": {
              "lineNumber": 5,
              "charNumber": 9
            },
            "text": "3"
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 5,
            "charNumber": 9
          }
        },
        "assignPosition": {
          "lineNumber": 5,
          "charNumber": 6
        }
      },
      {
        "booleanExpr": {
          "leftOperand": {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 1,
                  "charNumber": 5
                },
                "text": "x"
              },
              "type": {
                "name": "Integer",
                "size": 4
              }
            },
            "indexExprs": [],
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 6,
              "charNumber": 7
            }
          },
          "operator": {
            "symbol": "plus",
            "position": {
              "lineNumber": 6,
              "charNumber": 9
            },
            "text": "+"
          },
          "rightOperand": {
            "literal": {
              "symbol": "intLiteral",
              "position": {
                "lineNumber": 6,
                "charNumber": 11
              },
              "text": "2"
            },
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 6,
              "charNumber": 11
            }
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 6,
            "charNumber": 9
          }
        },
        "thenStmts": [
          {
            "variable": {
              "decl": {
                "scopeLevel": "PROGRAM",
                "relAddr": 0,
                "idToken": {
                  "symbol": "identifier",
                  "position": {
                    "lineNumber": 1,
                    "charNumber": 5
                  },
                  "text": "x"
                },
                "type": {
                  "name": "Integer",
                  "size": 4
                }
              },
              "indexExprs": [],
              "exprType": {
                "name": "Integer",
                "size": 4
              },
              "exprPosition": {
                "lineNumber": 7,
                "charNumber": 7
              }
            },
            "expr": {
              "leftOperand": {
                "decl": {
                  "scopeLevel": "PROGRAM",
                  "relAddr": 0,
                  "idToken": {
                    "symbol": "identifier",
                    "position": {
                      "lineNumber": 1,
                      "charNumber": 5
                    },
                    "text": "x"
                  },
                  "type": {
                    "name": "Integer",
                    "size": 4
                  }
                },
                "indexExprs": [],
                "exprType": {
                  "name": "Integer",
                  "size": 4
                },
                "exprPosition": {
                  "lineNumber": 7,
                  "charNumber": 12
                }
              },
              "operator": {
                "symbol": "plus",
                "position": {
                  "lineNumber": 7,
                  "charNumber": 14
                },
                "text": "+"
              },
              "rightOperand": {
                "literal": {
                  "symbol": "intLiteral",
                  "position": {
                    "lineNumber": 7,
                    "charNumber": 16
                  },
                  "text": "1"
                },
                "exprType": {
                  "name": "Integer",
                  "size": 4
                },
                "exprPosition": {
                  "lineNumber": 7,
                  "charNumber": 16
                }
              },
              "exprType": {
                "name": "Integer",
                "size": 4
              },
              "exprPosition": {
                "lineNumber": 7,
                "charNumber": 14
              }
            },
            "assignPosition": {
              "lineNumber": 7,
              "charNumber": 9
            }
          }
        ],
        "elsifParts": [],
        "elseStmts": [],
        "L1": "L0",
        "L2": "L1"
      }
    ]
  },
  "varLength": 0,
  "L1": "L2"
}
<sep>
Parsing Incorrect_109.cprl...
*** Syntax error detected near line 2, character 7:
    Identifier "x" is already defined in the current scope.
Errors detected in Incorrect_109.cprl -- parsing terminated.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 5
          },
          "text": "x"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      },
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 8
          },
          "text": "y"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      },
      null
    ],
    "subprogDecls": []
  },
  "stmtPart": {
    "statements": [
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 1,
                "charNumber": 8
              },
              "text": "y"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 6,
            "charNumber": 4
          }
        },
        "expr": {
          "literal": {
            "symbol": "intLiteral",
            "position": {
              "lineNumber": 6,
              "charNumber": 9
            },
            "text": "10"
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 6,
            "charNumber": 9
          }
        },
        "assignPosition": {
          "lineNumber": 6,
          "charNumber": 6
        }
      },
      {
        "expressions": [
          {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 1,
                  "charNumber": 8
                },
                "text": "y"
              },
              "type": {
                "name": "Integer",
                "size": 4
              }
            },
            "indexExprs": [],
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 7,
              "charNumber": 12
            }
          }
        ]
      }
    ]
  },
  "varLength": 0,
  "L1": "L0"
}
<sep>
Parsing Incorrect_110.cprl...
*** Syntax error detected near line 5, character 1:
    Expecting ";" but found "end" instead.
Errors detected in Incorrect_110.cprl -- parsing terminated.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [],
    "subprogDecls": []
  },
  "stmtPart": {
    "statements": [
      null
    ]
  },
  "varLength": 0,
  "L1": "L0"
}
<sep>
Parsing Incorrect_111.cprl...
*** Syntax error detected near line 6, character 4:
    Exit statement is not nested within a loop.
Errors detected in Incorrect_111.cprl -- parsing terminated.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 5
          },
          "text": "x"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ],
    "subprogDecls": []
  },
  "stmtPart": {
    "statements": [
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 1,
                "charNumber": 5
              },
              "text": "x"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 5,
            "charNumber": 4
          }
        },
        "expr": {
          "literal": {
            "symbol": "intLiteral",
            "position": {
              "lineNumber": 5,
              "charNumber": 9
            },
            "text": "12"
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 5,
            "charNumber": 9
          }
        },
        "assignPosition": {
          "lineNumber": 5,
          "charNumber": 6
        }
      },
      null
    ]
  },
  "varLength": 0,
  "L1": "L2"
}
<sep>
Parsing Incorrect_112.cprl...
*** Syntax error detected near line 1, character 9:
    Invalid type name.
Errors detected in Incorrect_112.cprl -- parsing terminated.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 5
          },
          "text": "x"
        },
        "type": {
          "name": "UNKNOWN",
          "size": 0
        }
      }
    ],
    "subprogDecls": []
  },
  "stmtPart": {
    "statements": [
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 1,
                "charNumber": 5
              },
              "text": "x"
            },
            "type": {
              "name": "UNKNOWN",
              "size": 0
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "UNKNOWN",
            "size": 0
          },
          "exprPosition": {
            "lineNumber": 5,
            "charNumber": 4
          }
        },
        "expr": {
          "literal": {
            "symbol": "intLiteral",
            "position": {
              "lineNumber": 5,
              "charNumber": 9
            },
            "text": "12"
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 5,
            "charNumber": 9
          }
        },
        "assignPosition": {
          "lineNumber": 5,
          "charNumber": 6
        }
      },
      {
        "expressions": [
          {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 1,
                  "charNumber": 5
                },
                "text": "x"
              },
              "type": {
                "name": "UNKNOWN",
                "size": 0
              }
            },
            "indexExprs": [],
            "exprType": {
              "name": "UNKNOWN",
              "size": 0
            },
            "exprPosition": {
              "lineNumber": 6,
              "charNumber": 12
            }
          }
        ]
      }
    ]
  },
  "varLength": 0,
  "L1": "L0"
}
<sep>
Parsing Incorrect_113.cprl...
*** Syntax error detected near line 5, character 4:
    Identifier "y" has not been declared.
Errors detected in Incorrect_113.cprl -- parsing terminated.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 5
          },
          "text": "x"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ],
    "subprogDecls": []
  },
  "stmtPart": {
    "statements": [
      null
    ]
  },
  "varLength": 0,
  "L1": "L0"
}
<sep>
Parsing Incorrect_114.cprl...
Parsing complete.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 5
          },
          "text": "c"
        },
        "type": {
          "name": "Char",
          "size": 2
        }
      }
    ],
    "subprogDecls": []
  },
  "stmtPart": {
    "statements": [
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 1,
                "charNumber": 5
              },
              "text": "c"
            },
            "type": {
              "name": "Char",
              "size": 2
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Char",
            "size": 2
          },
          "exprPosition": {
            "lineNumber": 5,
            "charNumber": 4
          }
        },
        "expr": {
          "operator": {
            "symbol": "minus",
            "position": {
              "lineNumber": 5,
              "charNumber": 9
            },
            "text": "-"
          },
          "operand": {
            "literal": {
              "symbol": "intLiteral",
              "position": {
                "lineNumber": 5,
                "charNumber": 10
              },
              "text": "3"
            },
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 5,
              "charNumber": 10
            }
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 5,
            "charNumber": 9
          }
        },
        "assignPosition": {
          "lineNumber": 5,
          "charNumber": 6
        }
      }
    ]
  },
  "varLength": 0,
  "L1": "L0"
}
<sep>
Parsing Incorrect_115.cprl...
*** Syntax error detected near line 7, character 6:
    Expecting ":=" but found "=" instead.
*** Syntax error detected near line 8, character 4:
    Identifier "five" cannot start a statement.
Errors detected in Incorrect_115.cprl -- parsing terminated.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "literal": {
          "symbol": "intLiteral",
          "position": {
            "lineNumber": 1,
            "charNumber": 15
          },
          "text": "5"
        },
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 7
          },
          "text": "five"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      },
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 2,
            "charNumber": 5
          },
          "text": "x"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ],
    "subprogDecls": []
  },
  "stmtPart": {
    "statements": [
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 2,
                "charNumber": 5
              },
              "text": "x"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 6,
            "charNumber": 4
          }
        },
        "expr": {
          "literal": {
            "symbol": "intLiteral",
            "position": {
              "lineNumber": 6,
              "charNumber": 9
            },
            "text": "3"
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 6,
            "charNumber": 9
          }
        },
        "assignPosition": {
          "lineNumber": 6,
          "charNumber": 6
        }
      },
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 2,
                "charNumber": 5
              },
              "text": "x"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 7,
            "charNumber": 4
          }
        },
        "expr": {
          "leftOperand": {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 2,
                  "charNumber": 5
                },
                "text": "x"
              },
              "type": {
                "name": "Integer",
                "size": 4
              }
            },
            "indexExprs": [],
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 7,
              "charNumber": 8
            }
          },
          "operator": {
            "symbol": "plus",
            "position": {
              "lineNumber": 7,
              "charNumber": 10
            },
            "text": "+"
          },
          "rightOperand": {
            "literal": {
              "symbol": "intLiteral",
              "position": {
                "lineNumber": 7,
                "charNumber": 12
              },
              "text": "1"
            },
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 7,
              "charNumber": 12
            }
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 7,
            "charNumber": 10
          }
        },
        "assignPosition": {
          "lineNumber": 7,
          "charNumber": 6
        }
      },
      null,
      {
        "expressions": [
          {
            "leftOperand": {
              "decl": {
                "scopeLevel": "PROGRAM",
                "relAddr": 0,
                "idToken": {
                  "symbol": "identifier",
                  "position": {
                    "lineNumber": 2,
                    "charNumber": 5
                  },
                  "text": "x"
                },
                "type": {
                  "name": "Integer",
                  "size": 4
                }
              },
              "indexExprs": [],
              "exprType": {
                "name": "Integer",
                "size": 4
              },
              "exprPosition": {
                "lineNumber": 9,
                "charNumber": 12
              }
            },
            "operator": {
              "symbol": "plus",
              "position": {
                "lineNumber": 9,
                "charNumber": 14
              },
              "text": "+"
            },
            "rightOperand": {
              "literal": {
                "symbol": "intLiteral",
                "position": {
                  "lineNumber": 1,
                  "charNumber": 15
                },
                "text": "5"
              },
              "exprType": {
                "name": "Integer",
                "size": 4
              },
              "exprPosition": {
                "lineNumber": 9,
                "charNumber": 16
              }
            },
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 9,
              "charNumber": 14
            }
          }
        ]
      }
    ]
  },
  "varLength": 0,
  "L1": "L0"
}
<sep>
Parsing Incorrect_116.cprl...
Parsing complete.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 5
          },
          "text": "x"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ],
    "subprogDecls": []
  },
  "stmtPart": {
    "statements": [
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 1,
                "charNumber": 5
              },
              "text": "x"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 5,
            "charNumber": 4
          }
        },
        "expr": {
          "literal": {
            "symbol": "intLiteral",
            "position": {
              "lineNumber": 5,
              "charNumber": 9
            },
            "text": "1"
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 5,
            "charNumber": 9
          }
        },
        "assignPosition": {
          "lineNumber": 5,
          "charNumber": 6
        }
      },
      {
        "whileExpr": {
          "leftOperand": {
            "literal": {
              "symbol": "intLiteral",
              "position": {
                "lineNumber": 7,
                "charNumber": 10
              },
              "text": "2"
            },
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 7,
              "charNumber": 10
            }
          },
          "operator": {
            "symbol": "plus",
            "position": {
              "lineNumber": 7,
              "charNumber": 12
            },
            "text": "+"
          },
          "rightOperand": {
            "literal": {
              "symbol": "intLiteral",
              "position": {
                "lineNumber": 7,
                "charNumber": 14
              },
              "text": "2"
            },
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 7,
              "charNumber": 14
            }
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 7,
            "charNumber": 12
          }
        },
        "statements": [
          {
            "variable": {
              "decl": {
                "scopeLevel": "PROGRAM",
                "relAddr": 0,
                "idToken": {
                  "symbol": "identifier",
                  "position": {
                    "lineNumber": 1,
                    "charNumber": 5
                  },
                  "text": "x"
                },
                "type": {
                  "name": "Integer",
                  "size": 4
                }
              },
              "indexExprs": [],
              "exprType": {
                "name": "Integer",
                "size": 4
              },
              "exprPosition": {
                "lineNumber": 8,
                "charNumber": 7
              }
            },
            "expr": {
              "leftOperand": {
                "decl": {
                  "scopeLevel": "PROGRAM",
                  "relAddr": 0,
                  "idToken": {
                    "symbol": "identifier",
                    "position": {
                      "lineNumber": 1,
                      "charNumber": 5
                    },
                    "text": "x"
                  },
                  "type": {
                    "name": "Integer",
                    "size": 4
                  }
                },
                "indexExprs": [],
                "exprType": {
                  "name": "Integer",
                  "size": 4
                },
                "exprPosition": {
                  "lineNumber": 8,
                  "charNumber": 12
                }
              },
              "operator": {
                "symbol": "plus",
                "position": {
                  "lineNumber": 8,
                  "charNumber": 14
                },
                "text": "+"
              },
              "rightOperand": {
                "literal": {
                  "symbol": "intLiteral",
                  "position": {
                    "lineNumber": 8,
                    "charNumber": 16
                  },
                  "text": "1"
                },
                "exprType": {
                  "name": "Integer",
                  "size": 4
                },
                "exprPosition": {
                  "lineNumber": 8,
                  "charNumber": 16
                }
              },
              "exprType": {
                "name": "Integer",
                "size": 4
              },
              "exprPosition": {
                "lineNumber": 8,
                "charNumber": 14
              }
            },
            "assignPosition": {
              "lineNumber": 8,
              "charNumber": 9
            }
          }
        ],
        "L1": null,
        "L2": null
      },
      {
        "expressions": [
          {
            "literal": {
              "symbol": "stringLiteral",
              "position": {
                "lineNumber": 11,
                "charNumber": 12
              },
              "text": "\"x \u003d \""
            },
            "exprType": {
              "name": "String",
              "size": 0
            },
            "exprPosition": {
              "lineNumber": 11,
              "charNumber": 12
            }
          },
          {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 1,
                  "charNumber": 5
                },
                "text": "x"
              },
              "type": {
                "name": "Integer",
                "size": 4
              }
            },
            "indexExprs": [],
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 11,
              "charNumber": 20
            }
          }
        ]
      }
    ]
  },
  "varLength": 0,
  "L1": "L0"
}
<sep>
Parsing Incorrect_117.cprl...
Parsing complete.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 5
          },
          "text": "m"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      },
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 8
          },
          "text": "n"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      },
      {
        "literal": {
          "symbol": "intLiteral",
          "position": {
            "lineNumber": 2,
            "charNumber": 15
          },
          "text": "5"
        },
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 2,
            "charNumber": 7
          },
          "text": "five"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ],
    "subprogDecls": []
  },
  "stmtPart": {
    "statements": [
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 1,
                "charNumber": 5
              },
              "text": "m"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 6,
            "charNumber": 4
          }
        },
        "expr": {
          "literal": {
            "symbol": "intLiteral",
            "position": {
              "lineNumber": 6,
              "charNumber": 9
            },
            "text": "9999999999999"
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 6,
            "charNumber": 9
          }
        },
        "assignPosition": {
          "lineNumber": 6,
          "charNumber": 6
        }
      },
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 1,
                "charNumber": 8
              },
              "text": "n"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 7,
            "charNumber": 4
          }
        },
        "expr": {
          "leftOperand": {
            "literal": {
              "symbol": "intLiteral",
              "position": {
                "lineNumber": 2,
                "charNumber": 15
              },
              "text": "5"
            },
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 7,
              "charNumber": 9
            }
          },
          "operator": {
            "symbol": "times",
            "position": {
              "lineNumber": 7,
              "charNumber": 13
            },
            "text": "*"
          },
          "rightOperand": {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 1,
                  "charNumber": 5
                },
                "text": "m"
              },
              "type": {
                "name": "Integer",
                "size": 4
              }
            },
            "indexExprs": [],
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 7,
              "charNumber": 14
            }
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 7,
            "charNumber": 13
          }
        },
        "assignPosition": {
          "lineNumber": 7,
          "charNumber": 6
        }
      },
      {
        "expressions": [
          {
            "literal": {
              "symbol": "stringLiteral",
              "position": {
                "lineNumber": 9,
                "charNumber": 12
              },
              "text": "\"n \u003d \""
            },
            "exprType": {
              "name": "String",
              "size": 0
            },
            "exprPosition": {
              "lineNumber": 9,
              "charNumber": 12
            }
          },
          {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 1,
                  "charNumber": 8
                },
                "text": "n"
              },
              "type": {
                "name": "Integer",
                "size": 4
              }
            },
            "indexExprs": [],
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 9,
              "charNumber": 20
            }
          }
        ]
      }
    ]
  },
  "varLength": 0,
  "L1": "L0"
}
<sep>
Parsing Incorrect_118.cprl...
Parsing complete.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 5
          },
          "text": "n"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      },
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 2,
            "charNumber": 5
          },
          "text": "b"
        },
        "type": {
          "name": "Boolean",
          "size": 1
        }
      }
    ],
    "subprogDecls": []
  },
  "stmtPart": {
    "statements": [
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 1,
                "charNumber": 5
              },
              "text": "n"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 6,
            "charNumber": 4
          }
        },
        "expr": {
          "literal": {
            "symbol": "intLiteral",
            "position": {
              "lineNumber": 6,
              "charNumber": 9
            },
            "text": "7"
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 6,
            "charNumber": 9
          }
        },
        "assignPosition": {
          "lineNumber": 6,
          "charNumber": 6
        }
      },
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 2,
                "charNumber": 5
              },
              "text": "b"
            },
            "type": {
              "name": "Boolean",
              "size": 1
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Boolean",
            "size": 1
          },
          "exprPosition": {
            "lineNumber": 7,
            "charNumber": 4
          }
        },
        "expr": {
          "operator": {
            "symbol": "notRW",
            "position": {
              "lineNumber": 7,
              "charNumber": 9
            },
            "text": "not"
          },
          "operand": {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 1,
                  "charNumber": 5
                },
                "text": "n"
              },
              "type": {
                "name": "Integer",
                "size": 4
              }
            },
            "indexExprs": [],
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 7,
              "charNumber": 13
            }
          },
          "exprType": {
            "name": "Boolean",
            "size": 1
          },
          "exprPosition": {
            "lineNumber": 7,
            "charNumber": 9
          }
        },
        "assignPosition": {
          "lineNumber": 7,
          "charNumber": 6
        }
      },
      {
        "expressions": [
          {
            "literal": {
              "symbol": "stringLiteral",
              "position": {
                "lineNumber": 9,
                "charNumber": 12
              },
              "text": "\"b \u003d \""
            },
            "exprType": {
              "name": "String",
              "size": 0
            },
            "exprPosition": {
              "lineNumber": 9,
              "charNumber": 12
            }
          },
          {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 2,
                  "charNumber": 5
                },
                "text": "b"
              },
              "type": {
                "name": "Boolean",
                "size": 1
              }
            },
            "indexExprs": [],
            "exprType": {
              "name": "Boolean",
              "size": 1
            },
            "exprPosition": {
              "lineNumber": 9,
              "charNumber": 20
            }
          }
        ]
      }
    ]
  },
  "varLength": 0,
  "L1": "L0"
}
<sep>
Parsing Incorrect_119.cprl...
Parsing complete.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 5
          },
          "text": "n"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      },
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 2,
            "charNumber": 5
          },
          "text": "b"
        },
        "type": {
          "name": "Boolean",
          "size": 1
        }
      },
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 2,
            "charNumber": 8
          },
          "text": "c"
        },
        "type": {
          "name": "Boolean",
          "size": 1
        }
      }
    ],
    "subprogDecls": []
  },
  "stmtPart": {
    "statements": [
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 2,
                "charNumber": 5
              },
              "text": "b"
            },
            "type": {
              "name": "Boolean",
              "size": 1
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Boolean",
            "size": 1
          },
          "exprPosition": {
            "lineNumber": 6,
            "charNumber": 4
          }
        },
        "expr": {
          "literal": {
            "symbol": "trueRW",
            "position": {
              "lineNumber": 6,
              "charNumber": 9
            },
            "text": "true"
          },
          "exprType": {
            "name": "Boolean",
            "size": 1
          },
          "exprPosition": {
            "lineNumber": 6,
            "charNumber": 9
          }
        },
        "assignPosition": {
          "lineNumber": 6,
          "charNumber": 6
        }
      },
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 1,
                "charNumber": 5
              },
              "text": "n"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 7,
            "charNumber": 4
          }
        },
        "expr": {
          "literal": {
            "symbol": "intLiteral",
            "position": {
              "lineNumber": 7,
              "charNumber": 9
            },
            "text": "7"
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 7,
            "charNumber": 9
          }
        },
        "assignPosition": {
          "lineNumber": 7,
          "charNumber": 6
        }
      },
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 2,
                "charNumber": 8
              },
              "text": "c"
            },
            "type": {
              "name": "Boolean",
              "size": 1
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Boolean",
            "size": 1
          },
          "exprPosition": {
            "lineNumber": 8,
            "charNumber": 4
          }
        },
        "expr": {
          "L1": "L0",
          "L2": "L1",
          "leftOperand": {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 2,
                  "charNumber": 5
                },
                "text": "b"
              },
              "type": {
                "name": "Boolean",
                "size": 1
              }
            },
            "indexExprs": [],
            "exprType": {
              "name": "Boolean",
              "size": 1
            },
            "exprPosition": {
              "lineNumber": 8,
              "charNumber": 9
            }
          },
          "operator": {
            "symbol": "andRW",
            "position": {
              "lineNumber": 8,
              "charNumber": 11
            },
            "text": "and"
          },
          "rightOperand": {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 1,
                  "charNumber": 5
                },
                "text": "n"
              },
              "type": {
                "name": "Integer",
                "size": 4
              }
            },
            "indexExprs": [],
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 8,
              "charNumber": 15
            }
          },
          "exprType": {
            "name": "Boolean",
            "size": 1
          },
          "exprPosition": {
            "lineNumber": 8,
            "charNumber": 11
          }
        },
        "assignPosition": {
          "lineNumber": 8,
          "charNumber": 6
        }
      },
      {
        "expressions": [
          {
            "literal": {
              "symbol": "stringLiteral",
              "position": {
                "lineNumber": 10,
                "charNumber": 12
              },
              "text": "\"n \u003d \""
            },
            "exprType": {
              "name": "String",
              "size": 0
            },
            "exprPosition": {
              "lineNumber": 10,
              "charNumber": 12
            }
          },
          {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 1,
                  "charNumber": 5
                },
                "text": "n"
              },
              "type": {
                "name": "Integer",
                "size": 4
              }
            },
            "indexExprs": [],
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 10,
              "charNumber": 20
            }
          }
        ]
      }
    ]
  },
  "varLength": 0,
  "L1": "L2"
}
<sep>
Parsing Incorrect_120.cprl...
Parsing complete.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 5
          },
          "text": "x"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ],
    "subprogDecls": []
  },
  "stmtPart": {
    "statements": [
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 1,
                "charNumber": 5
              },
              "text": "x"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 5,
            "charNumber": 4
          }
        },
        "expr": {
          "literal": {
            "symbol": "intLiteral",
            "position": {
              "lineNumber": 5,
              "charNumber": 9
            },
            "text": "1"
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 5,
            "charNumber": 9
          }
        },
        "assignPosition": {
          "lineNumber": 5,
          "charNumber": 6
        }
      },
      {
        "whileExpr": null,
        "statements": [
          {
            "variable": {
              "decl": {
                "scopeLevel": "PROGRAM",
                "relAddr": 0,
                "idToken": {
                  "symbol": "identifier",
                  "position": {
                    "lineNumber": 1,
                    "charNumber": 5
                  },
                  "text": "x"
                },
                "type": {
                  "name": "Integer",
                  "size": 4
                }
              },
              "indexExprs": [],
              "exprType": {
                "name": "Integer",
                "size": 4
              },
              "exprPosition": {
                "lineNumber": 8,
                "charNumber": 7
              }
            },
            "expr": {
              "leftOperand": {
                "decl": {
                  "scopeLevel": "PROGRAM",
                  "relAddr": 0,
                  "idToken": {
                    "symbol": "identifier",
                    "position": {
                      "lineNumber": 1,
                      "charNumber": 5
                    },
                    "text": "x"
                  },
                  "type": {
                    "name": "Integer",
                    "size": 4
                  }
                },
                "indexExprs": [],
                "exprType": {
                  "name": "Integer",
                  "size": 4
                },
                "exprPosition": {
                  "lineNumber": 8,
                  "charNumber": 12
                }
              },
              "operator": {
                "symbol": "plus",
                "position": {
                  "lineNumber": 8,
                  "charNumber": 14
                },
                "text": "+"
              },
              "rightOperand": {
                "literal": {
                  "symbol": "intLiteral",
                  "position": {
                    "lineNumber": 8,
                    "charNumber": 16
                  },
                  "text": "1"
                },
                "exprType": {
                  "name": "Integer",
                  "size": 4
                },
                "exprPosition": {
                  "lineNumber": 8,
                  "charNumber": 16
                }
              },
              "exprType": {
                "name": "Integer",
                "size": 4
              },
              "exprPosition": {
                "lineNumber": 8,
                "charNumber": 14
              }
            },
            "assignPosition": {
              "lineNumber": 8,
              "charNumber": 9
            }
          },
          {
            "whenExpr": {
              "decl": {
                "scopeLevel": "PROGRAM",
                "relAddr": 0,
                "idToken": {
                  "symbol": "identifier",
                  "position": {
                    "lineNumber": 1,
                    "charNumber": 5
                  },
                  "text": "x"
                },
                "type": {
                  "name": "Integer",
                  "size": 4
                }
              },
              "indexExprs": [],
              "exprType": {
                "name": "Integer",
                "size": 4
              },
              "exprPosition": {
                "lineNumber": 9,
                "charNumber": 17
              }
            }
          }
        ],
        "L1": null,
        "L2": null
      },
      {
        "expressions": [
          {
            "literal": {
              "symbol": "stringLiteral",
              "position": {
                "lineNumber": 12,
                "charNumber": 12
              },
              "text": "\"x \u003d \""
            },
            "exprType": {
              "name": "String",
              "size": 0
            },
            "exprPosition": {
              "lineNumber": 12,
              "charNumber": 12
            }
          },
          {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 1,
                  "charNumber": 5
                },
                "text": "x"
              },
              "type": {
                "name": "Integer",
                "size": 4
              }
            },
            "indexExprs": [],
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 12,
              "charNumber": 20
            }
          }
        ]
      }
    ]
  },
  "varLength": 0,
  "L1": "L0"
}
<sep>
Parsing Incorrect_121.cprl...
Parsing complete.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 5
          },
          "text": "x"
        },
        "type": {
          "name": "Boolean",
          "size": 1
        }
      }
    ],
    "subprogDecls": []
  },
  "stmtPart": {
    "statements": [
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 1,
                "charNumber": 5
              },
              "text": "x"
            },
            "type": {
              "name": "Boolean",
              "size": 1
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Boolean",
            "size": 1
          },
          "exprPosition": {
            "lineNumber": 5,
            "charNumber": 9
          }
        }
      },
      {
        "expressions": [
          {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 1,
                  "charNumber": 5
                },
                "text": "x"
              },
              "type": {
                "name": "Boolean",
                "size": 1
              }
            },
            "indexExprs": [],
            "exprType": {
              "name": "Boolean",
              "size": 1
            },
            "exprPosition": {
              "lineNumber": 6,
              "charNumber": 12
            }
          }
        ]
      }
    ]
  },
  "varLength": 0,
  "L1": "L0"
}
<sep>
Parsing Incorrect_122.cprl...
*** Lexical error detected near line 8, character 30:
    Illegal escape character.
*** Lexical error detected near line 9, character 30:
    Illegal escape character.
Errors detected in Incorrect_122.cprl -- parsing terminated.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [],
    "subprogDecls": []
  },
  "stmtPart": {
    "statements": [
      {
        "expressions": [
          {
            "literal": {
              "symbol": "stringLiteral",
              "position": {
                "lineNumber": 4,
                "charNumber": 12
              },
              "text": "\"string with \\\\n: \\nremaining text.\""
            },
            "exprType": {
              "name": "String",
              "size": 0
            },
            "exprPosition": {
              "lineNumber": 4,
              "charNumber": 12
            }
          }
        ]
      },
      {
        "expressions": [
          {
            "literal": {
              "symbol": "stringLiteral",
              "position": {
                "lineNumber": 5,
                "charNumber": 12
              },
              "text": "\"string with \\\\t: \\tremaining text.\""
            },
            "exprType": {
              "name": "String",
              "size": 0
            },
            "exprPosition": {
              "lineNumber": 5,
              "charNumber": 12
            }
          }
        ]
      },
      {
        "expressions": [
          {
            "literal": {
              "symbol": "stringLiteral",
              "position": {
                "lineNumber": 8,
                "charNumber": 12
              },
              "text": "\"string with \\\\a: \\aremaining text.\""
            },
            "exprType": {
              "name": "String",
              "size": 0
            },
            "exprPosition": {
              "lineNumber": 8,
              "charNumber": 12
            }
          }
        ]
      },
      {
        "expressions": [
          {
            "literal": {
              "symbol": "stringLiteral",
              "position": {
                "lineNumber": 9,
                "charNumber": 12
              },
              "text": "\"string with \\\\x: \\xremaining text.\""
            },
            "exprType": {
              "name": "String",
              "size": 0
            },
            "exprPosition": {
              "lineNumber": 9,
              "charNumber": 12
            }
          }
        ]
      }
    ]
  },
  "varLength": 0,
  "L1": "L0"
}
<sep>
Parsing Incorrect_123.cprl...
*** Lexical error detected near line 8, character 37:
    Illegal escape character.
*** Lexical error detected near line 9, character 37:
    Illegal escape character.
Errors detected in Incorrect_123.cprl -- parsing terminated.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [],
    "subprogDecls": []
  },
  "stmtPart": {
    "statements": [
      {
        "expressions": [
          {
            "literal": {
              "symbol": "stringLiteral",
              "position": {
                "lineNumber": 4,
                "charNumber": 12
              },
              "text": "\"character with \\\\n: \""
            },
            "exprType": {
              "name": "String",
              "size": 0
            },
            "exprPosition": {
              "lineNumber": 4,
              "charNumber": 12
            }
          },
          {
            "literal": {
              "symbol": "charLiteral",
              "position": {
                "lineNumber": 4,
                "charNumber": 36
              },
              "text": "\u0027\\n\u0027"
            },
            "exprType": {
              "name": "Char",
              "size": 2
            },
            "exprPosition": {
              "lineNumber": 4,
              "charNumber": 36
            }
          },
          {
            "literal": {
              "symbol": "stringLiteral",
              "position": {
                "lineNumber": 4,
                "charNumber": 42
              },
              "text": "\"remaining text.\""
            },
            "exprType": {
              "name": "String",
              "size": 0
            },
            "exprPosition": {
              "lineNumber": 4,
              "charNumber": 42
            }
          }
        ]
      },
      {
        "expressions": [
          {
            "literal": {
              "symbol": "stringLiteral",
              "position": {
                "lineNumber": 5,
                "charNumber": 12
              },
              "text": "\"character with \\\\t: \""
            },
            "exprType": {
              "name": "String",
              "size": 0
            },
            "exprPosition": {
              "lineNumber": 5,
              "charNumber": 12
            }
          },
          {
            "literal": {
              "symbol": "charLiteral",
              "position": {
                "lineNumber": 5,
                "charNumber": 36
              },
              "text": "\u0027\\t\u0027"
            },
            "exprType": {
              "name": "Char",
              "size": 2
            },
            "exprPosition": {
              "lineNumber": 5,
              "charNumber": 36
            }
          },
          {
            "literal": {
              "symbol": "stringLiteral",
              "position": {
                "lineNumber": 5,
                "charNumber": 42
              },
              "text": "\"remaining text.\""
            },
            "exprType": {
              "name": "String",
              "size": 0
            },
            "exprPosition": {
              "lineNumber": 5,
              "charNumber": 42
            }
          }
        ]
      },
      {
        "expressions": [
          {
            "literal": {
              "symbol": "stringLiteral",
              "position": {
                "lineNumber": 8,
                "charNumber": 12
              },
              "text": "\"character with \\\\a: \""
            },
            "exprType": {
              "name": "String",
              "size": 0
            },
            "exprPosition": {
              "lineNumber": 8,
              "charNumber": 12
            }
          },
          {
            "literal": {
              "symbol": "charLiteral",
              "position": {
                "lineNumber": 8,
                "charNumber": 36
              },
              "text": "\u0027\\a\u0027"
            },
            "exprType": {
              "name": "Char",
              "size": 2
            },
            "exprPosition": {
              "lineNumber": 8,
              "charNumber": 36
            }
          },
          {
            "literal": {
              "symbol": "stringLiteral",
              "position": {
                "lineNumber": 8,
                "charNumber": 42
              },
              "text": "\"remaining text.\""
            },
            "exprType": {
              "name": "String",
              "size": 0
            },
            "exprPosition": {
              "lineNumber": 8,
              "charNumber": 42
            }
          }
        ]
      },
      {
        "expressions": [
          {
            "literal": {
              "symbol": "stringLiteral",
              "position": {
                "lineNumber": 9,
                "charNumber": 12
              },
              "text": "\"character with \\\\x: \""
            },
            "exprType": {
              "name": "String",
              "size": 0
            },
            "exprPosition": {
              "lineNumber": 9,
              "charNumber": 12
            }
          },
          {
            "literal": {
              "symbol": "charLiteral",
              "position": {
                "lineNumber": 9,
                "charNumber": 36
              },
              "text": "\u0027\\x\u0027"
            },
            "exprType": {
              "name": "Char",
              "size": 2
            },
            "exprPosition": {
              "lineNumber": 9,
              "charNumber": 36
            }
          },
          {
            "literal": {
              "symbol": "stringLiteral",
              "position": {
                "lineNumber": 9,
                "charNumber": 42
              },
              "text": "\"remaining text.\""
            },
            "exprType": {
              "name": "String",
              "size": 0
            },
            "exprPosition": {
              "lineNumber": 9,
              "charNumber": 42
            }
          }
        ]
      }
    ]
  },
  "varLength": 0,
  "L1": "L0"
}
<sep>
Parsing Incorrect_124.cprl...
Parsing complete.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 5
          },
          "text": "n"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      },
      {
        "literal": {
          "symbol": "intLiteral",
          "position": {
            "lineNumber": 2,
            "charNumber": 14
          },
          "text": "9999999999999"
        },
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 2,
            "charNumber": 7
          },
          "text": "big"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ],
    "subprogDecls": []
  },
  "stmtPart": {
    "statements": [
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 1,
                "charNumber": 5
              },
              "text": "n"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 6,
            "charNumber": 4
          }
        },
        "expr": {
          "literal": {
            "symbol": "intLiteral",
            "position": {
              "lineNumber": 2,
              "charNumber": 14
            },
            "text": "9999999999999"
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 6,
            "charNumber": 9
          }
        },
        "assignPosition": {
          "lineNumber": 6,
          "charNumber": 6
        }
      },
      {
        "expressions": [
          {
            "literal": {
              "symbol": "stringLiteral",
              "position": {
                "lineNumber": 7,
                "charNumber": 12
              },
              "text": "\"n \u003d \""
            },
            "exprType": {
              "name": "String",
              "size": 0
            },
            "exprPosition": {
              "lineNumber": 7,
              "charNumber": 12
            }
          },
          {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 1,
                  "charNumber": 5
                },
                "text": "n"
              },
              "type": {
                "name": "Integer",
                "size": 4
              }
            },
            "indexExprs": [],
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 7,
              "charNumber": 20
            }
          }
        ]
      }
    ]
  },
  "varLength": 0,
  "L1": "L0"
}
<sep>
Parsing Incorrect_125.cprl...
*** Syntax error detected near line 6, character 4:
    Return statement is not nested within a subprogram.
Errors detected in Incorrect_125.cprl -- parsing terminated.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 5
          },
          "text": "n"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ],
    "subprogDecls": []
  },
  "stmtPart": {
    "statements": [
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 1,
                "charNumber": 5
              },
              "text": "n"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 5,
            "charNumber": 4
          }
        },
        "expr": {
          "literal": {
            "symbol": "intLiteral",
            "position": {
              "lineNumber": 5,
              "charNumber": 9
            },
            "text": "5"
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 5,
            "charNumber": 9
          }
        },
        "assignPosition": {
          "lineNumber": 5,
          "charNumber": 6
        }
      },
      null
    ]
  },
  "varLength": 0,
  "L1": "L0"
}
<sep>
Parsing Incorrect_126.cprl...
*** Syntax error detected near line 9, character 7:
    Identifier "y" has not been declared.
Errors detected in Incorrect_126.cprl -- parsing terminated.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 5
          },
          "text": "x"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ],
    "subprogDecls": []
  },
  "stmtPart": {
    "statements": [
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 1,
                "charNumber": 5
              },
              "text": "x"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 5,
            "charNumber": 4
          }
        },
        "expr": {
          "literal": {
            "symbol": "intLiteral",
            "position": {
              "lineNumber": 5,
              "charNumber": 9
            },
            "text": "1"
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 5,
            "charNumber": 9
          }
        },
        "assignPosition": {
          "lineNumber": 5,
          "charNumber": 6
        }
      },
      {
        "whileExpr": null,
        "statements": [
          {
            "variable": {
              "decl": {
                "scopeLevel": "PROGRAM",
                "relAddr": 0,
                "idToken": {
                  "symbol": "identifier",
                  "position": {
                    "lineNumber": 1,
                    "charNumber": 5
                  },
                  "text": "x"
                },
                "type": {
                  "name": "Integer",
                  "size": 4
                }
              },
              "indexExprs": [],
              "exprType": {
                "name": "Integer",
                "size": 4
              },
              "exprPosition": {
                "lineNumber": 8,
                "charNumber": 7
              }
            },
            "expr": {
              "leftOperand": {
                "decl": {
                  "scopeLevel": "PROGRAM",
                  "relAddr": 0,
                  "idToken": {
                    "symbol": "identifier",
                    "position": {
                      "lineNumber": 1,
                      "charNumber": 5
                    },
                    "text": "x"
                  },
                  "type": {
                    "name": "Integer",
                    "size": 4
                  }
                },
                "indexExprs": [],
                "exprType": {
                  "name": "Integer",
                  "size": 4
                },
                "exprPosition": {
                  "lineNumber": 8,
                  "charNumber": 12
                }
              },
              "operator": {
                "symbol": "plus",
                "position": {
                  "lineNumber": 8,
                  "charNumber": 14
                },
                "text": "+"
              },
              "rightOperand": {
                "literal": {
                  "symbol": "intLiteral",
                  "position": {
                    "lineNumber": 8,
                    "charNumber": 16
                  },
                  "text": "1"
                },
                "exprType": {
                  "name": "Integer",
                  "size": 4
                },
                "exprPosition": {
                  "lineNumber": 8,
                  "charNumber": 16
                }
              },
              "exprType": {
                "name": "Integer",
                "size": 4
              },
              "exprPosition": {
                "lineNumber": 8,
                "charNumber": 14
              }
            },
            "assignPosition": {
              "lineNumber": 8,
              "charNumber": 9
            }
          },
          null,
          {
            "whenExpr": {
              "L1": "L0",
              "L2": "L1",
              "leftOperand": {
                "decl": {
                  "scopeLevel": "PROGRAM",
                  "relAddr": 0,
                  "idToken": {
                    "symbol": "identifier",
                    "position": {
                      "lineNumber": 1,
                      "charNumber": 5
                    },
                    "text": "x"
                  },
                  "type": {
                    "name": "Integer",
                    "size": 4
                  }
                },
                "indexExprs": [],
                "exprType": {
                  "name": "Integer",
                  "size": 4
                },
                "exprPosition": {
                  "lineNumber": 10,
                  "charNumber": 17
                }
              },
              "operator": {
                "symbol": "equals",
                "position": {
                  "lineNumber": 10,
                  "charNumber": 19
                },
                "text": "\u003d"
              },
              "rightOperand": {
                "literal": {
                  "symbol": "intLiteral",
                  "position": {
                    "lineNumber": 10,
                    "charNumber": 21
                  },
                  "text": "10"
                },
                "exprType": {
                  "name": "Integer",
                  "size": 4
                },
                "exprPosition": {
                  "lineNumber": 10,
                  "charNumber": 21
                }
              },
              "exprType": {
                "name": "Boolean",
                "size": 1
              },
              "exprPosition": {
                "lineNumber": 10,
                "charNumber": 19
              }
            }
          }
        ],
        "L1": null,
        "L2": null
      },
      {
        "expressions": [
          {
            "literal": {
              "symbol": "stringLiteral",
              "position": {
                "lineNumber": 13,
                "charNumber": 12
              },
              "text": "\"x \u003d \""
            },
            "exprType": {
              "name": "String",
              "size": 0
            },
            "exprPosition": {
              "lineNumber": 13,
              "charNumber": 12
            }
          },
          {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 1,
                  "charNumber": 5
                },
                "text": "x"
              },
              "type": {
                "name": "Integer",
                "size": 4
              }
            },
            "indexExprs": [],
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 13,
              "charNumber": 20
            }
          }
        ]
      }
    ]
  },
  "varLength": 0,
  "L1": "L2"
}
<sep>
Parsing Incorrect_127.cprl...
Parsing complete.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 5
          },
          "text": "i"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      },
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 2,
            "charNumber": 5
          },
          "text": "c"
        },
        "type": {
          "name": "Char",
          "size": 2
        }
      }
    ],
    "subprogDecls": []
  },
  "stmtPart": {
    "statements": [
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 1,
                "charNumber": 5
              },
              "text": "i"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 6,
            "charNumber": 4
          }
        },
        "expr": {
          "literal": {
            "symbol": "intLiteral",
            "position": {
              "lineNumber": 6,
              "charNumber": 9
            },
            "text": "1"
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 6,
            "charNumber": 9
          }
        },
        "assignPosition": {
          "lineNumber": 6,
          "charNumber": 6
        }
      },
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 2,
                "charNumber": 5
              },
              "text": "c"
            },
            "type": {
              "name": "Char",
              "size": 2
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Char",
            "size": 2
          },
          "exprPosition": {
            "lineNumber": 7,
            "charNumber": 4
          }
        },
        "expr": {
          "literal": {
            "symbol": "charLiteral",
            "position": {
              "lineNumber": 7,
              "charNumber": 9
            },
            "text": "\u0027c\u0027"
          },
          "exprType": {
            "name": "Char",
            "size": 2
          },
          "exprPosition": {
            "lineNumber": 7,
            "charNumber": 9
          }
        },
        "assignPosition": {
          "lineNumber": 7,
          "charNumber": 6
        }
      },
      {
        "booleanExpr": {
          "L1": "L0",
          "L2": "L1",
          "leftOperand": {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 1,
                  "charNumber": 5
                },
                "text": "i"
              },
              "type": {
                "name": "Integer",
                "size": 4
              }
            },
            "indexExprs": [],
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 9,
              "charNumber": 7
            }
          },
          "operator": {
            "symbol": "equals",
            "position": {
              "lineNumber": 9,
              "charNumber": 9
            },
            "text": "\u003d"
          },
          "rightOperand": {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 2,
                  "charNumber": 5
                },
                "text": "c"
              },
              "type": {
                "name": "Char",
                "size": 2
              }
            },
            "indexExprs": [],
            "exprType": {
              "name": "Char",
              "size": 2
            },
            "exprPosition": {
              "lineNumber": 9,
              "charNumber": 11
            }
          },
          "exprType": {
            "name": "Boolean",
            "size": 1
          },
          "exprPosition": {
            "lineNumber": 9,
            "charNumber": 9
          }
        },
        "thenStmts": [
          {
            "expressions": [
              {
                "literal": {
                  "symbol": "stringLiteral",
                  "position": {
                    "lineNumber": 11,
                    "charNumber": 14
                  },
                  "text": "\"bogus\""
                },
                "exprType": {
                  "name": "String",
                  "size": 0
                },
                "exprPosition": {
                  "lineNumber": 11,
                  "charNumber": 14
                }
              }
            ]
          }
        ],
        "elsifParts": [],
        "elseStmts": [],
        "L1": "L2",
        "L2": "L3"
      },
      {
        "booleanExpr": {
          "L1": "L4",
          "L2": "L5",
          "leftOperand": {
            "literal": {
              "symbol": "stringLiteral",
              "position": {
                "lineNumber": 14,
                "charNumber": 7
              },
              "text": "\"c\""
            },
            "exprType": {
              "name": "String",
              "size": 0
            },
            "exprPosition": {
              "lineNumber": 14,
              "charNumber": 7
            }
          },
          "operator": {
            "symbol": "equals",
            "position": {
              "lineNumber": 14,
              "charNumber": 11
            },
            "text": "\u003d"
          },
          "rightOperand": {
            "literal": {
              "symbol": "stringLiteral",
              "position": {
                "lineNumber": 14,
                "charNumber": 13
              },
              "text": "\"c\""
            },
            "exprType": {
              "name": "String",
              "size": 0
            },
            "exprPosition": {
              "lineNumber": 14,
              "charNumber": 13
            }
          },
          "exprType": {
            "name": "Boolean",
            "size": 1
          },
          "exprPosition": {
            "lineNumber": 14,
            "charNumber": 11
          }
        },
        "thenStmts": [
          {
            "expressions": [
              {
                "literal": {
                  "symbol": "stringLiteral",
                  "position": {
                    "lineNumber": 16,
                    "charNumber": 14
                  },
                  "text": "\"bogus\""
                },
                "exprType": {
                  "name": "String",
                  "size": 0
                },
                "exprPosition": {
                  "lineNumber": 16,
                  "charNumber": 14
                }
              }
            ]
          }
        ],
        "elsifParts": [],
        "elseStmts": [],
        "L1": "L6",
        "L2": "L7"
      }
    ]
  },
  "varLength": 0,
  "L1": "L8"
}
<sep>
Parsing Incorrect_128.cprl...
*** Syntax error detected near line 8, character 1:
    Expecting "end" but found "and" instead.
Errors detected in Incorrect_128.cprl -- parsing terminated.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "literal": {
          "symbol": "intLiteral",
          "position": {
            "lineNumber": 1,
            "charNumber": 12
          },
          "text": "2"
        },
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 7
          },
          "text": "i"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      },
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 2,
            "charNumber": 5
          },
          "text": "x"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ],
    "subprogDecls": []
  },
  "stmtPart": null,
  "varLength": 0,
  "L1": "L0"
}
<sep>
Parsing Incorrect_129.cprl...
*** Syntax error detected near line 1, character 8:
    Expecting ":=" but found "," instead.
Errors detected in Incorrect_129.cprl -- parsing terminated.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      null,
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 4,
            "charNumber": 5
          },
          "text": "x"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ],
    "subprogDecls": [
      {
        "formalParams": [
          {
            "relAddr": 0,
            "isVarParam": false,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 6,
                "charNumber": 17
              },
              "text": "n"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          }
        ],
        "initialDecls": [],
        "stmtPart": {
          "statements": [
            {
              "returnExpr": {
                "leftOperand": {
                  "decl": {
                    "relAddr": 0,
                    "isVarParam": false,
                    "idToken": {
                      "symbol": "identifier",
                      "position": {
                        "lineNumber": 6,
                        "charNumber": 17
                      },
                      "text": "n"
                    },
                    "type": {
                      "name": "Integer",
                      "size": 4
                    }
                  },
                  "indexExprs": [],
                  "exprType": {
                    "name": "Integer",
                    "size": 4
                  },
                  "exprPosition": {
                    "lineNumber": 7,
                    "charNumber": 14
                  }
                },
                "operator": {
                  "symbol": "plus",
                  "position": {
                    "lineNumber": 7,
                    "charNumber": 15
                  },
                  "text": "+"
                },
                "rightOperand": {
                  "literal": {
                    "symbol": "intLiteral",
                    "position": {
                      "lineNumber": 7,
                      "charNumber": 16
                    },
                    "text": "1"
                  },
                  "exprType": {
                    "name": "Integer",
                    "size": 4
                  },
                  "exprPosition": {
                    "lineNumber": 7,
                    "charNumber": 16
                  }
                },
                "exprType": {
                  "name": "Integer",
                  "size": 4
                },
                "exprPosition": {
                  "lineNumber": 7,
                  "charNumber": 15
                }
              },
              "returnPosition": {
                "lineNumber": 7,
                "charNumber": 7
              }
            }
          ]
        },
        "varLength": 0,
        "L1": "L0",
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 6,
            "charNumber": 10
          },
          "text": "addOne"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ]
  },
  "stmtPart": {
    "statements": [
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 4,
                "charNumber": 5
              },
              "text": "x"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 10,
            "charNumber": 4
          }
        },
        "expr": {
          "literal": {
            "symbol": "intLiteral",
            "position": {
              "lineNumber": 10,
              "charNumber": 7
            },
            "text": "5"
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 10,
            "charNumber": 7
          }
        },
        "assignPosition": {
          "lineNumber": 10,
          "charNumber": 5
        }
      },
      {
        "expressions": [
          {
            "funcId": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 10,
                "charNumber": 17
              },
              "text": "addOne"
            },
            "actualParams": [
              {
                "decl": {
                  "scopeLevel": "PROGRAM",
                  "relAddr": 0,
                  "idToken": {
                    "symbol": "identifier",
                    "position": {
                      "lineNumber": 4,
                      "charNumber": 5
                    },
                    "text": "x"
                  },
                  "type": {
                    "name": "Integer",
                    "size": 4
                  }
                },
                "indexExprs": [],
                "exprType": {
                  "name": "Integer",
                  "size": 4
                },
                "exprPosition": {
                  "lineNumber": 10,
                  "charNumber": 24
                }
              }
            ],
            "funcDecl": {
              "formalParams": [
                {
                  "relAddr": 0,
                  "isVarParam": false,
                  "idToken": {
                    "symbol": "identifier",
                    "position": {
                      "lineNumber": 6,
                      "charNumber": 17
                    },
                    "text": "n"
                  },
                  "type": {
                    "name": "Integer",
                    "size": 4
                  }
                }
              ],
              "initialDecls": [],
              "stmtPart": {
                "statements": [
                  {
                    "returnExpr": {
                      "leftOperand": {
                        "decl": {
                          "relAddr": 0,
                          "isVarParam": false,
                          "idToken": {
                            "symbol": "identifier",
                            "position": {
                              "lineNumber": 6,
                              "charNumber": 17
                            },
                            "text": "n"
                          },
                          "type": {
                            "name": "Integer",
                            "size": 4
                          }
                        },
                        "indexExprs": [],
                        "exprType": {
                          "name": "Integer",
                          "size": 4
                        },
                        "exprPosition": {
                          "lineNumber": 7,
                          "charNumber": 14
                        }
                      },
                      "operator": {
                        "symbol": "plus",
                        "position": {
                          "lineNumber": 7,
                          "charNumber": 15
                        },
                        "text": "+"
                      },
                      "rightOperand": {
                        "literal": {
                          "symbol": "intLiteral",
                          "position": {
                            "lineNumber": 7,
                            "charNumber": 16
                          },
                          "text": "1"
                        },
                        "exprType": {
                          "name": "Integer",
                          "size": 4
                        },
                        "exprPosition": {
                          "lineNumber": 7,
                          "charNumber": 16
                        }
                      },
                      "exprType": {
                        "name": "Integer",
                        "size": 4
                      },
                      "exprPosition": {
                        "lineNumber": 7,
                        "charNumber": 15
                      }
                    },
                    "returnPosition": {
                      "lineNumber": 7,
                      "charNumber": 7
                    }
                  }
                ]
              },
              "varLength": 0,
              "L1": "L0",
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 6,
                  "charNumber": 10
                },
                "text": "addOne"
              },
              "type": {
                "name": "Integer",
                "size": 4
              }
            },
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 10,
              "charNumber": 17
            }
          }
        ]
      }
    ]
  },
  "varLength": 0,
  "L1": "L1"
}
<sep>
Parsing Incorrect_201.cprl...
Parsing complete.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 7
          },
          "text": "x"
        },
        "type": {
          "name": "Boolean",
          "size": 1
        }
      },
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 10
          },
          "text": "y"
        },
        "type": {
          "name": "Boolean",
          "size": 1
        }
      },
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 2,
            "charNumber": 7
          },
          "text": "n"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ],
    "subprogDecls": [
      {
        "formalParams": [
          {
            "relAddr": 0,
            "isVarParam": false,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 4,
                "charNumber": 12
              },
              "text": "b"
            },
            "type": {
              "name": "Boolean",
              "size": 1
            }
          }
        ],
        "initialDecls": [],
        "stmtPart": {
          "statements": [
            {
              "booleanExpr": {
                "decl": {
                  "relAddr": 0,
                  "isVarParam": false,
                  "idToken": {
                    "symbol": "identifier",
                    "position": {
                      "lineNumber": 4,
                      "charNumber": 12
                    },
                    "text": "b"
                  },
                  "type": {
                    "name": "Boolean",
                    "size": 1
                  }
                },
                "indexExprs": [],
                "exprType": {
                  "name": "Boolean",
                  "size": 1
                },
                "exprPosition": {
                  "lineNumber": 7,
                  "charNumber": 6
                }
              },
              "thenStmts": [
                {
                  "returnExpr": {
                    "literal": {
                      "symbol": "intLiteral",
                      "position": {
                        "lineNumber": 8,
                        "charNumber": 13
                      },
                      "text": "1"
                    },
                    "exprType": {
                      "name": "Integer",
                      "size": 4
                    },
                    "exprPosition": {
                      "lineNumber": 8,
                      "charNumber": 13
                    }
                  },
                  "returnPosition": {
                    "lineNumber": 8,
                    "charNumber": 6
                  }
                }
              ],
              "elsifParts": [],
              "elseStmts": [
                {
                  "returnExpr": {
                    "operator": {
                      "symbol": "minus",
                      "position": {
                        "lineNumber": 10,
                        "charNumber": 13
                      },
                      "text": "-"
                    },
                    "operand": {
                      "literal": {
                        "symbol": "intLiteral",
                        "position": {
                          "lineNumber": 10,
                          "charNumber": 14
                        },
                        "text": "1"
                      },
                      "exprType": {
                        "name": "Integer",
                        "size": 4
                      },
                      "exprPosition": {
                        "lineNumber": 10,
                        "charNumber": 14
                      }
                    },
                    "exprType": {
                      "name": "Integer",
                      "size": 4
                    },
                    "exprPosition": {
                      "lineNumber": 10,
                      "charNumber": 13
                    }
                  },
                  "returnPosition": {
                    "lineNumber": 10,
                    "charNumber": 6
                  }
                }
              ],
              "L1": "L1",
              "L2": "L2"
            }
          ]
        },
        "varLength": 0,
        "L1": "L0",
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 4,
            "charNumber": 10
          },
          "text": "f"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ]
  },
  "stmtPart": {
    "statements": [
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 1,
                "charNumber": 10
              },
              "text": "y"
            },
            "type": {
              "name": "Boolean",
              "size": 1
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Boolean",
            "size": 1
          },
          "exprPosition": {
            "lineNumber": 17,
            "charNumber": 4
          }
        },
        "expr": {
          "funcId": {
            "symbol": "identifier",
            "position": {
              "lineNumber": 17,
              "charNumber": 9
            },
            "text": "f"
          },
          "actualParams": [
            {
              "decl": {
                "scopeLevel": "PROGRAM",
                "relAddr": 0,
                "idToken": {
                  "symbol": "identifier",
                  "position": {
                    "lineNumber": 1,
                    "charNumber": 7
                  },
                  "text": "x"
                },
                "type": {
                  "name": "Boolean",
                  "size": 1
                }
              },
              "indexExprs": [],
              "exprType": {
                "name": "Boolean",
                "size": 1
              },
              "exprPosition": {
                "lineNumber": 17,
                "charNumber": 11
              }
            }
          ],
          "funcDecl": {
            "formalParams": [
              {
                "relAddr": 0,
                "isVarParam": false,
                "idToken": {
                  "symbol": "identifier",
                  "position": {
                    "lineNumber": 4,
                    "charNumber": 12
                  },
                  "text": "b"
                },
                "type": {
                  "name": "Boolean",
                  "size": 1
                }
              }
            ],
            "initialDecls": [],
            "stmtPart": {
              "statements": [
                {
                  "booleanExpr": {
                    "decl": {
                      "relAddr": 0,
                      "isVarParam": false,
                      "idToken": {
                        "symbol": "identifier",
                        "position": {
                          "lineNumber": 4,
                          "charNumber": 12
                        },
                        "text": "b"
                      },
                      "type": {
                        "name": "Boolean",
                        "size": 1
                      }
                    },
                    "indexExprs": [],
                    "exprType": {
                      "name": "Boolean",
                      "size": 1
                    },
                    "exprPosition": {
                      "lineNumber": 7,
                      "charNumber": 6
                    }
                  },
                  "thenStmts": [
                    {
                      "returnExpr": {
                        "literal": {
                          "symbol": "intLiteral",
                          "position": {
                            "lineNumber": 8,
                            "charNumber": 13
                          },
                          "text": "1"
                        },
                        "exprType": {
                          "name": "Integer",
                          "size": 4
                        },
                        "exprPosition": {
                          "lineNumber": 8,
                          "charNumber": 13
                        }
                      },
                      "returnPosition": {
                        "lineNumber": 8,
                        "charNumber": 6
                      }
                    }
                  ],
                  "elsifParts": [],
                  "elseStmts": [
                    {
                      "returnExpr": {
                        "operator": {
                          "symbol": "minus",
                          "position": {
                            "lineNumber": 10,
                            "charNumber": 13
                          },
                          "text": "-"
                        },
                        "operand": {
                          "literal": {
                            "symbol": "intLiteral",
                            "position": {
                              "lineNumber": 10,
                              "charNumber": 14
                            },
                            "text": "1"
                          },
                          "exprType": {
                            "name": "Integer",
                            "size": 4
                          },
                          "exprPosition": {
                            "lineNumber": 10,
                            "charNumber": 14
                          }
                        },
                        "exprType": {
                          "name": "Integer",
                          "size": 4
                        },
                        "exprPosition": {
                          "lineNumber": 10,
                          "charNumber": 13
                        }
                      },
                      "returnPosition": {
                        "lineNumber": 10,
                        "charNumber": 6
                      }
                    }
                  ],
                  "L1": "L1",
                  "L2": "L2"
                }
              ]
            },
            "varLength": 0,
            "L1": "L0",
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 4,
                "charNumber": 10
              },
              "text": "f"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 17,
            "charNumber": 9
          }
        },
        "assignPosition": {
          "lineNumber": 17,
          "charNumber": 6
        }
      },
      {
        "expressions": [
          {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 1,
                  "charNumber": 10
                },
                "text": "y"
              },
              "type": {
                "name": "Boolean",
                "size": 1
              }
            },
            "indexExprs": [],
            "exprType": {
              "name": "Boolean",
              "size": 1
            },
            "exprPosition": {
              "lineNumber": 18,
              "charNumber": 10
            }
          }
        ]
      },
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 2,
                "charNumber": 7
              },
              "text": "n"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 20,
            "charNumber": 4
          }
        },
        "expr": {
          "funcId": {
            "symbol": "identifier",
            "position": {
              "lineNumber": 20,
              "charNumber": 9
            },
            "text": "f"
          },
          "actualParams": [
            {
              "decl": {
                "scopeLevel": "PROGRAM",
                "relAddr": 0,
                "idToken": {
                  "symbol": "identifier",
                  "position": {
                    "lineNumber": 1,
                    "charNumber": 7
                  },
                  "text": "x"
                },
                "type": {
                  "name": "Boolean",
                  "size": 1
                }
              },
              "indexExprs": [],
              "exprType": {
                "name": "Boolean",
                "size": 1
              },
              "exprPosition": {
                "lineNumber": 20,
                "charNumber": 11
              }
            }
          ],
          "funcDecl": {
            "formalParams": [
              {
                "relAddr": 0,
                "isVarParam": false,
                "idToken": {
                  "symbol": "identifier",
                  "position": {
                    "lineNumber": 4,
                    "charNumber": 12
                  },
                  "text": "b"
                },
                "type": {
                  "name": "Boolean",
                  "size": 1
                }
              }
            ],
            "initialDecls": [],
            "stmtPart": {
              "statements": [
                {
                  "booleanExpr": {
                    "decl": {
                      "relAddr": 0,
                      "isVarParam": false,
                      "idToken": {
                        "symbol": "identifier",
                        "position": {
                          "lineNumber": 4,
                          "charNumber": 12
                        },
                        "text": "b"
                      },
                      "type": {
                        "name": "Boolean",
                        "size": 1
                      }
                    },
                    "indexExprs": [],
                    "exprType": {
                      "name": "Boolean",
                      "size": 1
                    },
                    "exprPosition": {
                      "lineNumber": 7,
                      "charNumber": 6
                    }
                  },
                  "thenStmts": [
                    {
                      "returnExpr": {
                        "literal": {
                          "symbol": "intLiteral",
                          "position": {
                            "lineNumber": 8,
                            "charNumber": 13
                          },
                          "text": "1"
                        },
                        "exprType": {
                          "name": "Integer",
                          "size": 4
                        },
                        "exprPosition": {
                          "lineNumber": 8,
                          "charNumber": 13
                        }
                      },
                      "returnPosition": {
                        "lineNumber": 8,
                        "charNumber": 6
                      }
                    }
                  ],
                  "elsifParts": [],
                  "elseStmts": [
                    {
                      "returnExpr": {
                        "operator": {
                          "symbol": "minus",
                          "position": {
                            "lineNumber": 10,
                            "charNumber": 13
                          },
                          "text": "-"
                        },
                        "operand": {
                          "literal": {
                            "symbol": "intLiteral",
                            "position": {
                              "lineNumber": 10,
                              "charNumber": 14
                            },
                            "text": "1"
                          },
                          "exprType": {
                            "name": "Integer",
                            "size": 4
                          },
                          "exprPosition": {
                            "lineNumber": 10,
                            "charNumber": 14
                          }
                        },
                        "exprType": {
                          "name": "Integer",
                          "size": 4
                        },
                        "exprPosition": {
                          "lineNumber": 10,
                          "charNumber": 13
                        }
                      },
                      "returnPosition": {
                        "lineNumber": 10,
                        "charNumber": 6
                      }
                    }
                  ],
                  "L1": "L1",
                  "L2": "L2"
                }
              ]
            },
            "varLength": 0,
            "L1": "L0",
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 4,
                "charNumber": 10
              },
              "text": "f"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 20,
            "charNumber": 9
          }
        },
        "assignPosition": {
          "lineNumber": 20,
          "charNumber": 6
        }
      },
      {
        "expressions": [
          {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 2,
                  "charNumber": 7
                },
                "text": "n"
              },
              "type": {
                "name": "Integer",
                "size": 4
              }
            },
            "indexExprs": [],
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 21,
              "charNumber": 10
            }
          }
        ]
      }
    ]
  },
  "varLength": 0,
  "L1": "L3"
}
<sep>
Parsing Incorrect_202.cprl...
Parsing complete.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "literal": {
          "symbol": "intLiteral",
          "position": {
            "lineNumber": 1,
            "charNumber": 12
          },
          "text": "5"
        },
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 7
          },
          "text": "i"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ],
    "subprogDecls": [
      {
        "formalParams": [
          {
            "relAddr": 0,
            "isVarParam": true,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 3,
                "charNumber": 19
              },
              "text": "n"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          }
        ],
        "initialDecls": [],
        "stmtPart": {
          "statements": [
            {
              "variable": {
                "decl": {
                  "relAddr": 0,
                  "isVarParam": true,
                  "idToken": {
                    "symbol": "identifier",
                    "position": {
                      "lineNumber": 3,
                      "charNumber": 19
                    },
                    "text": "n"
                  },
                  "type": {
                    "name": "Integer",
                    "size": 4
                  }
                },
                "indexExprs": [],
                "exprType": {
                  "name": "Integer",
                  "size": 4
                },
                "exprPosition": {
                  "lineNumber": 5,
                  "charNumber": 4
                }
              },
              "expr": {
                "leftOperand": {
                  "decl": {
                    "relAddr": 0,
                    "isVarParam": true,
                    "idToken": {
                      "symbol": "identifier",
                      "position": {
                        "lineNumber": 3,
                        "charNumber": 19
                      },
                      "text": "n"
                    },
                    "type": {
                      "name": "Integer",
                      "size": 4
                    }
                  },
                  "indexExprs": [],
                  "exprType": {
                    "name": "Integer",
                    "size": 4
                  },
                  "exprPosition": {
                    "lineNumber": 5,
                    "charNumber": 9
                  }
                },
                "operator": {
                  "symbol": "plus",
                  "position": {
                    "lineNumber": 5,
                    "charNumber": 11
                  },
                  "text": "+"
                },
                "rightOperand": {
                  "literal": {
                    "symbol": "intLiteral",
                    "position": {
                      "lineNumber": 5,
                      "charNumber": 13
                    },
                    "text": "1"
                  },
                  "exprType": {
                    "name": "Integer",
                    "size": 4
                  },
                  "exprPosition": {
                    "lineNumber": 5,
                    "charNumber": 13
                  }
                },
                "exprType": {
                  "name": "Integer",
                  "size": 4
                },
                "exprPosition": {
                  "lineNumber": 5,
                  "charNumber": 11
                }
              },
              "assignPosition": {
                "lineNumber": 5,
                "charNumber": 6
              }
            }
          ]
        },
        "varLength": 0,
        "L1": "L0",
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 3,
            "charNumber": 11
          },
          "text": "inc"
        },
        "type": {
          "name": "none",
          "size": 0
        }
      }
    ]
  },
  "stmtPart": {
    "statements": [
      {
        "procId": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 9,
            "charNumber": 4
          },
          "text": "inc"
        },
        "actualParams": [
          {
            "literal": {
              "symbol": "intLiteral",
              "position": {
                "lineNumber": 1,
                "charNumber": 12
              },
              "text": "5"
            },
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 9,
              "charNumber": 8
            }
          }
        ],
        "procDecl": {
          "formalParams": [
            {
              "relAddr": 0,
              "isVarParam": true,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 3,
                  "charNumber": 19
                },
                "text": "n"
              },
              "type": {
                "name": "Integer",
                "size": 4
              }
            }
          ],
          "initialDecls": [],
          "stmtPart": {
            "statements": [
              {
                "variable": {
                  "decl": {
                    "relAddr": 0,
                    "isVarParam": true,
                    "idToken": {
                      "symbol": "identifier",
                      "position": {
                        "lineNumber": 3,
                        "charNumber": 19
                      },
                      "text": "n"
                    },
                    "type": {
                      "name": "Integer",
                      "size": 4
                    }
                  },
                  "indexExprs": [],
                  "exprType": {
                    "name": "Integer",
                    "size": 4
                  },
                  "exprPosition": {
                    "lineNumber": 5,
                    "charNumber": 4
                  }
                },
                "expr": {
                  "leftOperand": {
                    "decl": {
                      "relAddr": 0,
                      "isVarParam": true,
                      "idToken": {
                        "symbol": "identifier",
                        "position": {
                          "lineNumber": 3,
                          "charNumber": 19
                        },
                        "text": "n"
                      },
                      "type": {
                        "name": "Integer",
                        "size": 4
                      }
                    },
                    "indexExprs": [],
                    "exprType": {
                      "name": "Integer",
                      "size": 4
                    },
                    "exprPosition": {
                      "lineNumber": 5,
                      "charNumber": 9
                    }
                  },
                  "operator": {
                    "symbol": "plus",
                    "position": {
                      "lineNumber": 5,
                      "charNumber": 11
                    },
                    "text": "+"
                  },
                  "rightOperand": {
                    "literal": {
                      "symbol": "intLiteral",
                      "position": {
                        "lineNumber": 5,
                        "charNumber": 13
                      },
                      "text": "1"
                    },
                    "exprType": {
                      "name": "Integer",
                      "size": 4
                    },
                    "exprPosition": {
                      "lineNumber": 5,
                      "charNumber": 13
                    }
                  },
                  "exprType": {
                    "name": "Integer",
                    "size": 4
                  },
                  "exprPosition": {
                    "lineNumber": 5,
                    "charNumber": 11
                  }
                },
                "assignPosition": {
                  "lineNumber": 5,
                  "charNumber": 6
                }
              }
            ]
          },
          "varLength": 0,
          "L1": "L0",
          "idToken": {
            "symbol": "identifier",
            "position": {
              "lineNumber": 3,
              "charNumber": 11
            },
            "text": "inc"
          },
          "type": {
            "name": "none",
            "size": 0
          }
        }
      }
    ]
  },
  "varLength": 0,
  "L1": "L1"
}
<sep>
Parsing Incorrect_203.cprl...
*** Syntax error detected near line 4, character 1:
    Expecting "is" but found "begin" instead.
*** Syntax error detected near line 6, character 5:
    Expecting "." but found "inc" instead.
Errors detected in Incorrect_203.cprl -- parsing terminated.

*** AST Dump ***
The AST could not be built.
<sep>
Parsing Incorrect_204.cprl...
Parsing complete.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "literal": {
          "symbol": "intLiteral",
          "position": {
            "lineNumber": 1,
            "charNumber": 12
          },
          "text": "5"
        },
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 7
          },
          "text": "n"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      },
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 2,
            "charNumber": 7
          },
          "text": "x"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ],
    "subprogDecls": [
      {
        "formalParams": [
          {
            "relAddr": 0,
            "isVarParam": false,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 4,
                "charNumber": 12
              },
              "text": "b"
            },
            "type": {
              "name": "Boolean",
              "size": 1
            }
          }
        ],
        "initialDecls": [],
        "stmtPart": {
          "statements": [
            {
              "booleanExpr": {
                "decl": {
                  "relAddr": 0,
                  "isVarParam": false,
                  "idToken": {
                    "symbol": "identifier",
                    "position": {
                      "lineNumber": 4,
                      "charNumber": 12
                    },
                    "text": "b"
                  },
                  "type": {
                    "name": "Boolean",
                    "size": 1
                  }
                },
                "indexExprs": [],
                "exprType": {
                  "name": "Boolean",
                  "size": 1
                },
                "exprPosition": {
                  "lineNumber": 7,
                  "charNumber": 7
                }
              },
              "thenStmts": [
                {
                  "returnExpr": {
                    "literal": {
                      "symbol": "intLiteral",
                      "position": {
                        "lineNumber": 8,
                        "charNumber": 14
                      },
                      "text": "1"
                    },
                    "exprType": {
                      "name": "Integer",
                      "size": 4
                    },
                    "exprPosition": {
                      "lineNumber": 8,
                      "charNumber": 14
                    }
                  },
                  "returnPosition": {
                    "lineNumber": 8,
                    "charNumber": 7
                  }
                }
              ],
              "elsifParts": [],
              "elseStmts": [
                {
                  "returnExpr": {
                    "operator": {
                      "symbol": "minus",
                      "position": {
                        "lineNumber": 10,
                        "charNumber": 14
                      },
                      "text": "-"
                    },
                    "operand": {
                      "literal": {
                        "symbol": "intLiteral",
                        "position": {
                          "lineNumber": 10,
                          "charNumber": 15
                        },
                        "text": "1"
                      },
                      "exprType": {
                        "name": "Integer",
                        "size": 4
                      },
                      "exprPosition": {
                        "lineNumber": 10,
                        "charNumber": 15
                      }
                    },
                    "exprType": {
                      "name": "Integer",
                      "size": 4
                    },
                    "exprPosition": {
                      "lineNumber": 10,
                      "charNumber": 14
                    }
                  },
                  "returnPosition": {
                    "lineNumber": 10,
                    "charNumber": 7
                  }
                }
              ],
              "L1": "L1",
              "L2": "L2"
            }
          ]
        },
        "varLength": 0,
        "L1": "L0",
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 4,
            "charNumber": 10
          },
          "text": "f"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ]
  },
  "stmtPart": {
    "statements": [
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 2,
                "charNumber": 7
              },
              "text": "x"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 17,
            "charNumber": 4
          }
        },
        "expr": {
          "funcId": {
            "symbol": "identifier",
            "position": {
              "lineNumber": 17,
              "charNumber": 9
            },
            "text": "f"
          },
          "actualParams": [
            {
              "literal": {
                "symbol": "intLiteral",
                "position": {
                  "lineNumber": 1,
                  "charNumber": 12
                },
                "text": "5"
              },
              "exprType": {
                "name": "Integer",
                "size": 4
              },
              "exprPosition": {
                "lineNumber": 17,
                "charNumber": 11
              }
            }
          ],
          "funcDecl": {
            "formalParams": [
              {
                "relAddr": 0,
                "isVarParam": false,
                "idToken": {
                  "symbol": "identifier",
                  "position": {
                    "lineNumber": 4,
                    "charNumber": 12
                  },
                  "text": "b"
                },
                "type": {
                  "name": "Boolean",
                  "size": 1
                }
              }
            ],
            "initialDecls": [],
            "stmtPart": {
              "statements": [
                {
                  "booleanExpr": {
                    "decl": {
                      "relAddr": 0,
                      "isVarParam": false,
                      "idToken": {
                        "symbol": "identifier",
                        "position": {
                          "lineNumber": 4,
                          "charNumber": 12
                        },
                        "text": "b"
                      },
                      "type": {
                        "name": "Boolean",
                        "size": 1
                      }
                    },
                    "indexExprs": [],
                    "exprType": {
                      "name": "Boolean",
                      "size": 1
                    },
                    "exprPosition": {
                      "lineNumber": 7,
                      "charNumber": 7
                    }
                  },
                  "thenStmts": [
                    {
                      "returnExpr": {
                        "literal": {
                          "symbol": "intLiteral",
                          "position": {
                            "lineNumber": 8,
                            "charNumber": 14
                          },
                          "text": "1"
                        },
                        "exprType": {
                          "name": "Integer",
                          "size": 4
                        },
                        "exprPosition": {
                          "lineNumber": 8,
                          "charNumber": 14
                        }
                      },
                      "returnPosition": {
                        "lineNumber": 8,
                        "charNumber": 7
                      }
                    }
                  ],
                  "elsifParts": [],
                  "elseStmts": [
                    {
                      "returnExpr": {
                        "operator": {
                          "symbol": "minus",
                          "position": {
                            "lineNumber": 10,
                            "charNumber": 14
                          },
                          "text": "-"
                        },
                        "operand": {
                          "literal": {
                            "symbol": "intLiteral",
                            "position": {
                              "lineNumber": 10,
                              "charNumber": 15
                            },
                            "text": "1"
                          },
                          "exprType": {
                            "name": "Integer",
                            "size": 4
                          },
                          "exprPosition": {
                            "lineNumber": 10,
                            "charNumber": 15
                          }
                        },
                        "exprType": {
                          "name": "Integer",
                          "size": 4
                        },
                        "exprPosition": {
                          "lineNumber": 10,
                          "charNumber": 14
                        }
                      },
                      "returnPosition": {
                        "lineNumber": 10,
                        "charNumber": 7
                      }
                    }
                  ],
                  "L1": "L1",
                  "L2": "L2"
                }
              ]
            },
            "varLength": 0,
            "L1": "L0",
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 4,
                "charNumber": 10
              },
              "text": "f"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 17,
            "charNumber": 9
          }
        },
        "assignPosition": {
          "lineNumber": 17,
          "charNumber": 6
        }
      },
      {
        "expressions": [
          {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 2,
                  "charNumber": 7
                },
                "text": "x"
              },
              "type": {
                "name": "Integer",
                "size": 4
              }
            },
            "indexExprs": [],
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 18,
              "charNumber": 10
            }
          }
        ]
      }
    ]
  },
  "varLength": 0,
  "L1": "L3"
}
<sep>
Parsing Incorrect_205.cprl...
*** Syntax error detected near line 3, character 7:
    Expecting ":" but found "=" instead.
*** Syntax error detected near line 21, character 4:
    Identifier "n" has not been declared.
*** Syntax error detected near line 22, character 10:
    Identifier "n" has not been declared.
Errors detected in Incorrect_205.cprl -- parsing terminated.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 5
          },
          "text": "x"
        },
        "type": {
          "name": "Boolean",
          "size": 1
        }
      },
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 2,
            "charNumber": 5
          },
          "text": "y"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      },
      null
    ],
    "subprogDecls": [
      {
        "formalParams": [
          {
            "relAddr": 0,
            "isVarParam": false,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 5,
                "charNumber": 12
              },
              "text": "b"
            },
            "type": {
              "name": "Boolean",
              "size": 1
            }
          }
        ],
        "initialDecls": [],
        "stmtPart": {
          "statements": [
            {
              "booleanExpr": {
                "decl": {
                  "relAddr": 0,
                  "isVarParam": false,
                  "idToken": {
                    "symbol": "identifier",
                    "position": {
                      "lineNumber": 5,
                      "charNumber": 12
                    },
                    "text": "b"
                  },
                  "type": {
                    "name": "Boolean",
                    "size": 1
                  }
                },
                "indexExprs": [],
                "exprType": {
                  "name": "Boolean",
                  "size": 1
                },
                "exprPosition": {
                  "lineNumber": 8,
                  "charNumber": 7
                }
              },
              "thenStmts": [
                {
                  "returnExpr": {
                    "literal": {
                      "symbol": "intLiteral",
                      "position": {
                        "lineNumber": 9,
                        "charNumber": 14
                      },
                      "text": "1"
                    },
                    "exprType": {
                      "name": "Integer",
                      "size": 4
                    },
                    "exprPosition": {
                      "lineNumber": 9,
                      "charNumber": 14
                    }
                  },
                  "returnPosition": {
                    "lineNumber": 9,
                    "charNumber": 7
                  }
                }
              ],
              "elsifParts": [],
              "elseStmts": [
                {
                  "returnExpr": {
                    "operator": {
                      "symbol": "minus",
                      "position": {
                        "lineNumber": 11,
                        "charNumber": 14
                      },
                      "text": "-"
                    },
                    "operand": {
                      "literal": {
                        "symbol": "intLiteral",
                        "position": {
                          "lineNumber": 11,
                          "charNumber": 15
                        },
                        "text": "1"
                      },
                      "exprType": {
                        "name": "Integer",
                        "size": 4
                      },
                      "exprPosition": {
                        "lineNumber": 11,
                        "charNumber": 15
                      }
                    },
                    "exprType": {
                      "name": "Integer",
                      "size": 4
                    },
                    "exprPosition": {
                      "lineNumber": 11,
                      "charNumber": 14
                    }
                  },
                  "returnPosition": {
                    "lineNumber": 11,
                    "charNumber": 7
                  }
                }
              ],
              "L1": "L1",
              "L2": "L2"
            }
          ]
        },
        "varLength": 0,
        "L1": "L0",
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 5,
            "charNumber": 10
          },
          "text": "f"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ]
  },
  "stmtPart": {
    "statements": [
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 2,
                "charNumber": 5
              },
              "text": "y"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 18,
            "charNumber": 4
          }
        },
        "expr": {
          "funcId": {
            "symbol": "identifier",
            "position": {
              "lineNumber": 18,
              "charNumber": 9
            },
            "text": "f"
          },
          "actualParams": [
            {
              "decl": {
                "scopeLevel": "PROGRAM",
                "relAddr": 0,
                "idToken": {
                  "symbol": "identifier",
                  "position": {
                    "lineNumber": 1,
                    "charNumber": 5
                  },
                  "text": "x"
                },
                "type": {
                  "name": "Boolean",
                  "size": 1
                }
              },
              "indexExprs": [],
              "exprType": {
                "name": "Boolean",
                "size": 1
              },
              "exprPosition": {
                "lineNumber": 18,
                "charNumber": 11
              }
            }
          ],
          "funcDecl": {
            "formalParams": [
              {
                "relAddr": 0,
                "isVarParam": false,
                "idToken": {
                  "symbol": "identifier",
                  "position": {
                    "lineNumber": 5,
                    "charNumber": 12
                  },
                  "text": "b"
                },
                "type": {
                  "name": "Boolean",
                  "size": 1
                }
              }
            ],
            "initialDecls": [],
            "stmtPart": {
              "statements": [
                {
                  "booleanExpr": {
                    "decl": {
                      "relAddr": 0,
                      "isVarParam": false,
                      "idToken": {
                        "symbol": "identifier",
                        "position": {
                          "lineNumber": 5,
                          "charNumber": 12
                        },
                        "text": "b"
                      },
                      "type": {
                        "name": "Boolean",
                        "size": 1
                      }
                    },
                    "indexExprs": [],
                    "exprType": {
                      "name": "Boolean",
                      "size": 1
                    },
                    "exprPosition": {
                      "lineNumber": 8,
                      "charNumber": 7
                    }
                  },
                  "thenStmts": [
                    {
                      "returnExpr": {
                        "literal": {
                          "symbol": "intLiteral",
                          "position": {
                            "lineNumber": 9,
                            "charNumber": 14
                          },
                          "text": "1"
                        },
                        "exprType": {
                          "name": "Integer",
                          "size": 4
                        },
                        "exprPosition": {
                          "lineNumber": 9,
                          "charNumber": 14
                        }
                      },
                      "returnPosition": {
                        "lineNumber": 9,
                        "charNumber": 7
                      }
                    }
                  ],
                  "elsifParts": [],
                  "elseStmts": [
                    {
                      "returnExpr": {
                        "operator": {
                          "symbol": "minus",
                          "position": {
                            "lineNumber": 11,
                            "charNumber": 14
                          },
                          "text": "-"
                        },
                        "operand": {
                          "literal": {
                            "symbol": "intLiteral",
                            "position": {
                              "lineNumber": 11,
                              "charNumber": 15
                            },
                            "text": "1"
                          },
                          "exprType": {
                            "name": "Integer",
                            "size": 4
                          },
                          "exprPosition": {
                            "lineNumber": 11,
                            "charNumber": 15
                          }
                        },
                        "exprType": {
                          "name": "Integer",
                          "size": 4
                        },
                        "exprPosition": {
                          "lineNumber": 11,
                          "charNumber": 14
                        }
                      },
                      "returnPosition": {
                        "lineNumber": 11,
                        "charNumber": 7
                      }
                    }
                  ],
                  "L1": "L1",
                  "L2": "L2"
                }
              ]
            },
            "varLength": 0,
            "L1": "L0",
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 5,
                "charNumber": 10
              },
              "text": "f"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 18,
            "charNumber": 9
          }
        },
        "assignPosition": {
          "lineNumber": 18,
          "charNumber": 6
        }
      },
      {
        "expressions": [
          {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 2,
                  "charNumber": 5
                },
                "text": "y"
              },
              "type": {
                "name": "Integer",
                "size": 4
              }
            },
            "indexExprs": [],
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 19,
              "charNumber": 10
            }
          }
        ]
      },
      null,
      {
        "expressions": [
          null
        ]
      }
    ]
  },
  "varLength": 0,
  "L1": "L3"
}
<sep>
Parsing Incorrect_206.cprl...
Parsing complete.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 5
          },
          "text": "x"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ],
    "subprogDecls": [
      {
        "formalParams": [
          {
            "relAddr": 0,
            "isVarParam": false,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 3,
                "charNumber": 12
              },
              "text": "b"
            },
            "type": {
              "name": "Boolean",
              "size": 1
            }
          },
          {
            "relAddr": 0,
            "isVarParam": false,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 3,
                "charNumber": 25
              },
              "text": "n"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          }
        ],
        "initialDecls": [],
        "stmtPart": {
          "statements": [
            {
              "booleanExpr": {
                "decl": {
                  "relAddr": 0,
                  "isVarParam": false,
                  "idToken": {
                    "symbol": "identifier",
                    "position": {
                      "lineNumber": 3,
                      "charNumber": 12
                    },
                    "text": "b"
                  },
                  "type": {
                    "name": "Boolean",
                    "size": 1
                  }
                },
                "indexExprs": [],
                "exprType": {
                  "name": "Boolean",
                  "size": 1
                },
                "exprPosition": {
                  "lineNumber": 6,
                  "charNumber": 7
                }
              },
              "thenStmts": [
                {
                  "returnExpr": {
                    "decl": {
                      "relAddr": 0,
                      "isVarParam": false,
                      "idToken": {
                        "symbol": "identifier",
                        "position": {
                          "lineNumber": 3,
                          "charNumber": 25
                        },
                        "text": "n"
                      },
                      "type": {
                        "name": "Integer",
                        "size": 4
                      }
                    },
                    "indexExprs": [],
                    "exprType": {
                      "name": "Integer",
                      "size": 4
                    },
                    "exprPosition": {
                      "lineNumber": 7,
                      "charNumber": 14
                    }
                  },
                  "returnPosition": {
                    "lineNumber": 7,
                    "charNumber": 7
                  }
                }
              ],
              "elsifParts": [],
              "elseStmts": [
                {
                  "returnExpr": {
                    "operator": {
                      "symbol": "minus",
                      "position": {
                        "lineNumber": 9,
                        "charNumber": 14
                      },
                      "text": "-"
                    },
                    "operand": {
                      "literal": {
                        "symbol": "intLiteral",
                        "position": {
                          "lineNumber": 9,
                          "charNumber": 15
                        },
                        "text": "1"
                      },
                      "exprType": {
                        "name": "Integer",
                        "size": 4
                      },
                      "exprPosition": {
                        "lineNumber": 9,
                        "charNumber": 15
                      }
                    },
                    "exprType": {
                      "name": "Integer",
                      "size": 4
                    },
                    "exprPosition": {
                      "lineNumber": 9,
                      "charNumber": 14
                    }
                  },
                  "returnPosition": {
                    "lineNumber": 9,
                    "charNumber": 7
                  }
                }
              ],
              "L1": "L1",
              "L2": "L2"
            }
          ]
        },
        "varLength": 0,
        "L1": "L0",
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 3,
            "charNumber": 10
          },
          "text": "f"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ]
  },
  "stmtPart": {
    "statements": [
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 1,
                "charNumber": 5
              },
              "text": "x"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 16,
            "charNumber": 4
          }
        },
        "expr": {
          "funcId": {
            "symbol": "identifier",
            "position": {
              "lineNumber": 16,
              "charNumber": 9
            },
            "text": "f"
          },
          "actualParams": [
            {
              "literal": {
                "symbol": "trueRW",
                "position": {
                  "lineNumber": 16,
                  "charNumber": 11
                },
                "text": "true"
              },
              "exprType": {
                "name": "Boolean",
                "size": 1
              },
              "exprPosition": {
                "lineNumber": 16,
                "charNumber": 11
              }
            }
          ],
          "funcDecl": {
            "formalParams": [
              {
                "relAddr": 0,
                "isVarParam": false,
                "idToken": {
                  "symbol": "identifier",
                  "position": {
                    "lineNumber": 3,
                    "charNumber": 12
                  },
                  "text": "b"
                },
                "type": {
                  "name": "Boolean",
                  "size": 1
                }
              },
              {
                "relAddr": 0,
                "isVarParam": false,
                "idToken": {
                  "symbol": "identifier",
                  "position": {
                    "lineNumber": 3,
                    "charNumber": 25
                  },
                  "text": "n"
                },
                "type": {
                  "name": "Integer",
                  "size": 4
                }
              }
            ],
            "initialDecls": [],
            "stmtPart": {
              "statements": [
                {
                  "booleanExpr": {
                    "decl": {
                      "relAddr": 0,
                      "isVarParam": false,
                      "idToken": {
                        "symbol": "identifier",
                        "position": {
                          "lineNumber": 3,
                          "charNumber": 12
                        },
                        "text": "b"
                      },
                      "type": {
                        "name": "Boolean",
                        "size": 1
                      }
                    },
                    "indexExprs": [],
                    "exprType": {
                      "name": "Boolean",
                      "size": 1
                    },
                    "exprPosition": {
                      "lineNumber": 6,
                      "charNumber": 7
                    }
                  },
                  "thenStmts": [
                    {
                      "returnExpr": {
                        "decl": {
                          "relAddr": 0,
                          "isVarParam": false,
                          "idToken": {
                            "symbol": "identifier",
                            "position": {
                              "lineNumber": 3,
                              "charNumber": 25
                            },
                            "text": "n"
                          },
                          "type": {
                            "name": "Integer",
                            "size": 4
                          }
                        },
                        "indexExprs": [],
                        "exprType": {
                          "name": "Integer",
                          "size": 4
                        },
                        "exprPosition": {
                          "lineNumber": 7,
                          "charNumber": 14
                        }
                      },
                      "returnPosition": {
                        "lineNumber": 7,
                        "charNumber": 7
                      }
                    }
                  ],
                  "elsifParts": [],
                  "elseStmts": [
                    {
                      "returnExpr": {
                        "operator": {
                          "symbol": "minus",
                          "position": {
                            "lineNumber": 9,
                            "charNumber": 14
                          },
                          "text": "-"
                        },
                        "operand": {
                          "literal": {
                            "symbol": "intLiteral",
                            "position": {
                              "lineNumber": 9,
                              "charNumber": 15
                            },
                            "text": "1"
                          },
                          "exprType": {
                            "name": "Integer",
                            "size": 4
                          },
                          "exprPosition": {
                            "lineNumber": 9,
                            "charNumber": 15
                          }
                        },
                        "exprType": {
                          "name": "Integer",
                          "size": 4
                        },
                        "exprPosition": {
                          "lineNumber": 9,
                          "charNumber": 14
                        }
                      },
                      "returnPosition": {
                        "lineNumber": 9,
                        "charNumber": 7
                      }
                    }
                  ],
                  "L1": "L1",
                  "L2": "L2"
                }
              ]
            },
            "varLength": 0,
            "L1": "L0",
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 3,
                "charNumber": 10
              },
              "text": "f"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 16,
            "charNumber": 9
          }
        },
        "assignPosition": {
          "lineNumber": 16,
          "charNumber": 6
        }
      },
      {
        "expressions": [
          {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 1,
                  "charNumber": 5
                },
                "text": "x"
              },
              "type": {
                "name": "Integer",
                "size": 4
              }
            },
            "indexExprs": [],
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 17,
              "charNumber": 12
            }
          }
        ]
      }
    ]
  },
  "varLength": 0,
  "L1": "L3"
}
<sep>
Parsing Incorrect_207.cprl...
Parsing complete.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 5
          },
          "text": "x"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ],
    "subprogDecls": [
      {
        "formalParams": [
          {
            "relAddr": 0,
            "isVarParam": false,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 3,
                "charNumber": 12
              },
              "text": "b"
            },
            "type": {
              "name": "Boolean",
              "size": 1
            }
          },
          {
            "relAddr": 0,
            "isVarParam": false,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 3,
                "charNumber": 25
              },
              "text": "n"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          }
        ],
        "initialDecls": [],
        "stmtPart": {
          "statements": [
            {
              "booleanExpr": {
                "decl": {
                  "relAddr": 0,
                  "isVarParam": false,
                  "idToken": {
                    "symbol": "identifier",
                    "position": {
                      "lineNumber": 3,
                      "charNumber": 12
                    },
                    "text": "b"
                  },
                  "type": {
                    "name": "Boolean",
                    "size": 1
                  }
                },
                "indexExprs": [],
                "exprType": {
                  "name": "Boolean",
                  "size": 1
                },
                "exprPosition": {
                  "lineNumber": 6,
                  "charNumber": 6
                }
              },
              "thenStmts": [
                {
                  "variable": {
                    "decl": {
                      "scopeLevel": "PROGRAM",
                      "relAddr": 0,
                      "idToken": {
                        "symbol": "identifier",
                        "position": {
                          "lineNumber": 1,
                          "charNumber": 5
                        },
                        "text": "x"
                      },
                      "type": {
                        "name": "Integer",
                        "size": 4
                      }
                    },
                    "indexExprs": [],
                    "exprType": {
                      "name": "Integer",
                      "size": 4
                    },
                    "exprPosition": {
                      "lineNumber": 7,
                      "charNumber": 6
                    }
                  },
                  "expr": {
                    "literal": {
                      "symbol": "intLiteral",
                      "position": {
                        "lineNumber": 7,
                        "charNumber": 11
                      },
                      "text": "1"
                    },
                    "exprType": {
                      "name": "Integer",
                      "size": 4
                    },
                    "exprPosition": {
                      "lineNumber": 7,
                      "charNumber": 11
                    }
                  },
                  "assignPosition": {
                    "lineNumber": 7,
                    "charNumber": 8
                  }
                }
              ],
              "elsifParts": [],
              "elseStmts": [
                {
                  "variable": {
                    "decl": {
                      "scopeLevel": "PROGRAM",
                      "relAddr": 0,
                      "idToken": {
                        "symbol": "identifier",
                        "position": {
                          "lineNumber": 1,
                          "charNumber": 5
                        },
                        "text": "x"
                      },
                      "type": {
                        "name": "Integer",
                        "size": 4
                      }
                    },
                    "indexExprs": [],
                    "exprType": {
                      "name": "Integer",
                      "size": 4
                    },
                    "exprPosition": {
                      "lineNumber": 9,
                      "charNumber": 6
                    }
                  },
                  "expr": {
                    "literal": {
                      "symbol": "intLiteral",
                      "position": {
                        "lineNumber": 9,
                        "charNumber": 11
                      },
                      "text": "0"
                    },
                    "exprType": {
                      "name": "Integer",
                      "size": 4
                    },
                    "exprPosition": {
                      "lineNumber": 9,
                      "charNumber": 11
                    }
                  },
                  "assignPosition": {
                    "lineNumber": 9,
                    "charNumber": 8
                  }
                }
              ],
              "L1": "L1",
              "L2": "L2"
            }
          ]
        },
        "varLength": 0,
        "L1": "L0",
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 3,
            "charNumber": 10
          },
          "text": "f"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ]
  },
  "stmtPart": {
    "statements": [
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 1,
                "charNumber": 5
              },
              "text": "x"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 16,
            "charNumber": 4
          }
        },
        "expr": {
          "funcId": {
            "symbol": "identifier",
            "position": {
              "lineNumber": 16,
              "charNumber": 9
            },
            "text": "f"
          },
          "actualParams": [
            {
              "literal": {
                "symbol": "trueRW",
                "position": {
                  "lineNumber": 16,
                  "charNumber": 11
                },
                "text": "true"
              },
              "exprType": {
                "name": "Boolean",
                "size": 1
              },
              "exprPosition": {
                "lineNumber": 16,
                "charNumber": 11
              }
            },
            {
              "literal": {
                "symbol": "intLiteral",
                "position": {
                  "lineNumber": 16,
                  "charNumber": 17
                },
                "text": "12"
              },
              "exprType": {
                "name": "Integer",
                "size": 4
              },
              "exprPosition": {
                "lineNumber": 16,
                "charNumber": 17
              }
            }
          ],
          "funcDecl": {
            "formalParams": [
              {
                "relAddr": 0,
                "isVarParam": false,
                "idToken": {
                  "symbol": "identifier",
                  "position": {
                    "lineNumber": 3,
                    "charNumber": 12
                  },
                  "text": "b"
                },
                "type": {
                  "name": "Boolean",
                  "size": 1
                }
              },
              {
                "relAddr": 0,
                "isVarParam": false,
                "idToken": {
                  "symbol": "identifier",
                  "position": {
                    "lineNumber": 3,
                    "charNumber": 25
                  },
                  "text": "n"
                },
                "type": {
                  "name": "Integer",
                  "size": 4
                }
              }
            ],
            "initialDecls": [],
            "stmtPart": {
              "statements": [
                {
                  "booleanExpr": {
                    "decl": {
                      "relAddr": 0,
                      "isVarParam": false,
                      "idToken": {
                        "symbol": "identifier",
                        "position": {
                          "lineNumber": 3,
                          "charNumber": 12
                        },
                        "text": "b"
                      },
                      "type": {
                        "name": "Boolean",
                        "size": 1
                      }
                    },
                    "indexExprs": [],
                    "exprType": {
                      "name": "Boolean",
                      "size": 1
                    },
                    "exprPosition": {
                      "lineNumber": 6,
                      "charNumber": 6
                    }
                  },
                  "thenStmts": [
                    {
                      "variable": {
                        "decl": {
                          "scopeLevel": "PROGRAM",
                          "relAddr": 0,
                          "idToken": {
                            "symbol": "identifier",
                            "position": {
                              "lineNumber": 1,
                              "charNumber": 5
                            },
                            "text": "x"
                          },
                          "type": {
                            "name": "Integer",
                            "size": 4
                          }
                        },
                        "indexExprs": [],
                        "exprType": {
                          "name": "Integer",
                          "size": 4
                        },
                        "exprPosition": {
                          "lineNumber": 7,
                          "charNumber": 6
                        }
                      },
                      "expr": {
                        "literal": {
                          "symbol": "intLiteral",
                          "position": {
                            "lineNumber": 7,
                            "charNumber": 11
                          },
                          "text": "1"
                        },
                        "exprType": {
                          "name": "Integer",
                          "size": 4
                        },
                        "exprPosition": {
                          "lineNumber": 7,
                          "charNumber": 11
                        }
                      },
                      "assignPosition": {
                        "lineNumber": 7,
                        "charNumber": 8
                      }
                    }
                  ],
                  "elsifParts": [],
                  "elseStmts": [
                    {
                      "variable": {
                        "decl": {
                          "scopeLevel": "PROGRAM",
                          "relAddr": 0,
                          "idToken": {
                            "symbol": "identifier",
                            "position": {
                              "lineNumber": 1,
                              "charNumber": 5
                            },
                            "text": "x"
                          },
                          "type": {
                            "name": "Integer",
                            "size": 4
                          }
                        },
                        "indexExprs": [],
                        "exprType": {
                          "name": "Integer",
                          "size": 4
                        },
                        "exprPosition": {
                          "lineNumber": 9,
                          "charNumber": 6
                        }
                      },
                      "expr": {
                        "literal": {
                          "symbol": "intLiteral",
                          "position": {
                            "lineNumber": 9,
                            "charNumber": 11
                          },
                          "text": "0"
                        },
                        "exprType": {
                          "name": "Integer",
                          "size": 4
                        },
                        "exprPosition": {
                          "lineNumber": 9,
                          "charNumber": 11
                        }
                      },
                      "assignPosition": {
                        "lineNumber": 9,
                        "charNumber": 8
                      }
                    }
                  ],
                  "L1": "L1",
                  "L2": "L2"
                }
              ]
            },
            "varLength": 0,
            "L1": "L0",
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 3,
                "charNumber": 10
              },
              "text": "f"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 16,
            "charNumber": 9
          }
        },
        "assignPosition": {
          "lineNumber": 16,
          "charNumber": 6
        }
      },
      {
        "expressions": [
          {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 1,
                  "charNumber": 5
                },
                "text": "x"
              },
              "type": {
                "name": "Integer",
                "size": 4
              }
            },
            "indexExprs": [],
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 17,
              "charNumber": 12
            }
          }
        ]
      }
    ]
  },
  "varLength": 0,
  "L1": "L3"
}
<sep>
Parsing Incorrect_208.cprl...
Parsing complete.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 5
          },
          "text": "x"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ],
    "subprogDecls": [
      {
        "formalParams": [],
        "initialDecls": [
          {
            "scopeLevel": "SUBPROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 4,
                "charNumber": 8
              },
              "text": "b"
            },
            "type": {
              "name": "Boolean",
              "size": 1
            }
          }
        ],
        "stmtPart": {
          "statements": [
            {
              "variable": {
                "decl": {
                  "scopeLevel": "SUBPROGRAM",
                  "relAddr": 0,
                  "idToken": {
                    "symbol": "identifier",
                    "position": {
                      "lineNumber": 4,
                      "charNumber": 8
                    },
                    "text": "b"
                  },
                  "type": {
                    "name": "Boolean",
                    "size": 1
                  }
                },
                "indexExprs": [],
                "exprType": {
                  "name": "Boolean",
                  "size": 1
                },
                "exprPosition": {
                  "lineNumber": 6,
                  "charNumber": 4
                }
              },
              "expr": {
                "literal": {
                  "symbol": "falseRW",
                  "position": {
                    "lineNumber": 6,
                    "charNumber": 9
                  },
                  "text": "false"
                },
                "exprType": {
                  "name": "Boolean",
                  "size": 1
                },
                "exprPosition": {
                  "lineNumber": 6,
                  "charNumber": 9
                }
              },
              "assignPosition": {
                "lineNumber": 6,
                "charNumber": 6
              }
            },
            {
              "returnExpr": {
                "leftOperand": {
                  "decl": {
                    "scopeLevel": "PROGRAM",
                    "relAddr": 0,
                    "idToken": {
                      "symbol": "identifier",
                      "position": {
                        "lineNumber": 1,
                        "charNumber": 5
                      },
                      "text": "x"
                    },
                    "type": {
                      "name": "Integer",
                      "size": 4
                    }
                  },
                  "indexExprs": [],
                  "exprType": {
                    "name": "Integer",
                    "size": 4
                  },
                  "exprPosition": {
                    "lineNumber": 7,
                    "charNumber": 11
                  }
                },
                "operator": {
                  "symbol": "plus",
                  "position": {
                    "lineNumber": 7,
                    "charNumber": 13
                  },
                  "text": "+"
                },
                "rightOperand": {
                  "decl": {
                    "scopeLevel": "SUBPROGRAM",
                    "relAddr": 0,
                    "idToken": {
                      "symbol": "identifier",
                      "position": {
                        "lineNumber": 4,
                        "charNumber": 8
                      },
                      "text": "b"
                    },
                    "type": {
                      "name": "Boolean",
                      "size": 1
                    }
                  },
                  "indexExprs": [],
                  "exprType": {
                    "name": "Boolean",
                    "size": 1
                  },
                  "exprPosition": {
                    "lineNumber": 7,
                    "charNumber": 15
                  }
                },
                "exprType": {
                  "name": "Integer",
                  "size": 4
                },
                "exprPosition": {
                  "lineNumber": 7,
                  "charNumber": 13
                }
              },
              "returnPosition": {
                "lineNumber": 7,
                "charNumber": 4
              }
            }
          ]
        },
        "varLength": 0,
        "L1": "L0",
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 3,
            "charNumber": 10
          },
          "text": "add"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ]
  },
  "stmtPart": {
    "statements": [
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 1,
                "charNumber": 5
              },
              "text": "x"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 12,
            "charNumber": 4
          }
        },
        "expr": {
          "literal": {
            "symbol": "intLiteral",
            "position": {
              "lineNumber": 12,
              "charNumber": 9
            },
            "text": "5"
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 12,
            "charNumber": 9
          }
        },
        "assignPosition": {
          "lineNumber": 12,
          "charNumber": 6
        }
      },
      {
        "expressions": [
          {
            "funcId": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 13,
                "charNumber": 12
              },
              "text": "add"
            },
            "actualParams": [],
            "funcDecl": {
              "formalParams": [],
              "initialDecls": [
                {
                  "scopeLevel": "SUBPROGRAM",
                  "relAddr": 0,
                  "idToken": {
                    "symbol": "identifier",
                    "position": {
                      "lineNumber": 4,
                      "charNumber": 8
                    },
                    "text": "b"
                  },
                  "type": {
                    "name": "Boolean",
                    "size": 1
                  }
                }
              ],
              "stmtPart": {
                "statements": [
                  {
                    "variable": {
                      "decl": {
                        "scopeLevel": "SUBPROGRAM",
                        "relAddr": 0,
                        "idToken": {
                          "symbol": "identifier",
                          "position": {
                            "lineNumber": 4,
                            "charNumber": 8
                          },
                          "text": "b"
                        },
                        "type": {
                          "name": "Boolean",
                          "size": 1
                        }
                      },
                      "indexExprs": [],
                      "exprType": {
                        "name": "Boolean",
                        "size": 1
                      },
                      "exprPosition": {
                        "lineNumber": 6,
                        "charNumber": 4
                      }
                    },
                    "expr": {
                      "literal": {
                        "symbol": "falseRW",
                        "position": {
                          "lineNumber": 6,
                          "charNumber": 9
                        },
                        "text": "false"
                      },
                      "exprType": {
                        "name": "Boolean",
                        "size": 1
                      },
                      "exprPosition": {
                        "lineNumber": 6,
                        "charNumber": 9
                      }
                    },
                    "assignPosition": {
                      "lineNumber": 6,
                      "charNumber": 6
                    }
                  },
                  {
                    "returnExpr": {
                      "leftOperand": {
                        "decl": {
                          "scopeLevel": "PROGRAM",
                          "relAddr": 0,
                          "idToken": {
                            "symbol": "identifier",
                            "position": {
                              "lineNumber": 1,
                              "charNumber": 5
                            },
                            "text": "x"
                          },
                          "type": {
                            "name": "Integer",
                            "size": 4
                          }
                        },
                        "indexExprs": [],
                        "exprType": {
                          "name": "Integer",
                          "size": 4
                        },
                        "exprPosition": {
                          "lineNumber": 7,
                          "charNumber": 11
                        }
                      },
                      "operator": {
                        "symbol": "plus",
                        "position": {
                          "lineNumber": 7,
                          "charNumber": 13
                        },
                        "text": "+"
                      },
                      "rightOperand": {
                        "decl": {
                          "scopeLevel": "SUBPROGRAM",
                          "relAddr": 0,
                          "idToken": {
                            "symbol": "identifier",
                            "position": {
                              "lineNumber": 4,
                              "charNumber": 8
                            },
                            "text": "b"
                          },
                          "type": {
                            "name": "Boolean",
                            "size": 1
                          }
                        },
                        "indexExprs": [],
                        "exprType": {
                          "name": "Boolean",
                          "size": 1
                        },
                        "exprPosition": {
                          "lineNumber": 7,
                          "charNumber": 15
                        }
                      },
                      "exprType": {
                        "name": "Integer",
                        "size": 4
                      },
                      "exprPosition": {
                        "lineNumber": 7,
                        "charNumber": 13
                      }
                    },
                    "returnPosition": {
                      "lineNumber": 7,
                      "charNumber": 4
                    }
                  }
                ]
              },
              "varLength": 0,
              "L1": "L0",
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 3,
                  "charNumber": 10
                },
                "text": "add"
              },
              "type": {
                "name": "Integer",
                "size": 4
              }
            },
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 13,
              "charNumber": 12
            }
          }
        ]
      }
    ]
  },
  "varLength": 0,
  "L1": "L1"
}
<sep>
Parsing Incorrect_209.cprl...
Parsing complete.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 5
          },
          "text": "x"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ],
    "subprogDecls": [
      {
        "formalParams": [
          {
            "relAddr": 0,
            "isVarParam": false,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 3,
                "charNumber": 12
              },
              "text": "b"
            },
            "type": {
              "name": "Boolean",
              "size": 1
            }
          }
        ],
        "initialDecls": [],
        "stmtPart": {
          "statements": [
            {
              "booleanExpr": {
                "decl": {
                  "relAddr": 0,
                  "isVarParam": false,
                  "idToken": {
                    "symbol": "identifier",
                    "position": {
                      "lineNumber": 3,
                      "charNumber": 12
                    },
                    "text": "b"
                  },
                  "type": {
                    "name": "Boolean",
                    "size": 1
                  }
                },
                "indexExprs": [],
                "exprType": {
                  "name": "Boolean",
                  "size": 1
                },
                "exprPosition": {
                  "lineNumber": 6,
                  "charNumber": 7
                }
              },
              "thenStmts": [
                {
                  "returnExpr": {
                    "literal": {
                      "symbol": "intLiteral",
                      "position": {
                        "lineNumber": 7,
                        "charNumber": 14
                      },
                      "text": "1"
                    },
                    "exprType": {
                      "name": "Integer",
                      "size": 4
                    },
                    "exprPosition": {
                      "lineNumber": 7,
                      "charNumber": 14
                    }
                  },
                  "returnPosition": {
                    "lineNumber": 7,
                    "charNumber": 7
                  }
                }
              ],
              "elsifParts": [],
              "elseStmts": [
                {
                  "returnExpr": {
                    "operator": {
                      "symbol": "minus",
                      "position": {
                        "lineNumber": 9,
                        "charNumber": 14
                      },
                      "text": "-"
                    },
                    "operand": {
                      "literal": {
                        "symbol": "intLiteral",
                        "position": {
                          "lineNumber": 9,
                          "charNumber": 15
                        },
                        "text": "1"
                      },
                      "exprType": {
                        "name": "Integer",
                        "size": 4
                      },
                      "exprPosition": {
                        "lineNumber": 9,
                        "charNumber": 15
                      }
                    },
                    "exprType": {
                      "name": "Integer",
                      "size": 4
                    },
                    "exprPosition": {
                      "lineNumber": 9,
                      "charNumber": 14
                    }
                  },
                  "returnPosition": {
                    "lineNumber": 9,
                    "charNumber": 7
                  }
                }
              ],
              "L1": "L1",
              "L2": "L2"
            }
          ]
        },
        "varLength": 0,
        "L1": "L0",
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 3,
            "charNumber": 10
          },
          "text": "f"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ]
  },
  "stmtPart": {
    "statements": [
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 1,
                "charNumber": 5
              },
              "text": "x"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 16,
            "charNumber": 4
          }
        },
        "expr": {
          "funcId": {
            "symbol": "identifier",
            "position": {
              "lineNumber": 16,
              "charNumber": 9
            },
            "text": "f"
          },
          "actualParams": [
            {
              "literal": {
                "symbol": "trueRW",
                "position": {
                  "lineNumber": 16,
                  "charNumber": 11
                },
                "text": "true"
              },
              "exprType": {
                "name": "Boolean",
                "size": 1
              },
              "exprPosition": {
                "lineNumber": 16,
                "charNumber": 11
              }
            },
            {
              "literal": {
                "symbol": "intLiteral",
                "position": {
                  "lineNumber": 16,
                  "charNumber": 17
                },
                "text": "7"
              },
              "exprType": {
                "name": "Integer",
                "size": 4
              },
              "exprPosition": {
                "lineNumber": 16,
                "charNumber": 17
              }
            }
          ],
          "funcDecl": {
            "formalParams": [
              {
                "relAddr": 0,
                "isVarParam": false,
                "idToken": {
                  "symbol": "identifier",
                  "position": {
                    "lineNumber": 3,
                    "charNumber": 12
                  },
                  "text": "b"
                },
                "type": {
                  "name": "Boolean",
                  "size": 1
                }
              }
            ],
            "initialDecls": [],
            "stmtPart": {
              "statements": [
                {
                  "booleanExpr": {
                    "decl": {
                      "relAddr": 0,
                      "isVarParam": false,
                      "idToken": {
                        "symbol": "identifier",
                        "position": {
                          "lineNumber": 3,
                          "charNumber": 12
                        },
                        "text": "b"
                      },
                      "type": {
                        "name": "Boolean",
                        "size": 1
                      }
                    },
                    "indexExprs": [],
                    "exprType": {
                      "name": "Boolean",
                      "size": 1
                    },
                    "exprPosition": {
                      "lineNumber": 6,
                      "charNumber": 7
                    }
                  },
                  "thenStmts": [
                    {
                      "returnExpr": {
                        "literal": {
                          "symbol": "intLiteral",
                          "position": {
                            "lineNumber": 7,
                            "charNumber": 14
                          },
                          "text": "1"
                        },
                        "exprType": {
                          "name": "Integer",
                          "size": 4
                        },
                        "exprPosition": {
                          "lineNumber": 7,
                          "charNumber": 14
                        }
                      },
                      "returnPosition": {
                        "lineNumber": 7,
                        "charNumber": 7
                      }
                    }
                  ],
                  "elsifParts": [],
                  "elseStmts": [
                    {
                      "returnExpr": {
                        "operator": {
                          "symbol": "minus",
                          "position": {
                            "lineNumber": 9,
                            "charNumber": 14
                          },
                          "text": "-"
                        },
                        "operand": {
                          "literal": {
                            "symbol": "intLiteral",
                            "position": {
                              "lineNumber": 9,
                              "charNumber": 15
                            },
                            "text": "1"
                          },
                          "exprType": {
                            "name": "Integer",
                            "size": 4
                          },
                          "exprPosition": {
                            "lineNumber": 9,
                            "charNumber": 15
                          }
                        },
                        "exprType": {
                          "name": "Integer",
                          "size": 4
                        },
                        "exprPosition": {
                          "lineNumber": 9,
                          "charNumber": 14
                        }
                      },
                      "returnPosition": {
                        "lineNumber": 9,
                        "charNumber": 7
                      }
                    }
                  ],
                  "L1": "L1",
                  "L2": "L2"
                }
              ]
            },
            "varLength": 0,
            "L1": "L0",
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 3,
                "charNumber": 10
              },
              "text": "f"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 16,
            "charNumber": 9
          }
        },
        "assignPosition": {
          "lineNumber": 16,
          "charNumber": 6
        }
      },
      {
        "expressions": [
          {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 1,
                  "charNumber": 5
                },
                "text": "x"
              },
              "type": {
                "name": "Integer",
                "size": 4
              }
            },
            "indexExprs": [],
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 17,
              "charNumber": 12
            }
          }
        ]
      }
    ]
  },
  "varLength": 0,
  "L1": "L3"
}
<sep>
Parsing Incorrect_210.cprl...
*** Syntax error detected near line 10, character 1:
    Expecting ";" but found "end" instead.
Errors detected in Incorrect_210.cprl -- parsing terminated.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 7
          },
          "text": "x"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ],
    "subprogDecls": [
      {
        "formalParams": [
          {
            "relAddr": 0,
            "isVarParam": true,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 3,
                "charNumber": 19
              },
              "text": "n"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          }
        ],
        "initialDecls": [],
        "stmtPart": {
          "statements": [
            {
              "variable": {
                "decl": {
                  "relAddr": 0,
                  "isVarParam": true,
                  "idToken": {
                    "symbol": "identifier",
                    "position": {
                      "lineNumber": 3,
                      "charNumber": 19
                    },
                    "text": "n"
                  },
                  "type": {
                    "name": "Integer",
                    "size": 4
                  }
                },
                "indexExprs": [],
                "exprType": {
                  "name": "Integer",
                  "size": 4
                },
                "exprPosition": {
                  "lineNumber": 5,
                  "charNumber": 4
                }
              },
              "expr": {
                "leftOperand": {
                  "decl": {
                    "relAddr": 0,
                    "isVarParam": true,
                    "idToken": {
                      "symbol": "identifier",
                      "position": {
                        "lineNumber": 3,
                        "charNumber": 19
                      },
                      "text": "n"
                    },
                    "type": {
                      "name": "Integer",
                      "size": 4
                    }
                  },
                  "indexExprs": [],
                  "exprType": {
                    "name": "Integer",
                    "size": 4
                  },
                  "exprPosition": {
                    "lineNumber": 5,
                    "charNumber": 9
                  }
                },
                "operator": {
                  "symbol": "plus",
                  "position": {
                    "lineNumber": 5,
                    "charNumber": 11
                  },
                  "text": "+"
                },
                "rightOperand": {
                  "literal": {
                    "symbol": "intLiteral",
                    "position": {
                      "lineNumber": 5,
                      "charNumber": 13
                    },
                    "text": "1"
                  },
                  "exprType": {
                    "name": "Integer",
                    "size": 4
                  },
                  "exprPosition": {
                    "lineNumber": 5,
                    "charNumber": 13
                  }
                },
                "exprType": {
                  "name": "Integer",
                  "size": 4
                },
                "exprPosition": {
                  "lineNumber": 5,
                  "charNumber": 11
                }
              },
              "assignPosition": {
                "lineNumber": 5,
                "charNumber": 6
              }
            }
          ]
        },
        "varLength": 0,
        "L1": "L0",
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 3,
            "charNumber": 11
          },
          "text": "inc"
        },
        "type": {
          "name": "none",
          "size": 0
        }
      }
    ]
  },
  "stmtPart": {
    "statements": [
      null
    ]
  },
  "varLength": 0,
  "L1": "L1"
}
<sep>
Parsing Incorrect_211.cprl...
*** Syntax error detected near line 12, character 5:
    Function name mismatch.
Errors detected in Incorrect_211.cprl -- parsing terminated.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 5
          },
          "text": "x"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ],
    "subprogDecls": [
      null
    ]
  },
  "stmtPart": {
    "statements": [
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 1,
                "charNumber": 5
              },
              "text": "x"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 16,
            "charNumber": 4
          }
        },
        "expr": {
          "funcId": {
            "symbol": "identifier",
            "position": {
              "lineNumber": 16,
              "charNumber": 9
            },
            "text": "f"
          },
          "actualParams": [
            {
              "literal": {
                "symbol": "trueRW",
                "position": {
                  "lineNumber": 16,
                  "charNumber": 11
                },
                "text": "true"
              },
              "exprType": {
                "name": "Boolean",
                "size": 1
              },
              "exprPosition": {
                "lineNumber": 16,
                "charNumber": 11
              }
            }
          ],
          "funcDecl": {
            "formalParams": [
              {
                "relAddr": 0,
                "isVarParam": false,
                "idToken": {
                  "symbol": "identifier",
                  "position": {
                    "lineNumber": 3,
                    "charNumber": 12
                  },
                  "text": "b"
                },
                "type": {
                  "name": "Boolean",
                  "size": 1
                }
              }
            ],
            "initialDecls": [],
            "stmtPart": {
              "statements": [
                {
                  "booleanExpr": {
                    "decl": {
                      "relAddr": 0,
                      "isVarParam": false,
                      "idToken": {
                        "symbol": "identifier",
                        "position": {
                          "lineNumber": 3,
                          "charNumber": 12
                        },
                        "text": "b"
                      },
                      "type": {
                        "name": "Boolean",
                        "size": 1
                      }
                    },
                    "indexExprs": [],
                    "exprType": {
                      "name": "Boolean",
                      "size": 1
                    },
                    "exprPosition": {
                      "lineNumber": 6,
                      "charNumber": 7
                    }
                  },
                  "thenStmts": [
                    {
                      "returnExpr": {
                        "literal": {
                          "symbol": "intLiteral",
                          "position": {
                            "lineNumber": 7,
                            "charNumber": 14
                          },
                          "text": "1"
                        },
                        "exprType": {
                          "name": "Integer",
                          "size": 4
                        },
                        "exprPosition": {
                          "lineNumber": 7,
                          "charNumber": 14
                        }
                      },
                      "returnPosition": {
                        "lineNumber": 7,
                        "charNumber": 7
                      }
                    }
                  ],
                  "elsifParts": [],
                  "elseStmts": [
                    {
                      "returnExpr": {
                        "operator": {
                          "symbol": "minus",
                          "position": {
                            "lineNumber": 9,
                            "charNumber": 14
                          },
                          "text": "-"
                        },
                        "operand": {
                          "literal": {
                            "symbol": "intLiteral",
                            "position": {
                              "lineNumber": 9,
                              "charNumber": 15
                            },
                            "text": "1"
                          },
                          "exprType": {
                            "name": "Integer",
                            "size": 4
                          },
                          "exprPosition": {
                            "lineNumber": 9,
                            "charNumber": 15
                          }
                        },
                        "exprType": {
                          "name": "Integer",
                          "size": 4
                        },
                        "exprPosition": {
                          "lineNumber": 9,
                          "charNumber": 14
                        }
                      },
                      "returnPosition": {
                        "lineNumber": 9,
                        "charNumber": 7
                      }
                    }
                  ],
                  "L1": "L1",
                  "L2": "L2"
                }
              ]
            },
            "varLength": 0,
            "L1": "L0",
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 3,
                "charNumber": 10
              },
              "text": "f"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 16,
            "charNumber": 9
          }
        },
        "assignPosition": {
          "lineNumber": 16,
          "charNumber": 6
        }
      },
      {
        "expressions": [
          {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 1,
                  "charNumber": 5
                },
                "text": "x"
              },
              "type": {
                "name": "Integer",
                "size": 4
              }
            },
            "indexExprs": [],
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 17,
              "charNumber": 12
            }
          }
        ]
      }
    ]
  },
  "varLength": 0,
  "L1": "L3"
}
<sep>
Parsing Incorrect_212.cprl...
Parsing complete.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 5
          },
          "text": "x"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ],
    "subprogDecls": [
      {
        "formalParams": [
          {
            "relAddr": 0,
            "isVarParam": true,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 3,
                "charNumber": 16
              },
              "text": "b"
            },
            "type": {
              "name": "Boolean",
              "size": 1
            }
          }
        ],
        "initialDecls": [],
        "stmtPart": {
          "statements": [
            {
              "booleanExpr": {
                "decl": {
                  "relAddr": 0,
                  "isVarParam": true,
                  "idToken": {
                    "symbol": "identifier",
                    "position": {
                      "lineNumber": 3,
                      "charNumber": 16
                    },
                    "text": "b"
                  },
                  "type": {
                    "name": "Boolean",
                    "size": 1
                  }
                },
                "indexExprs": [],
                "exprType": {
                  "name": "Boolean",
                  "size": 1
                },
                "exprPosition": {
                  "lineNumber": 6,
                  "charNumber": 7
                }
              },
              "thenStmts": [
                {
                  "returnExpr": {
                    "literal": {
                      "symbol": "intLiteral",
                      "position": {
                        "lineNumber": 7,
                        "charNumber": 14
                      },
                      "text": "1"
                    },
                    "exprType": {
                      "name": "Integer",
                      "size": 4
                    },
                    "exprPosition": {
                      "lineNumber": 7,
                      "charNumber": 14
                    }
                  },
                  "returnPosition": {
                    "lineNumber": 7,
                    "charNumber": 7
                  }
                }
              ],
              "elsifParts": [],
              "elseStmts": [
                {
                  "returnExpr": {
                    "operator": {
                      "symbol": "minus",
                      "position": {
                        "lineNumber": 9,
                        "charNumber": 14
                      },
                      "text": "-"
                    },
                    "operand": {
                      "literal": {
                        "symbol": "intLiteral",
                        "position": {
                          "lineNumber": 9,
                          "charNumber": 15
                        },
                        "text": "1"
                      },
                      "exprType": {
                        "name": "Integer",
                        "size": 4
                      },
                      "exprPosition": {
                        "lineNumber": 9,
                        "charNumber": 15
                      }
                    },
                    "exprType": {
                      "name": "Integer",
                      "size": 4
                    },
                    "exprPosition": {
                      "lineNumber": 9,
                      "charNumber": 14
                    }
                  },
                  "returnPosition": {
                    "lineNumber": 9,
                    "charNumber": 7
                  }
                }
              ],
              "L1": "L1",
              "L2": "L2"
            }
          ]
        },
        "varLength": 0,
        "L1": "L0",
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 3,
            "charNumber": 10
          },
          "text": "f"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ]
  },
  "stmtPart": {
    "statements": [
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 1,
                "charNumber": 5
              },
              "text": "x"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 16,
            "charNumber": 4
          }
        },
        "expr": {
          "funcId": {
            "symbol": "identifier",
            "position": {
              "lineNumber": 16,
              "charNumber": 9
            },
            "text": "f"
          },
          "actualParams": [
            {
              "literal": {
                "symbol": "trueRW",
                "position": {
                  "lineNumber": 16,
                  "charNumber": 11
                },
                "text": "true"
              },
              "exprType": {
                "name": "Boolean",
                "size": 1
              },
              "exprPosition": {
                "lineNumber": 16,
                "charNumber": 11
              }
            }
          ],
          "funcDecl": {
            "formalParams": [
              {
                "relAddr": 0,
                "isVarParam": true,
                "idToken": {
                  "symbol": "identifier",
                  "position": {
                    "lineNumber": 3,
                    "charNumber": 16
                  },
                  "text": "b"
                },
                "type": {
                  "name": "Boolean",
                  "size": 1
                }
              }
            ],
            "initialDecls": [],
            "stmtPart": {
              "statements": [
                {
                  "booleanExpr": {
                    "decl": {
                      "relAddr": 0,
                      "isVarParam": true,
                      "idToken": {
                        "symbol": "identifier",
                        "position": {
                          "lineNumber": 3,
                          "charNumber": 16
                        },
                        "text": "b"
                      },
                      "type": {
                        "name": "Boolean",
                        "size": 1
                      }
                    },
                    "indexExprs": [],
                    "exprType": {
                      "name": "Boolean",
                      "size": 1
                    },
                    "exprPosition": {
                      "lineNumber": 6,
                      "charNumber": 7
                    }
                  },
                  "thenStmts": [
                    {
                      "returnExpr": {
                        "literal": {
                          "symbol": "intLiteral",
                          "position": {
                            "lineNumber": 7,
                            "charNumber": 14
                          },
                          "text": "1"
                        },
                        "exprType": {
                          "name": "Integer",
                          "size": 4
                        },
                        "exprPosition": {
                          "lineNumber": 7,
                          "charNumber": 14
                        }
                      },
                      "returnPosition": {
                        "lineNumber": 7,
                        "charNumber": 7
                      }
                    }
                  ],
                  "elsifParts": [],
                  "elseStmts": [
                    {
                      "returnExpr": {
                        "operator": {
                          "symbol": "minus",
                          "position": {
                            "lineNumber": 9,
                            "charNumber": 14
                          },
                          "text": "-"
                        },
                        "operand": {
                          "literal": {
                            "symbol": "intLiteral",
                            "position": {
                              "lineNumber": 9,
                              "charNumber": 15
                            },
                            "text": "1"
                          },
                          "exprType": {
                            "name": "Integer",
                            "size": 4
                          },
                          "exprPosition": {
                            "lineNumber": 9,
                            "charNumber": 15
                          }
                        },
                        "exprType": {
                          "name": "Integer",
                          "size": 4
                        },
                        "exprPosition": {
                          "lineNumber": 9,
                          "charNumber": 14
                        }
                      },
                      "returnPosition": {
                        "lineNumber": 9,
                        "charNumber": 7
                      }
                    }
                  ],
                  "L1": "L1",
                  "L2": "L2"
                }
              ]
            },
            "varLength": 0,
            "L1": "L0",
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 3,
                "charNumber": 10
              },
              "text": "f"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 16,
            "charNumber": 9
          }
        },
        "assignPosition": {
          "lineNumber": 16,
          "charNumber": 6
        }
      },
      {
        "expressions": [
          {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 1,
                  "charNumber": 5
                },
                "text": "x"
              },
              "type": {
                "name": "Integer",
                "size": 4
              }
            },
            "indexExprs": [],
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 17,
              "charNumber": 10
            }
          }
        ]
      }
    ]
  },
  "varLength": 0,
  "L1": "L3"
}
<sep>
Parsing Incorrect_213.cprl...
Parsing complete.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [],
    "subprogDecls": [
      {
        "formalParams": [
          {
            "relAddr": 0,
            "isVarParam": false,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 1,
                "charNumber": 12
              },
              "text": "n"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          }
        ],
        "initialDecls": [],
        "stmtPart": {
          "statements": [
            {
              "booleanExpr": {
                "L1": "L1",
                "L2": "L2",
                "leftOperand": {
                  "decl": {
                    "relAddr": 0,
                    "isVarParam": false,
                    "idToken": {
                      "symbol": "identifier",
                      "position": {
                        "lineNumber": 1,
                        "charNumber": 12
                      },
                      "text": "n"
                    },
                    "type": {
                      "name": "Integer",
                      "size": 4
                    }
                  },
                  "indexExprs": [],
                  "exprType": {
                    "name": "Integer",
                    "size": 4
                  },
                  "exprPosition": {
                    "lineNumber": 4,
                    "charNumber": 7
                  }
                },
                "operator": {
                  "symbol": "greaterThan",
                  "position": {
                    "lineNumber": 4,
                    "charNumber": 9
                  },
                  "text": "\u003e"
                },
                "rightOperand": {
                  "literal": {
                    "symbol": "intLiteral",
                    "position": {
                      "lineNumber": 4,
                      "charNumber": 11
                    },
                    "text": "5"
                  },
                  "exprType": {
                    "name": "Integer",
                    "size": 4
                  },
                  "exprPosition": {
                    "lineNumber": 4,
                    "charNumber": 11
                  }
                },
                "exprType": {
                  "name": "Boolean",
                  "size": 1
                },
                "exprPosition": {
                  "lineNumber": 4,
                  "charNumber": 9
                }
              },
              "thenStmts": [
                {
                  "returnExpr": null,
                  "returnPosition": {
                    "lineNumber": 5,
                    "charNumber": 7
                  }
                }
              ],
              "elsifParts": [],
              "elseStmts": [
                {
                  "returnExpr": {
                    "operator": {
                      "symbol": "minus",
                      "position": {
                        "lineNumber": 7,
                        "charNumber": 14
                      },
                      "text": "-"
                    },
                    "operand": {
                      "literal": {
                        "symbol": "intLiteral",
                        "position": {
                          "lineNumber": 7,
                          "charNumber": 15
                        },
                        "text": "1"
                      },
                      "exprType": {
                        "name": "Integer",
                        "size": 4
                      },
                      "exprPosition": {
                        "lineNumber": 7,
                        "charNumber": 15
                      }
                    },
                    "exprType": {
                      "name": "Integer",
                      "size": 4
                    },
                    "exprPosition": {
                      "lineNumber": 7,
                      "charNumber": 14
                    }
                  },
                  "returnPosition": {
                    "lineNumber": 7,
                    "charNumber": 7
                  }
                }
              ],
              "L1": "L3",
              "L2": "L4"
            }
          ]
        },
        "varLength": 0,
        "L1": "L0",
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 10
          },
          "text": "f"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ]
  },
  "stmtPart": {
    "statements": [
      {
        "expressions": [
          {
            "funcId": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 14,
                "charNumber": 12
              },
              "text": "f"
            },
            "actualParams": [
              {
                "literal": {
                  "symbol": "intLiteral",
                  "position": {
                    "lineNumber": 14,
                    "charNumber": 14
                  },
                  "text": "3"
                },
                "exprType": {
                  "name": "Integer",
                  "size": 4
                },
                "exprPosition": {
                  "lineNumber": 14,
                  "charNumber": 14
                }
              }
            ],
            "funcDecl": {
              "formalParams": [
                {
                  "relAddr": 0,
                  "isVarParam": false,
                  "idToken": {
                    "symbol": "identifier",
                    "position": {
                      "lineNumber": 1,
                      "charNumber": 12
                    },
                    "text": "n"
                  },
                  "type": {
                    "name": "Integer",
                    "size": 4
                  }
                }
              ],
              "initialDecls": [],
              "stmtPart": {
                "statements": [
                  {
                    "booleanExpr": {
                      "L1": "L1",
                      "L2": "L2",
                      "leftOperand": {
                        "decl": {
                          "relAddr": 0,
                          "isVarParam": false,
                          "idToken": {
                            "symbol": "identifier",
                            "position": {
                              "lineNumber": 1,
                              "charNumber": 12
                            },
                            "text": "n"
                          },
                          "type": {
                            "name": "Integer",
                            "size": 4
                          }
                        },
                        "indexExprs": [],
                        "exprType": {
                          "name": "Integer",
                          "size": 4
                        },
                        "exprPosition": {
                          "lineNumber": 4,
                          "charNumber": 7
                        }
                      },
                      "operator": {
                        "symbol": "greaterThan",
                        "position": {
                          "lineNumber": 4,
                          "charNumber": 9
                        },
                        "text": "\u003e"
                      },
                      "rightOperand": {
                        "literal": {
                          "symbol": "intLiteral",
                          "position": {
                            "lineNumber": 4,
                            "charNumber": 11
                          },
                          "text": "5"
                        },
                        "exprType": {
                          "name": "Integer",
                          "size": 4
                        },
                        "exprPosition": {
                          "lineNumber": 4,
                          "charNumber": 11
                        }
                      },
                      "exprType": {
                        "name": "Boolean",
                        "size": 1
                      },
                      "exprPosition": {
                        "lineNumber": 4,
                        "charNumber": 9
                      }
                    },
                    "thenStmts": [
                      {
                        "returnExpr": null,
                        "returnPosition": {
                          "lineNumber": 5,
                          "charNumber": 7
                        }
                      }
                    ],
                    "elsifParts": [],
                    "elseStmts": [
                      {
                        "returnExpr": {
                          "operator": {
                            "symbol": "minus",
                            "position": {
                              "lineNumber": 7,
                              "charNumber": 14
                            },
                            "text": "-"
                          },
                          "operand": {
                            "literal": {
                              "symbol": "intLiteral",
                              "position": {
                                "lineNumber": 7,
                                "charNumber": 15
                              },
                              "text": "1"
                            },
                            "exprType": {
                              "name": "Integer",
                              "size": 4
                            },
                            "exprPosition": {
                              "lineNumber": 7,
                              "charNumber": 15
                            }
                          },
                          "exprType": {
                            "name": "Integer",
                            "size": 4
                          },
                          "exprPosition": {
                            "lineNumber": 7,
                            "charNumber": 14
                          }
                        },
                        "returnPosition": {
                          "lineNumber": 7,
                          "charNumber": 7
                        }
                      }
                    ],
                    "L1": "L3",
                    "L2": "L4"
                  }
                ]
              },
              "varLength": 0,
              "L1": "L0",
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 1,
                  "charNumber": 10
                },
                "text": "f"
              },
              "type": {
                "name": "Integer",
                "size": 4
              }
            },
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 14,
              "charNumber": 12
            }
          }
        ]
      }
    ]
  },
  "varLength": 0,
  "L1": "L5"
}
<sep>
Parsing Incorrect_214.cprl...
Parsing complete.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 5
          },
          "text": "x"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ],
    "subprogDecls": [
      {
        "formalParams": [
          {
            "relAddr": 0,
            "isVarParam": false,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 3,
                "charNumber": 12
              },
              "text": "n"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          }
        ],
        "initialDecls": [],
        "stmtPart": {
          "statements": [
            {
              "booleanExpr": {
                "L1": "L1",
                "L2": "L2",
                "leftOperand": {
                  "decl": {
                    "relAddr": 0,
                    "isVarParam": false,
                    "idToken": {
                      "symbol": "identifier",
                      "position": {
                        "lineNumber": 3,
                        "charNumber": 12
                      },
                      "text": "n"
                    },
                    "type": {
                      "name": "Integer",
                      "size": 4
                    }
                  },
                  "indexExprs": [],
                  "exprType": {
                    "name": "Integer",
                    "size": 4
                  },
                  "exprPosition": {
                    "lineNumber": 6,
                    "charNumber": 7
                  }
                },
                "operator": {
                  "symbol": "greaterThan",
                  "position": {
                    "lineNumber": 6,
                    "charNumber": 9
                  },
                  "text": "\u003e"
                },
                "rightOperand": {
                  "literal": {
                    "symbol": "intLiteral",
                    "position": {
                      "lineNumber": 6,
                      "charNumber": 11
                    },
                    "text": "5"
                  },
                  "exprType": {
                    "name": "Integer",
                    "size": 4
                  },
                  "exprPosition": {
                    "lineNumber": 6,
                    "charNumber": 11
                  }
                },
                "exprType": {
                  "name": "Boolean",
                  "size": 1
                },
                "exprPosition": {
                  "lineNumber": 6,
                  "charNumber": 9
                }
              },
              "thenStmts": [
                {
                  "returnExpr": {
                    "literal": {
                      "symbol": "trueRW",
                      "position": {
                        "lineNumber": 7,
                        "charNumber": 14
                      },
                      "text": "true"
                    },
                    "exprType": {
                      "name": "Boolean",
                      "size": 1
                    },
                    "exprPosition": {
                      "lineNumber": 7,
                      "charNumber": 14
                    }
                  },
                  "returnPosition": {
                    "lineNumber": 7,
                    "charNumber": 7
                  }
                }
              ],
              "elsifParts": [],
              "elseStmts": [
                {
                  "returnExpr": {
                    "leftOperand": {
                      "decl": {
                        "relAddr": 0,
                        "isVarParam": false,
                        "idToken": {
                          "symbol": "identifier",
                          "position": {
                            "lineNumber": 3,
                            "charNumber": 12
                          },
                          "text": "n"
                        },
                        "type": {
                          "name": "Integer",
                          "size": 4
                        }
                      },
                      "indexExprs": [],
                      "exprType": {
                        "name": "Integer",
                        "size": 4
                      },
                      "exprPosition": {
                        "lineNumber": 9,
                        "charNumber": 14
                      }
                    },
                    "operator": {
                      "symbol": "plus",
                      "position": {
                        "lineNumber": 9,
                        "charNumber": 16
                      },
                      "text": "+"
                    },
                    "rightOperand": {
                      "literal": {
                        "symbol": "intLiteral",
                        "position": {
                          "lineNumber": 9,
                          "charNumber": 18
                        },
                        "text": "1"
                      },
                      "exprType": {
                        "name": "Integer",
                        "size": 4
                      },
                      "exprPosition": {
                        "lineNumber": 9,
                        "charNumber": 18
                      }
                    },
                    "exprType": {
                      "name": "Integer",
                      "size": 4
                    },
                    "exprPosition": {
                      "lineNumber": 9,
                      "charNumber": 16
                    }
                  },
                  "returnPosition": {
                    "lineNumber": 9,
                    "charNumber": 7
                  }
                }
              ],
              "L1": "L3",
              "L2": "L4"
            }
          ]
        },
        "varLength": 0,
        "L1": "L0",
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 3,
            "charNumber": 10
          },
          "text": "f"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ]
  },
  "stmtPart": {
    "statements": [
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 1,
                "charNumber": 5
              },
              "text": "x"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 16,
            "charNumber": 4
          }
        },
        "expr": {
          "funcId": {
            "symbol": "identifier",
            "position": {
              "lineNumber": 16,
              "charNumber": 9
            },
            "text": "f"
          },
          "actualParams": [
            {
              "literal": {
                "symbol": "intLiteral",
                "position": {
                  "lineNumber": 16,
                  "charNumber": 11
                },
                "text": "12"
              },
              "exprType": {
                "name": "Integer",
                "size": 4
              },
              "exprPosition": {
                "lineNumber": 16,
                "charNumber": 11
              }
            }
          ],
          "funcDecl": {
            "formalParams": [
              {
                "relAddr": 0,
                "isVarParam": false,
                "idToken": {
                  "symbol": "identifier",
                  "position": {
                    "lineNumber": 3,
                    "charNumber": 12
                  },
                  "text": "n"
                },
                "type": {
                  "name": "Integer",
                  "size": 4
                }
              }
            ],
            "initialDecls": [],
            "stmtPart": {
              "statements": [
                {
                  "booleanExpr": {
                    "L1": "L1",
                    "L2": "L2",
                    "leftOperand": {
                      "decl": {
                        "relAddr": 0,
                        "isVarParam": false,
                        "idToken": {
                          "symbol": "identifier",
                          "position": {
                            "lineNumber": 3,
                            "charNumber": 12
                          },
                          "text": "n"
                        },
                        "type": {
                          "name": "Integer",
                          "size": 4
                        }
                      },
                      "indexExprs": [],
                      "exprType": {
                        "name": "Integer",
                        "size": 4
                      },
                      "exprPosition": {
                        "lineNumber": 6,
                        "charNumber": 7
                      }
                    },
                    "operator": {
                      "symbol": "greaterThan",
                      "position": {
                        "lineNumber": 6,
                        "charNumber": 9
                      },
                      "text": "\u003e"
                    },
                    "rightOperand": {
                      "literal": {
                        "symbol": "intLiteral",
                        "position": {
                          "lineNumber": 6,
                          "charNumber": 11
                        },
                        "text": "5"
                      },
                      "exprType": {
                        "name": "Integer",
                        "size": 4
                      },
                      "exprPosition": {
                        "lineNumber": 6,
                        "charNumber": 11
                      }
                    },
                    "exprType": {
                      "name": "Boolean",
                      "size": 1
                    },
                    "exprPosition": {
                      "lineNumber": 6,
                      "charNumber": 9
                    }
                  },
                  "thenStmts": [
                    {
                      "returnExpr": {
                        "literal": {
                          "symbol": "trueRW",
                          "position": {
                            "lineNumber": 7,
                            "charNumber": 14
                          },
                          "text": "true"
                        },
                        "exprType": {
                          "name": "Boolean",
                          "size": 1
                        },
                        "exprPosition": {
                          "lineNumber": 7,
                          "charNumber": 14
                        }
                      },
                      "returnPosition": {
                        "lineNumber": 7,
                        "charNumber": 7
                      }
                    }
                  ],
                  "elsifParts": [],
                  "elseStmts": [
                    {
                      "returnExpr": {
                        "leftOperand": {
                          "decl": {
                            "relAddr": 0,
                            "isVarParam": false,
                            "idToken": {
                              "symbol": "identifier",
                              "position": {
                                "lineNumber": 3,
                                "charNumber": 12
                              },
                              "text": "n"
                            },
                            "type": {
                              "name": "Integer",
                              "size": 4
                            }
                          },
                          "indexExprs": [],
                          "exprType": {
                            "name": "Integer",
                            "size": 4
                          },
                          "exprPosition": {
                            "lineNumber": 9,
                            "charNumber": 14
                          }
                        },
                        "operator": {
                          "symbol": "plus",
                          "position": {
                            "lineNumber": 9,
                            "charNumber": 16
                          },
                          "text": "+"
                        },
                        "rightOperand": {
                          "literal": {
                            "symbol": "intLiteral",
                            "position": {
                              "lineNumber": 9,
                              "charNumber": 18
                            },
                            "text": "1"
                          },
                          "exprType": {
                            "name": "Integer",
                            "size": 4
                          },
                          "exprPosition": {
                            "lineNumber": 9,
                            "charNumber": 18
                          }
                        },
                        "exprType": {
                          "name": "Integer",
                          "size": 4
                        },
                        "exprPosition": {
                          "lineNumber": 9,
                          "charNumber": 16
                        }
                      },
                      "returnPosition": {
                        "lineNumber": 9,
                        "charNumber": 7
                      }
                    }
                  ],
                  "L1": "L3",
                  "L2": "L4"
                }
              ]
            },
            "varLength": 0,
            "L1": "L0",
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 3,
                "charNumber": 10
              },
              "text": "f"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 16,
            "charNumber": 9
          }
        },
        "assignPosition": {
          "lineNumber": 16,
          "charNumber": 6
        }
      },
      {
        "expressions": [
          {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 1,
                  "charNumber": 5
                },
                "text": "x"
              },
              "type": {
                "name": "Integer",
                "size": 4
              }
            },
            "indexExprs": [],
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 17,
              "charNumber": 12
            }
          }
        ]
      }
    ]
  },
  "varLength": 0,
  "L1": "L5"
}
<sep>
Parsing Incorrect_215.cprl...
*** Syntax error detected near line 9, character 5:
    Function name mismatch.
Errors detected in Incorrect_215.cprl -- parsing terminated.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [],
    "subprogDecls": [
      {
        "formalParams": [
          {
            "relAddr": 0,
            "isVarParam": false,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 1,
                "charNumber": 13
              },
              "text": "n"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          }
        ],
        "initialDecls": [],
        "stmtPart": {
          "statements": [
            {
              "returnExpr": {
                "literal": {
                  "symbol": "intLiteral",
                  "position": {
                    "lineNumber": 3,
                    "charNumber": 11
                  },
                  "text": "6"
                },
                "exprType": {
                  "name": "Integer",
                  "size": 4
                },
                "exprPosition": {
                  "lineNumber": 3,
                  "charNumber": 11
                }
              },
              "returnPosition": {
                "lineNumber": 3,
                "charNumber": 4
              }
            }
          ]
        },
        "varLength": 0,
        "L1": "L0",
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 10
          },
          "text": "f1"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      },
      null
    ]
  },
  "stmtPart": {
    "statements": [
      {
        "expressions": [
          {
            "funcId": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 13,
                "charNumber": 12
              },
              "text": "f1"
            },
            "actualParams": [
              {
                "literal": {
                  "symbol": "intLiteral",
                  "position": {
                    "lineNumber": 13,
                    "charNumber": 15
                  },
                  "text": "3"
                },
                "exprType": {
                  "name": "Integer",
                  "size": 4
                },
                "exprPosition": {
                  "lineNumber": 13,
                  "charNumber": 15
                }
              }
            ],
            "funcDecl": {
              "formalParams": [
                {
                  "relAddr": 0,
                  "isVarParam": false,
                  "idToken": {
                    "symbol": "identifier",
                    "position": {
                      "lineNumber": 1,
                      "charNumber": 13
                    },
                    "text": "n"
                  },
                  "type": {
                    "name": "Integer",
                    "size": 4
                  }
                }
              ],
              "initialDecls": [],
              "stmtPart": {
                "statements": [
                  {
                    "returnExpr": {
                      "literal": {
                        "symbol": "intLiteral",
                        "position": {
                          "lineNumber": 3,
                          "charNumber": 11
                        },
                        "text": "6"
                      },
                      "exprType": {
                        "name": "Integer",
                        "size": 4
                      },
                      "exprPosition": {
                        "lineNumber": 3,
                        "charNumber": 11
                      }
                    },
                    "returnPosition": {
                      "lineNumber": 3,
                      "charNumber": 4
                    }
                  }
                ]
              },
              "varLength": 0,
              "L1": "L0",
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 1,
                  "charNumber": 10
                },
                "text": "f1"
              },
              "type": {
                "name": "Integer",
                "size": 4
              }
            },
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 13,
              "charNumber": 12
            }
          },
          {
            "funcId": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 13,
                "charNumber": 19
              },
              "text": "f2"
            },
            "actualParams": [
              {
                "literal": {
                  "symbol": "intLiteral",
                  "position": {
                    "lineNumber": 13,
                    "charNumber": 22
                  },
                  "text": "4"
                },
                "exprType": {
                  "name": "Integer",
                  "size": 4
                },
                "exprPosition": {
                  "lineNumber": 13,
                  "charNumber": 22
                }
              }
            ],
            "funcDecl": {
              "formalParams": [
                {
                  "relAddr": 0,
                  "isVarParam": false,
                  "idToken": {
                    "symbol": "identifier",
                    "position": {
                      "lineNumber": 6,
                      "charNumber": 13
                    },
                    "text": "n"
                  },
                  "type": {
                    "name": "Integer",
                    "size": 4
                  }
                }
              ],
              "initialDecls": [],
              "stmtPart": {
                "statements": [
                  {
                    "returnExpr": {
                      "literal": {
                        "symbol": "intLiteral",
                        "position": {
                          "lineNumber": 8,
                          "charNumber": 11
                        },
                        "text": "7"
                      },
                      "exprType": {
                        "name": "Integer",
                        "size": 4
                      },
                      "exprPosition": {
                        "lineNumber": 8,
                        "charNumber": 11
                      }
                    },
                    "returnPosition": {
                      "lineNumber": 8,
                      "charNumber": 4
                    }
                  }
                ]
              },
              "varLength": 0,
              "L1": "L1",
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 6,
                  "charNumber": 10
                },
                "text": "f2"
              },
              "type": {
                "name": "Integer",
                "size": 4
              }
            },
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 13,
              "charNumber": 19
            }
          }
        ]
      }
    ]
  },
  "varLength": 0,
  "L1": "L2"
}
<sep>
Parsing Incorrect_216.cprl...
Parsing complete.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [],
    "subprogDecls": [
      {
        "formalParams": [],
        "initialDecls": [
          {
            "literal": {
              "symbol": "intLiteral",
              "position": {
                "lineNumber": 4,
                "charNumber": 16
              },
              "text": "9999999999999"
            },
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 4,
                "charNumber": 9
              },
              "text": "big"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          }
        ],
        "stmtPart": {
          "statements": [
            {
              "returnExpr": {
                "literal": {
                  "symbol": "intLiteral",
                  "position": {
                    "lineNumber": 4,
                    "charNumber": 16
                  },
                  "text": "9999999999999"
                },
                "exprType": {
                  "name": "Integer",
                  "size": 4
                },
                "exprPosition": {
                  "lineNumber": 6,
                  "charNumber": 11
                }
              },
              "returnPosition": {
                "lineNumber": 6,
                "charNumber": 4
              }
            }
          ]
        },
        "varLength": 0,
        "L1": "L0",
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 3,
            "charNumber": 10
          },
          "text": "f"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ]
  },
  "stmtPart": {
    "statements": [
      {
        "expressions": [
          {
            "funcId": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 10,
                "charNumber": 12
              },
              "text": "f"
            },
            "actualParams": [],
            "funcDecl": {
              "formalParams": [],
              "initialDecls": [
                {
                  "literal": {
                    "symbol": "intLiteral",
                    "position": {
                      "lineNumber": 4,
                      "charNumber": 16
                    },
                    "text": "9999999999999"
                  },
                  "idToken": {
                    "symbol": "identifier",
                    "position": {
                      "lineNumber": 4,
                      "charNumber": 9
                    },
                    "text": "big"
                  },
                  "type": {
                    "name": "Integer",
                    "size": 4
                  }
                }
              ],
              "stmtPart": {
                "statements": [
                  {
                    "returnExpr": {
                      "literal": {
                        "symbol": "intLiteral",
                        "position": {
                          "lineNumber": 4,
                          "charNumber": 16
                        },
                        "text": "9999999999999"
                      },
                      "exprType": {
                        "name": "Integer",
                        "size": 4
                      },
                      "exprPosition": {
                        "lineNumber": 6,
                        "charNumber": 11
                      }
                    },
                    "returnPosition": {
                      "lineNumber": 6,
                      "charNumber": 4
                    }
                  }
                ]
              },
              "varLength": 0,
              "L1": "L0",
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 3,
                  "charNumber": 10
                },
                "text": "f"
              },
              "type": {
                "name": "Integer",
                "size": 4
              }
            },
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 10,
              "charNumber": 12
            }
          }
        ]
      }
    ]
  },
  "varLength": 0,
  "L1": "L1"
}
<sep>
Parsing Incorrect_217.cprl...
Parsing complete.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [],
    "subprogDecls": [
      {
        "formalParams": [
          {
            "relAddr": 0,
            "isVarParam": false,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 3,
                "charNumber": 12
              },
              "text": "n"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          }
        ],
        "initialDecls": [
          {
            "scopeLevel": "SUBPROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 4,
                "charNumber": 8
              },
              "text": "b"
            },
            "type": {
              "name": "Boolean",
              "size": 1
            }
          }
        ],
        "stmtPart": {
          "statements": [
            {
              "variable": {
                "decl": {
                  "scopeLevel": "SUBPROGRAM",
                  "relAddr": 0,
                  "idToken": {
                    "symbol": "identifier",
                    "position": {
                      "lineNumber": 4,
                      "charNumber": 8
                    },
                    "text": "b"
                  },
                  "type": {
                    "name": "Boolean",
                    "size": 1
                  }
                },
                "indexExprs": [],
                "exprType": {
                  "name": "Boolean",
                  "size": 1
                },
                "exprPosition": {
                  "lineNumber": 6,
                  "charNumber": 4
                }
              },
              "expr": {
                "literal": {
                  "symbol": "trueRW",
                  "position": {
                    "lineNumber": 6,
                    "charNumber": 9
                  },
                  "text": "true"
                },
                "exprType": {
                  "name": "Boolean",
                  "size": 1
                },
                "exprPosition": {
                  "lineNumber": 6,
                  "charNumber": 9
                }
              },
              "assignPosition": {
                "lineNumber": 6,
                "charNumber": 6
              }
            },
            {
              "returnExpr": {
                "leftOperand": {
                  "decl": {
                    "relAddr": 0,
                    "isVarParam": false,
                    "idToken": {
                      "symbol": "identifier",
                      "position": {
                        "lineNumber": 3,
                        "charNumber": 12
                      },
                      "text": "n"
                    },
                    "type": {
                      "name": "Integer",
                      "size": 4
                    }
                  },
                  "indexExprs": [],
                  "exprType": {
                    "name": "Integer",
                    "size": 4
                  },
                  "exprPosition": {
                    "lineNumber": 7,
                    "charNumber": 11
                  }
                },
                "operator": {
                  "symbol": "plus",
                  "position": {
                    "lineNumber": 7,
                    "charNumber": 13
                  },
                  "text": "+"
                },
                "rightOperand": {
                  "decl": {
                    "scopeLevel": "SUBPROGRAM",
                    "relAddr": 0,
                    "idToken": {
                      "symbol": "identifier",
                      "position": {
                        "lineNumber": 4,
                        "charNumber": 8
                      },
                      "text": "b"
                    },
                    "type": {
                      "name": "Boolean",
                      "size": 1
                    }
                  },
                  "indexExprs": [],
                  "exprType": {
                    "name": "Boolean",
                    "size": 1
                  },
                  "exprPosition": {
                    "lineNumber": 7,
                    "charNumber": 15
                  }
                },
                "exprType": {
                  "name": "Integer",
                  "size": 4
                },
                "exprPosition": {
                  "lineNumber": 7,
                  "charNumber": 13
                }
              },
              "returnPosition": {
                "lineNumber": 7,
                "charNumber": 4
              }
            }
          ]
        },
        "varLength": 0,
        "L1": "L0",
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 3,
            "charNumber": 10
          },
          "text": "f"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ]
  },
  "stmtPart": {
    "statements": [
      {
        "expressions": [
          {
            "funcId": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 11,
                "charNumber": 12
              },
              "text": "f"
            },
            "actualParams": [
              {
                "literal": {
                  "symbol": "intLiteral",
                  "position": {
                    "lineNumber": 11,
                    "charNumber": 14
                  },
                  "text": "3"
                },
                "exprType": {
                  "name": "Integer",
                  "size": 4
                },
                "exprPosition": {
                  "lineNumber": 11,
                  "charNumber": 14
                }
              }
            ],
            "funcDecl": {
              "formalParams": [
                {
                  "relAddr": 0,
                  "isVarParam": false,
                  "idToken": {
                    "symbol": "identifier",
                    "position": {
                      "lineNumber": 3,
                      "charNumber": 12
                    },
                    "text": "n"
                  },
                  "type": {
                    "name": "Integer",
                    "size": 4
                  }
                }
              ],
              "initialDecls": [
                {
                  "scopeLevel": "SUBPROGRAM",
                  "relAddr": 0,
                  "idToken": {
                    "symbol": "identifier",
                    "position": {
                      "lineNumber": 4,
                      "charNumber": 8
                    },
                    "text": "b"
                  },
                  "type": {
                    "name": "Boolean",
                    "size": 1
                  }
                }
              ],
              "stmtPart": {
                "statements": [
                  {
                    "variable": {
                      "decl": {
                        "scopeLevel": "SUBPROGRAM",
                        "relAddr": 0,
                        "idToken": {
                          "symbol": "identifier",
                          "position": {
                            "lineNumber": 4,
                            "charNumber": 8
                          },
                          "text": "b"
                        },
                        "type": {
                          "name": "Boolean",
                          "size": 1
                        }
                      },
                      "indexExprs": [],
                      "exprType": {
                        "name": "Boolean",
                        "size": 1
                      },
                      "exprPosition": {
                        "lineNumber": 6,
                        "charNumber": 4
                      }
                    },
                    "expr": {
                      "literal": {
                        "symbol": "trueRW",
                        "position": {
                          "lineNumber": 6,
                          "charNumber": 9
                        },
                        "text": "true"
                      },
                      "exprType": {
                        "name": "Boolean",
                        "size": 1
                      },
                      "exprPosition": {
                        "lineNumber": 6,
                        "charNumber": 9
                      }
                    },
                    "assignPosition": {
                      "lineNumber": 6,
                      "charNumber": 6
                    }
                  },
                  {
                    "returnExpr": {
                      "leftOperand": {
                        "decl": {
                          "relAddr": 0,
                          "isVarParam": false,
                          "idToken": {
                            "symbol": "identifier",
                            "position": {
                              "lineNumber": 3,
                              "charNumber": 12
                            },
                            "text": "n"
                          },
                          "type": {
                            "name": "Integer",
                            "size": 4
                          }
                        },
                        "indexExprs": [],
                        "exprType": {
                          "name": "Integer",
                          "size": 4
                        },
                        "exprPosition": {
                          "lineNumber": 7,
                          "charNumber": 11
                        }
                      },
                      "operator": {
                        "symbol": "plus",
                        "position": {
                          "lineNumber": 7,
                          "charNumber": 13
                        },
                        "text": "+"
                      },
                      "rightOperand": {
                        "decl": {
                          "scopeLevel": "SUBPROGRAM",
                          "relAddr": 0,
                          "idToken": {
                            "symbol": "identifier",
                            "position": {
                              "lineNumber": 4,
                              "charNumber": 8
                            },
                            "text": "b"
                          },
                          "type": {
                            "name": "Boolean",
                            "size": 1
                          }
                        },
                        "indexExprs": [],
                        "exprType": {
                          "name": "Boolean",
                          "size": 1
                        },
                        "exprPosition": {
                          "lineNumber": 7,
                          "charNumber": 15
                        }
                      },
                      "exprType": {
                        "name": "Integer",
                        "size": 4
                      },
                      "exprPosition": {
                        "lineNumber": 7,
                        "charNumber": 13
                      }
                    },
                    "returnPosition": {
                      "lineNumber": 7,
                      "charNumber": 4
                    }
                  }
                ]
              },
              "varLength": 0,
              "L1": "L0",
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 3,
                  "charNumber": 10
                },
                "text": "f"
              },
              "type": {
                "name": "Integer",
                "size": 4
              }
            },
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 11,
              "charNumber": 12
            }
          }
        ]
      }
    ]
  },
  "varLength": 0,
  "L1": "L1"
}
<sep>
Parsing Incorrect_218.cprl...
*** Syntax error detected near line 13, character 12:
    Identifier "inc" is not valid as an expression.
*** Syntax error detected near line 13, character 17:
    Expecting ";" but found ")" instead.
Errors detected in Incorrect_218.cprl -- parsing terminated.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 4,
            "charNumber": 5
          },
          "text": "x"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ],
    "subprogDecls": [
      {
        "formalParams": [
          {
            "relAddr": 0,
            "isVarParam": true,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 6,
                "charNumber": 19
              },
              "text": "n"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          }
        ],
        "initialDecls": [],
        "stmtPart": {
          "statements": [
            {
              "variable": {
                "decl": {
                  "relAddr": 0,
                  "isVarParam": true,
                  "idToken": {
                    "symbol": "identifier",
                    "position": {
                      "lineNumber": 6,
                      "charNumber": 19
                    },
                    "text": "n"
                  },
                  "type": {
                    "name": "Integer",
                    "size": 4
                  }
                },
                "indexExprs": [],
                "exprType": {
                  "name": "Integer",
                  "size": 4
                },
                "exprPosition": {
                  "lineNumber": 8,
                  "charNumber": 5
                }
              },
              "expr": {
                "leftOperand": {
                  "decl": {
                    "relAddr": 0,
                    "isVarParam": true,
                    "idToken": {
                      "symbol": "identifier",
                      "position": {
                        "lineNumber": 6,
                        "charNumber": 19
                      },
                      "text": "n"
                    },
                    "type": {
                      "name": "Integer",
                      "size": 4
                    }
                  },
                  "indexExprs": [],
                  "exprType": {
                    "name": "Integer",
                    "size": 4
                  },
                  "exprPosition": {
                    "lineNumber": 8,
                    "charNumber": 10
                  }
                },
                "operator": {
                  "symbol": "plus",
                  "position": {
                    "lineNumber": 8,
                    "charNumber": 12
                  },
                  "text": "+"
                },
                "rightOperand": {
                  "literal": {
                    "symbol": "intLiteral",
                    "position": {
                      "lineNumber": 8,
                      "charNumber": 14
                    },
                    "text": "1"
                  },
                  "exprType": {
                    "name": "Integer",
                    "size": 4
                  },
                  "exprPosition": {
                    "lineNumber": 8,
                    "charNumber": 14
                  }
                },
                "exprType": {
                  "name": "Integer",
                  "size": 4
                },
                "exprPosition": {
                  "lineNumber": 8,
                  "charNumber": 12
                }
              },
              "assignPosition": {
                "lineNumber": 8,
                "charNumber": 7
              }
            }
          ]
        },
        "varLength": 0,
        "L1": "L0",
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 6,
            "charNumber": 11
          },
          "text": "inc"
        },
        "type": {
          "name": "none",
          "size": 0
        }
      }
    ]
  },
  "stmtPart": {
    "statements": [
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 4,
                "charNumber": 5
              },
              "text": "x"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 12,
            "charNumber": 4
          }
        },
        "expr": {
          "literal": {
            "symbol": "intLiteral",
            "position": {
              "lineNumber": 12,
              "charNumber": 9
            },
            "text": "3"
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 12,
            "charNumber": 9
          }
        },
        "assignPosition": {
          "lineNumber": 12,
          "charNumber": 6
        }
      },
      null
    ]
  },
  "varLength": 0,
  "L1": "L1"
}
<sep>
Parsing Incorrect_219.cprl...
Parsing complete.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [],
    "subprogDecls": [
      {
        "formalParams": [],
        "initialDecls": [
          {
            "scopeLevel": "SUBPROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 2,
                "charNumber": 9
              },
              "text": "x"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          }
        ],
        "stmtPart": {
          "statements": [
            {
              "variable": {
                "decl": {
                  "scopeLevel": "SUBPROGRAM",
                  "relAddr": 0,
                  "idToken": {
                    "symbol": "identifier",
                    "position": {
                      "lineNumber": 2,
                      "charNumber": 9
                    },
                    "text": "x"
                  },
                  "type": {
                    "name": "Integer",
                    "size": 4
                  }
                },
                "indexExprs": [],
                "exprType": {
                  "name": "Integer",
                  "size": 4
                },
                "exprPosition": {
                  "lineNumber": 4,
                  "charNumber": 5
                }
              },
              "expr": {
                "literal": {
                  "symbol": "charLiteral",
                  "position": {
                    "lineNumber": 4,
                    "charNumber": 10
                  },
                  "text": "\u0027X\u0027"
                },
                "exprType": {
                  "name": "Char",
                  "size": 2
                },
                "exprPosition": {
                  "lineNumber": 4,
                  "charNumber": 10
                }
              },
              "assignPosition": {
                "lineNumber": 4,
                "charNumber": 7
              }
            },
            {
              "returnExpr": {
                "literal": {
                  "symbol": "intLiteral",
                  "position": {
                    "lineNumber": 5,
                    "charNumber": 12
                  },
                  "text": "1"
                },
                "exprType": {
                  "name": "Integer",
                  "size": 4
                },
                "exprPosition": {
                  "lineNumber": 5,
                  "charNumber": 12
                }
              },
              "returnPosition": {
                "lineNumber": 5,
                "charNumber": 5
              }
            }
          ]
        },
        "varLength": 0,
        "L1": "L0",
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 10
          },
          "text": "f"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ]
  },
  "stmtPart": {
    "statements": [
      {
        "expressions": [
          {
            "funcId": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 9,
                "charNumber": 12
              },
              "text": "f"
            },
            "actualParams": [],
            "funcDecl": {
              "formalParams": [],
              "initialDecls": [
                {
                  "scopeLevel": "SUBPROGRAM",
                  "relAddr": 0,
                  "idToken": {
                    "symbol": "identifier",
                    "position": {
                      "lineNumber": 2,
                      "charNumber": 9
                    },
                    "text": "x"
                  },
                  "type": {
                    "name": "Integer",
                    "size": 4
                  }
                }
              ],
              "stmtPart": {
                "statements": [
                  {
                    "variable": {
                      "decl": {
                        "scopeLevel": "SUBPROGRAM",
                        "relAddr": 0,
                        "idToken": {
                          "symbol": "identifier",
                          "position": {
                            "lineNumber": 2,
                            "charNumber": 9
                          },
                          "text": "x"
                        },
                        "type": {
                          "name": "Integer",
                          "size": 4
                        }
                      },
                      "indexExprs": [],
                      "exprType": {
                        "name": "Integer",
                        "size": 4
                      },
                      "exprPosition": {
                        "lineNumber": 4,
                        "charNumber": 5
                      }
                    },
                    "expr": {
                      "literal": {
                        "symbol": "charLiteral",
                        "position": {
                          "lineNumber": 4,
                          "charNumber": 10
                        },
                        "text": "\u0027X\u0027"
                      },
                      "exprType": {
                        "name": "Char",
                        "size": 2
                      },
                      "exprPosition": {
                        "lineNumber": 4,
                        "charNumber": 10
                      }
                    },
                    "assignPosition": {
                      "lineNumber": 4,
                      "charNumber": 7
                    }
                  },
                  {
                    "returnExpr": {
                      "literal": {
                        "symbol": "intLiteral",
                        "position": {
                          "lineNumber": 5,
                          "charNumber": 12
                        },
                        "text": "1"
                      },
                      "exprType": {
                        "name": "Integer",
                        "size": 4
                      },
                      "exprPosition": {
                        "lineNumber": 5,
                        "charNumber": 12
                      }
                    },
                    "returnPosition": {
                      "lineNumber": 5,
                      "charNumber": 5
                    }
                  }
                ]
              },
              "varLength": 0,
              "L1": "L0",
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 1,
                  "charNumber": 10
                },
                "text": "f"
              },
              "type": {
                "name": "Integer",
                "size": 4
              }
            },
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 9,
              "charNumber": 12
            }
          }
        ]
      }
    ]
  },
  "varLength": 0,
  "L1": "L1"
}
<sep>
Parsing Incorrect_220.cprl...
Parsing complete.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [],
    "subprogDecls": [
      {
        "formalParams": [],
        "initialDecls": [
          {
            "literal": {
              "symbol": "intLiteral",
              "position": {
                "lineNumber": 2,
                "charNumber": 18
              },
              "text": "9999999999999"
            },
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 2,
                "charNumber": 11
              },
              "text": "big"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          {
            "scopeLevel": "SUBPROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 3,
                "charNumber": 9
              },
              "text": "x"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          }
        ],
        "stmtPart": {
          "statements": [
            {
              "returnExpr": {
                "literal": {
                  "symbol": "intLiteral",
                  "position": {
                    "lineNumber": 5,
                    "charNumber": 12
                  },
                  "text": "5"
                },
                "exprType": {
                  "name": "Integer",
                  "size": 4
                },
                "exprPosition": {
                  "lineNumber": 5,
                  "charNumber": 12
                }
              },
              "returnPosition": {
                "lineNumber": 5,
                "charNumber": 5
              }
            }
          ]
        },
        "varLength": 0,
        "L1": "L0",
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 10
          },
          "text": "f"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ]
  },
  "stmtPart": {
    "statements": [
      {
        "expressions": [
          {
            "funcId": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 9,
                "charNumber": 12
              },
              "text": "f"
            },
            "actualParams": [],
            "funcDecl": {
              "formalParams": [],
              "initialDecls": [
                {
                  "literal": {
                    "symbol": "intLiteral",
                    "position": {
                      "lineNumber": 2,
                      "charNumber": 18
                    },
                    "text": "9999999999999"
                  },
                  "idToken": {
                    "symbol": "identifier",
                    "position": {
                      "lineNumber": 2,
                      "charNumber": 11
                    },
                    "text": "big"
                  },
                  "type": {
                    "name": "Integer",
                    "size": 4
                  }
                },
                {
                  "scopeLevel": "SUBPROGRAM",
                  "relAddr": 0,
                  "idToken": {
                    "symbol": "identifier",
                    "position": {
                      "lineNumber": 3,
                      "charNumber": 9
                    },
                    "text": "x"
                  },
                  "type": {
                    "name": "Integer",
                    "size": 4
                  }
                }
              ],
              "stmtPart": {
                "statements": [
                  {
                    "returnExpr": {
                      "literal": {
                        "symbol": "intLiteral",
                        "position": {
                          "lineNumber": 5,
                          "charNumber": 12
                        },
                        "text": "5"
                      },
                      "exprType": {
                        "name": "Integer",
                        "size": 4
                      },
                      "exprPosition": {
                        "lineNumber": 5,
                        "charNumber": 12
                      }
                    },
                    "returnPosition": {
                      "lineNumber": 5,
                      "charNumber": 5
                    }
                  }
                ]
              },
              "varLength": 0,
              "L1": "L0",
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 1,
                  "charNumber": 10
                },
                "text": "f"
              },
              "type": {
                "name": "Integer",
                "size": 4
              }
            },
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 9,
              "charNumber": 12
            }
          }
        ]
      }
    ]
  },
  "varLength": 0,
  "L1": "L1"
}
<sep>
Parsing Incorrect_221.cprl...
Parsing complete.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "literal": {
          "symbol": "intLiteral",
          "position": {
            "lineNumber": 1,
            "charNumber": 12
          },
          "text": "5"
        },
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 7
          },
          "text": "n"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      },
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 2,
            "charNumber": 7
          },
          "text": "x"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ],
    "subprogDecls": [
      {
        "formalParams": [
          {
            "relAddr": 0,
            "isVarParam": false,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 4,
                "charNumber": 13
              },
              "text": "b"
            },
            "type": {
              "name": "Boolean",
              "size": 1
            }
          }
        ],
        "initialDecls": [],
        "stmtPart": {
          "statements": [
            {
              "booleanExpr": {
                "decl": {
                  "relAddr": 0,
                  "isVarParam": false,
                  "idToken": {
                    "symbol": "identifier",
                    "position": {
                      "lineNumber": 4,
                      "charNumber": 13
                    },
                    "text": "b"
                  },
                  "type": {
                    "name": "Boolean",
                    "size": 1
                  }
                },
                "indexExprs": [],
                "exprType": {
                  "name": "Boolean",
                  "size": 1
                },
                "exprPosition": {
                  "lineNumber": 7,
                  "charNumber": 7
                }
              },
              "thenStmts": [
                {
                  "expressions": [
                    {
                      "literal": {
                        "symbol": "intLiteral",
                        "position": {
                          "lineNumber": 8,
                          "charNumber": 15
                        },
                        "text": "1"
                      },
                      "exprType": {
                        "name": "Integer",
                        "size": 4
                      },
                      "exprPosition": {
                        "lineNumber": 8,
                        "charNumber": 15
                      }
                    }
                  ]
                }
              ],
              "elsifParts": [],
              "elseStmts": [
                {
                  "expressions": [
                    {
                      "operator": {
                        "symbol": "minus",
                        "position": {
                          "lineNumber": 10,
                          "charNumber": 15
                        },
                        "text": "-"
                      },
                      "operand": {
                        "literal": {
                          "symbol": "intLiteral",
                          "position": {
                            "lineNumber": 10,
                            "charNumber": 16
                          },
                          "text": "1"
                        },
                        "exprType": {
                          "name": "Integer",
                          "size": 4
                        },
                        "exprPosition": {
                          "lineNumber": 10,
                          "charNumber": 16
                        }
                      },
                      "exprType": {
                        "name": "Integer",
                        "size": 4
                      },
                      "exprPosition": {
                        "lineNumber": 10,
                        "charNumber": 15
                      }
                    }
                  ]
                }
              ],
              "L1": "L1",
              "L2": "L2"
            }
          ]
        },
        "varLength": 0,
        "L1": "L0",
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 4,
            "charNumber": 11
          },
          "text": "f"
        },
        "type": {
          "name": "none",
          "size": 0
        }
      }
    ]
  },
  "stmtPart": {
    "statements": [
      {
        "procId": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 17,
            "charNumber": 4
          },
          "text": "f"
        },
        "actualParams": [
          {
            "literal": {
              "symbol": "intLiteral",
              "position": {
                "lineNumber": 1,
                "charNumber": 12
              },
              "text": "5"
            },
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 17,
              "charNumber": 6
            }
          }
        ],
        "procDecl": {
          "formalParams": [
            {
              "relAddr": 0,
              "isVarParam": false,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 4,
                  "charNumber": 13
                },
                "text": "b"
              },
              "type": {
                "name": "Boolean",
                "size": 1
              }
            }
          ],
          "initialDecls": [],
          "stmtPart": {
            "statements": [
              {
                "booleanExpr": {
                  "decl": {
                    "relAddr": 0,
                    "isVarParam": false,
                    "idToken": {
                      "symbol": "identifier",
                      "position": {
                        "lineNumber": 4,
                        "charNumber": 13
                      },
                      "text": "b"
                    },
                    "type": {
                      "name": "Boolean",
                      "size": 1
                    }
                  },
                  "indexExprs": [],
                  "exprType": {
                    "name": "Boolean",
                    "size": 1
                  },
                  "exprPosition": {
                    "lineNumber": 7,
                    "charNumber": 7
                  }
                },
                "thenStmts": [
                  {
                    "expressions": [
                      {
                        "literal": {
                          "symbol": "intLiteral",
                          "position": {
                            "lineNumber": 8,
                            "charNumber": 15
                          },
                          "text": "1"
                        },
                        "exprType": {
                          "name": "Integer",
                          "size": 4
                        },
                        "exprPosition": {
                          "lineNumber": 8,
                          "charNumber": 15
                        }
                      }
                    ]
                  }
                ],
                "elsifParts": [],
                "elseStmts": [
                  {
                    "expressions": [
                      {
                        "operator": {
                          "symbol": "minus",
                          "position": {
                            "lineNumber": 10,
                            "charNumber": 15
                          },
                          "text": "-"
                        },
                        "operand": {
                          "literal": {
                            "symbol": "intLiteral",
                            "position": {
                              "lineNumber": 10,
                              "charNumber": 16
                            },
                            "text": "1"
                          },
                          "exprType": {
                            "name": "Integer",
                            "size": 4
                          },
                          "exprPosition": {
                            "lineNumber": 10,
                            "charNumber": 16
                          }
                        },
                        "exprType": {
                          "name": "Integer",
                          "size": 4
                        },
                        "exprPosition": {
                          "lineNumber": 10,
                          "charNumber": 15
                        }
                      }
                    ]
                  }
                ],
                "L1": "L1",
                "L2": "L2"
              }
            ]
          },
          "varLength": 0,
          "L1": "L0",
          "idToken": {
            "symbol": "identifier",
            "position": {
              "lineNumber": 4,
              "charNumber": 11
            },
            "text": "f"
          },
          "type": {
            "name": "none",
            "size": 0
          }
        }
      },
      {
        "expressions": [
          {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 2,
                  "charNumber": 7
                },
                "text": "x"
              },
              "type": {
                "name": "Integer",
                "size": 4
              }
            },
            "indexExprs": [],
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 18,
              "charNumber": 10
            }
          }
        ]
      }
    ]
  },
  "varLength": 0,
  "L1": "L3"
}
<sep>
Parsing Incorrect_222.cprl...
Parsing complete.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "literal": {
          "symbol": "intLiteral",
          "position": {
            "lineNumber": 1,
            "charNumber": 12
          },
          "text": "5"
        },
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 7
          },
          "text": "n"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      },
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 2,
            "charNumber": 7
          },
          "text": "x"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ],
    "subprogDecls": [
      {
        "formalParams": [
          {
            "relAddr": 0,
            "isVarParam": false,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 4,
                "charNumber": 13
              },
              "text": "b"
            },
            "type": {
              "name": "Boolean",
              "size": 1
            }
          }
        ],
        "initialDecls": [],
        "stmtPart": {
          "statements": [
            {
              "booleanExpr": {
                "decl": {
                  "relAddr": 0,
                  "isVarParam": false,
                  "idToken": {
                    "symbol": "identifier",
                    "position": {
                      "lineNumber": 4,
                      "charNumber": 13
                    },
                    "text": "b"
                  },
                  "type": {
                    "name": "Boolean",
                    "size": 1
                  }
                },
                "indexExprs": [],
                "exprType": {
                  "name": "Boolean",
                  "size": 1
                },
                "exprPosition": {
                  "lineNumber": 7,
                  "charNumber": 7
                }
              },
              "thenStmts": [
                {
                  "returnExpr": {
                    "literal": {
                      "symbol": "intLiteral",
                      "position": {
                        "lineNumber": 1,
                        "charNumber": 12
                      },
                      "text": "5"
                    },
                    "exprType": {
                      "name": "Integer",
                      "size": 4
                    },
                    "exprPosition": {
                      "lineNumber": 8,
                      "charNumber": 14
                    }
                  },
                  "returnPosition": {
                    "lineNumber": 8,
                    "charNumber": 7
                  }
                }
              ],
              "elsifParts": [],
              "elseStmts": [
                {
                  "expressions": [
                    {
                      "operator": {
                        "symbol": "minus",
                        "position": {
                          "lineNumber": 10,
                          "charNumber": 15
                        },
                        "text": "-"
                      },
                      "operand": {
                        "literal": {
                          "symbol": "intLiteral",
                          "position": {
                            "lineNumber": 10,
                            "charNumber": 16
                          },
                          "text": "1"
                        },
                        "exprType": {
                          "name": "Integer",
                          "size": 4
                        },
                        "exprPosition": {
                          "lineNumber": 10,
                          "charNumber": 16
                        }
                      },
                      "exprType": {
                        "name": "Integer",
                        "size": 4
                      },
                      "exprPosition": {
                        "lineNumber": 10,
                        "charNumber": 15
                      }
                    }
                  ]
                }
              ],
              "L1": "L1",
              "L2": "L2"
            }
          ]
        },
        "varLength": 0,
        "L1": "L0",
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 4,
            "charNumber": 11
          },
          "text": "f"
        },
        "type": {
          "name": "none",
          "size": 0
        }
      }
    ]
  },
  "stmtPart": {
    "statements": [
      {
        "procId": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 17,
            "charNumber": 4
          },
          "text": "f"
        },
        "actualParams": [
          {
            "literal": {
              "symbol": "trueRW",
              "position": {
                "lineNumber": 17,
                "charNumber": 6
              },
              "text": "true"
            },
            "exprType": {
              "name": "Boolean",
              "size": 1
            },
            "exprPosition": {
              "lineNumber": 17,
              "charNumber": 6
            }
          }
        ],
        "procDecl": {
          "formalParams": [
            {
              "relAddr": 0,
              "isVarParam": false,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 4,
                  "charNumber": 13
                },
                "text": "b"
              },
              "type": {
                "name": "Boolean",
                "size": 1
              }
            }
          ],
          "initialDecls": [],
          "stmtPart": {
            "statements": [
              {
                "booleanExpr": {
                  "decl": {
                    "relAddr": 0,
                    "isVarParam": false,
                    "idToken": {
                      "symbol": "identifier",
                      "position": {
                        "lineNumber": 4,
                        "charNumber": 13
                      },
                      "text": "b"
                    },
                    "type": {
                      "name": "Boolean",
                      "size": 1
                    }
                  },
                  "indexExprs": [],
                  "exprType": {
                    "name": "Boolean",
                    "size": 1
                  },
                  "exprPosition": {
                    "lineNumber": 7,
                    "charNumber": 7
                  }
                },
                "thenStmts": [
                  {
                    "returnExpr": {
                      "literal": {
                        "symbol": "intLiteral",
                        "position": {
                          "lineNumber": 1,
                          "charNumber": 12
                        },
                        "text": "5"
                      },
                      "exprType": {
                        "name": "Integer",
                        "size": 4
                      },
                      "exprPosition": {
                        "lineNumber": 8,
                        "charNumber": 14
                      }
                    },
                    "returnPosition": {
                      "lineNumber": 8,
                      "charNumber": 7
                    }
                  }
                ],
                "elsifParts": [],
                "elseStmts": [
                  {
                    "expressions": [
                      {
                        "operator": {
                          "symbol": "minus",
                          "position": {
                            "lineNumber": 10,
                            "charNumber": 15
                          },
                          "text": "-"
                        },
                        "operand": {
                          "literal": {
                            "symbol": "intLiteral",
                            "position": {
                              "lineNumber": 10,
                              "charNumber": 16
                            },
                            "text": "1"
                          },
                          "exprType": {
                            "name": "Integer",
                            "size": 4
                          },
                          "exprPosition": {
                            "lineNumber": 10,
                            "charNumber": 16
                          }
                        },
                        "exprType": {
                          "name": "Integer",
                          "size": 4
                        },
                        "exprPosition": {
                          "lineNumber": 10,
                          "charNumber": 15
                        }
                      }
                    ]
                  }
                ],
                "L1": "L1",
                "L2": "L2"
              }
            ]
          },
          "varLength": 0,
          "L1": "L0",
          "idToken": {
            "symbol": "identifier",
            "position": {
              "lineNumber": 4,
              "charNumber": 11
            },
            "text": "f"
          },
          "type": {
            "name": "none",
            "size": 0
          }
        }
      },
      {
        "expressions": [
          {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 2,
                  "charNumber": 7
                },
                "text": "x"
              },
              "type": {
                "name": "Integer",
                "size": 4
              }
            },
            "indexExprs": [],
            "exprType": {
              "name": "Integer",
              "size": 4
            },
            "exprPosition": {
              "lineNumber": 18,
              "charNumber": 10
            }
          }
        ]
      }
    ]
  },
  "varLength": 0,
  "L1": "L3"
}
<sep>
Parsing Incorrect_301.cprl...
Parsing complete.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "numElements": {
          "literal": {
            "symbol": "intLiteral",
            "position": {
              "lineNumber": 1,
              "charNumber": 16
            },
            "text": "10"
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 1,
            "charNumber": 16
          }
        },
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 6
          },
          "text": "T"
        },
        "type": {
          "numElements": 10,
          "elementType": {
            "name": "Integer",
            "size": 4
          },
          "name": "T",
          "size": 40
        }
      },
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 2,
            "charNumber": 6
          },
          "text": "a"
        },
        "type": {
          "numElements": 10,
          "elementType": {
            "name": "Integer",
            "size": 4
          },
          "name": "T",
          "size": 40
        }
      },
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 3,
            "charNumber": 6
          },
          "text": "c"
        },
        "type": {
          "name": "Char",
          "size": 2
        }
      }
    ],
    "subprogDecls": []
  },
  "stmtPart": {
    "statements": [
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 3,
                "charNumber": 6
              },
              "text": "c"
            },
            "type": {
              "name": "Char",
              "size": 2
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Char",
            "size": 2
          },
          "exprPosition": {
            "lineNumber": 7,
            "charNumber": 4
          }
        },
        "expr": {
          "literal": {
            "symbol": "charLiteral",
            "position": {
              "lineNumber": 7,
              "charNumber": 9
            },
            "text": "\u0027H\u0027"
          },
          "exprType": {
            "name": "Char",
            "size": 2
          },
          "exprPosition": {
            "lineNumber": 7,
            "charNumber": 9
          }
        },
        "assignPosition": {
          "lineNumber": 7,
          "charNumber": 6
        }
      },
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 2,
                "charNumber": 6
              },
              "text": "a"
            },
            "type": {
              "numElements": 10,
              "elementType": {
                "name": "Integer",
                "size": 4
              },
              "name": "T",
              "size": 40
            }
          },
          "indexExprs": [
            {
              "literal": {
                "symbol": "intLiteral",
                "position": {
                  "lineNumber": 8,
                  "charNumber": 11
                },
                "text": "0"
              },
              "exprType": {
                "name": "Integer",
                "size": 4
              },
              "exprPosition": {
                "lineNumber": 8,
                "charNumber": 11
              }
            }
          ],
          "exprType": {
            "numElements": 10,
            "elementType": {
              "name": "Integer",
              "size": 4
            },
            "name": "T",
            "size": 40
          },
          "exprPosition": {
            "lineNumber": 8,
            "charNumber": 9
          }
        }
      },
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 2,
                "charNumber": 6
              },
              "text": "a"
            },
            "type": {
              "numElements": 10,
              "elementType": {
                "name": "Integer",
                "size": 4
              },
              "name": "T",
              "size": 40
            }
          },
          "indexExprs": [
            {
              "literal": {
                "symbol": "intLiteral",
                "position": {
                  "lineNumber": 9,
                  "charNumber": 6
                },
                "text": "0"
              },
              "exprType": {
                "name": "Integer",
                "size": 4
              },
              "exprPosition": {
                "lineNumber": 9,
                "charNumber": 6
              }
            }
          ],
          "exprType": {
            "numElements": 10,
            "elementType": {
              "name": "Integer",
              "size": 4
            },
            "name": "T",
            "size": 40
          },
          "exprPosition": {
            "lineNumber": 9,
            "charNumber": 4
          }
        },
        "expr": {
          "literal": {
            "symbol": "charLiteral",
            "position": {
              "lineNumber": 9,
              "charNumber": 12
            },
            "text": "\u0027E\u0027"
          },
          "exprType": {
            "name": "Char",
            "size": 2
          },
          "exprPosition": {
            "lineNumber": 9,
            "charNumber": 12
          }
        },
        "assignPosition": {
          "lineNumber": 9,
          "charNumber": 9
        }
      },
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 2,
                "charNumber": 6
              },
              "text": "a"
            },
            "type": {
              "numElements": 10,
              "elementType": {
                "name": "Integer",
                "size": 4
              },
              "name": "T",
              "size": 40
            }
          },
          "indexExprs": [
            {
              "literal": {
                "symbol": "trueRW",
                "position": {
                  "lineNumber": 10,
                  "charNumber": 11
                },
                "text": "true"
              },
              "exprType": {
                "name": "Boolean",
                "size": 1
              },
              "exprPosition": {
                "lineNumber": 10,
                "charNumber": 11
              }
            }
          ],
          "exprType": {
            "numElements": 10,
            "elementType": {
              "name": "Integer",
              "size": 4
            },
            "name": "T",
            "size": 40
          },
          "exprPosition": {
            "lineNumber": 10,
            "charNumber": 9
          }
        }
      },
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 2,
                "charNumber": 6
              },
              "text": "a"
            },
            "type": {
              "numElements": 10,
              "elementType": {
                "name": "Integer",
                "size": 4
              },
              "name": "T",
              "size": 40
            }
          },
          "indexExprs": [
            {
              "literal": {
                "symbol": "charLiteral",
                "position": {
                  "lineNumber": 11,
                  "charNumber": 6
                },
                "text": "\u0027x\u0027"
              },
              "exprType": {
                "name": "Char",
                "size": 2
              },
              "exprPosition": {
                "lineNumber": 11,
                "charNumber": 6
              }
            }
          ],
          "exprType": {
            "numElements": 10,
            "elementType": {
              "name": "Integer",
              "size": 4
            },
            "name": "T",
            "size": 40
          },
          "exprPosition": {
            "lineNumber": 11,
            "charNumber": 4
          }
        },
        "expr": {
          "literal": {
            "symbol": "intLiteral",
            "position": {
              "lineNumber": 11,
              "charNumber": 14
            },
            "text": "5"
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 11,
            "charNumber": 14
          }
        },
        "assignPosition": {
          "lineNumber": 11,
          "charNumber": 11
        }
      },
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 2,
                "charNumber": 6
              },
              "text": "a"
            },
            "type": {
              "numElements": 10,
              "elementType": {
                "name": "Integer",
                "size": 4
              },
              "name": "T",
              "size": 40
            }
          },
          "indexExprs": [
            {
              "decl": {
                "scopeLevel": "PROGRAM",
                "relAddr": 0,
                "idToken": {
                  "symbol": "identifier",
                  "position": {
                    "lineNumber": 3,
                    "charNumber": 6
                  },
                  "text": "c"
                },
                "type": {
                  "name": "Char",
                  "size": 2
                }
              },
              "indexExprs": [],
              "exprType": {
                "name": "Char",
                "size": 2
              },
              "exprPosition": {
                "lineNumber": 12,
                "charNumber": 6
              }
            }
          ],
          "exprType": {
            "numElements": 10,
            "elementType": {
              "name": "Integer",
              "size": 4
            },
            "name": "T",
            "size": 40
          },
          "exprPosition": {
            "lineNumber": 12,
            "charNumber": 4
          }
        },
        "expr": {
          "literal": {
            "symbol": "intLiteral",
            "position": {
              "lineNumber": 12,
              "charNumber": 12
            },
            "text": "8"
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 12,
            "charNumber": 12
          }
        },
        "assignPosition": {
          "lineNumber": 12,
          "charNumber": 9
        }
      },
      {
        "expressions": [
          {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 2,
                  "charNumber": 6
                },
                "text": "a"
              },
              "type": {
                "numElements": 10,
                "elementType": {
                  "name": "Integer",
                  "size": 4
                },
                "name": "T",
                "size": 40
              }
            },
            "indexExprs": [
              {
                "literal": {
                  "symbol": "intLiteral",
                  "position": {
                    "lineNumber": 13,
                    "charNumber": 14
                  },
                  "text": "0"
                },
                "exprType": {
                  "name": "Integer",
                  "size": 4
                },
                "exprPosition": {
                  "lineNumber": 13,
                  "charNumber": 14
                }
              }
            ],
            "exprType": {
              "numElements": 10,
              "elementType": {
                "name": "Integer",
                "size": 4
              },
              "name": "T",
              "size": 40
            },
            "exprPosition": {
              "lineNumber": 13,
              "charNumber": 12
            }
          }
        ]
      }
    ]
  },
  "varLength": 0,
  "L1": "L0"
}
<sep>
Parsing Incorrect_302.cprl...
Parsing complete.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "numElements": {
          "literal": {
            "symbol": "intLiteral",
            "position": {
              "lineNumber": 1,
              "charNumber": 16
            },
            "text": "10"
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 1,
            "charNumber": 16
          }
        },
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 6
          },
          "text": "T"
        },
        "type": {
          "numElements": 10,
          "elementType": {
            "name": "Integer",
            "size": 4
          },
          "name": "T",
          "size": 40
        }
      },
      {
        "numElements": {
          "literal": {
            "symbol": "intLiteral",
            "position": {
              "lineNumber": 2,
              "charNumber": 17
            },
            "text": "10"
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 2,
            "charNumber": 17
          }
        },
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 2,
            "charNumber": 6
          },
          "text": "T1"
        },
        "type": {
          "numElements": 10,
          "elementType": {
            "name": "Integer",
            "size": 4
          },
          "name": "T1",
          "size": 40
        }
      },
      {
        "numElements": {
          "literal": {
            "symbol": "intLiteral",
            "position": {
              "lineNumber": 3,
              "charNumber": 17
            },
            "text": "10"
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 3,
            "charNumber": 17
          }
        },
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 3,
            "charNumber": 6
          },
          "text": "T2"
        },
        "type": {
          "numElements": 10,
          "elementType": {
            "numElements": 10,
            "elementType": {
              "name": "Integer",
              "size": 4
            },
            "name": "T1",
            "size": 40
          },
          "name": "T2",
          "size": 400
        }
      },
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 5,
            "charNumber": 5
          },
          "text": "a"
        },
        "type": {
          "numElements": 10,
          "elementType": {
            "name": "Integer",
            "size": 4
          },
          "name": "T",
          "size": 40
        }
      },
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 6,
            "charNumber": 5
          },
          "text": "b"
        },
        "type": {
          "numElements": 10,
          "elementType": {
            "numElements": 10,
            "elementType": {
              "name": "Integer",
              "size": 4
            },
            "name": "T1",
            "size": 40
          },
          "name": "T2",
          "size": 400
        }
      },
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 7,
            "charNumber": 5
          },
          "text": "c"
        },
        "type": {
          "name": "Integer",
          "size": 4
        }
      }
    ],
    "subprogDecls": []
  },
  "stmtPart": {
    "statements": [
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 5,
                "charNumber": 5
              },
              "text": "a"
            },
            "type": {
              "numElements": 10,
              "elementType": {
                "name": "Integer",
                "size": 4
              },
              "name": "T",
              "size": 40
            }
          },
          "indexExprs": [
            {
              "literal": {
                "symbol": "intLiteral",
                "position": {
                  "lineNumber": 11,
                  "charNumber": 7
                },
                "text": "1"
              },
              "exprType": {
                "name": "Integer",
                "size": 4
              },
              "exprPosition": {
                "lineNumber": 11,
                "charNumber": 7
              }
            },
            {
              "literal": {
                "symbol": "intLiteral",
                "position": {
                  "lineNumber": 11,
                  "charNumber": 10
                },
                "text": "2"
              },
              "exprType": {
                "name": "Integer",
                "size": 4
              },
              "exprPosition": {
                "lineNumber": 11,
                "charNumber": 10
              }
            }
          ],
          "exprType": {
            "numElements": 10,
            "elementType": {
              "name": "Integer",
              "size": 4
            },
            "name": "T",
            "size": 40
          },
          "exprPosition": {
            "lineNumber": 11,
            "charNumber": 5
          }
        },
        "expr": {
          "literal": {
            "symbol": "intLiteral",
            "position": {
              "lineNumber": 11,
              "charNumber": 16
            },
            "text": "3"
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 11,
            "charNumber": 16
          }
        },
        "assignPosition": {
          "lineNumber": 11,
          "charNumber": 13
        }
      },
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 6,
                "charNumber": 5
              },
              "text": "b"
            },
            "type": {
              "numElements": 10,
              "elementType": {
                "numElements": 10,
                "elementType": {
                  "name": "Integer",
                  "size": 4
                },
                "name": "T1",
                "size": 40
              },
              "name": "T2",
              "size": 400
            }
          },
          "indexExprs": [
            {
              "literal": {
                "symbol": "intLiteral",
                "position": {
                  "lineNumber": 12,
                  "charNumber": 7
                },
                "text": "1"
              },
              "exprType": {
                "name": "Integer",
                "size": 4
              },
              "exprPosition": {
                "lineNumber": 12,
                "charNumber": 7
              }
            }
          ],
          "exprType": {
            "numElements": 10,
            "elementType": {
              "numElements": 10,
              "elementType": {
                "name": "Integer",
                "size": 4
              },
              "name": "T1",
              "size": 40
            },
            "name": "T2",
            "size": 400
          },
          "exprPosition": {
            "lineNumber": 12,
            "charNumber": 5
          }
        },
        "expr": {
          "literal": {
            "symbol": "intLiteral",
            "position": {
              "lineNumber": 12,
              "charNumber": 13
            },
            "text": "3"
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 12,
            "charNumber": 13
          }
        },
        "assignPosition": {
          "lineNumber": 12,
          "charNumber": 10
        }
      },
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 7,
                "charNumber": 5
              },
              "text": "c"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 13,
            "charNumber": 5
          }
        },
        "expr": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 6,
                "charNumber": 5
              },
              "text": "b"
            },
            "type": {
              "numElements": 10,
              "elementType": {
                "numElements": 10,
                "elementType": {
                  "name": "Integer",
                  "size": 4
                },
                "name": "T1",
                "size": 40
              },
              "name": "T2",
              "size": 400
            }
          },
          "indexExprs": [
            {
              "literal": {
                "symbol": "intLiteral",
                "position": {
                  "lineNumber": 13,
                  "charNumber": 12
                },
                "text": "1"
              },
              "exprType": {
                "name": "Integer",
                "size": 4
              },
              "exprPosition": {
                "lineNumber": 13,
                "charNumber": 12
              }
            },
            {
              "literal": {
                "symbol": "intLiteral",
                "position": {
                  "lineNumber": 13,
                  "charNumber": 15
                },
                "text": "2"
              },
              "exprType": {
                "name": "Integer",
                "size": 4
              },
              "exprPosition": {
                "lineNumber": 13,
                "charNumber": 15
              }
            },
            {
              "literal": {
                "symbol": "intLiteral",
                "position": {
                  "lineNumber": 13,
                  "charNumber": 18
                },
                "text": "3"
              },
              "exprType": {
                "name": "Integer",
                "size": 4
              },
              "exprPosition": {
                "lineNumber": 13,
                "charNumber": 18
              }
            }
          ],
          "exprType": {
            "numElements": 10,
            "elementType": {
              "numElements": 10,
              "elementType": {
                "name": "Integer",
                "size": 4
              },
              "name": "T1",
              "size": 40
            },
            "name": "T2",
            "size": 400
          },
          "exprPosition": {
            "lineNumber": 13,
            "charNumber": 10
          }
        },
        "assignPosition": {
          "lineNumber": 13,
          "charNumber": 7
        }
      },
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 7,
                "charNumber": 5
              },
              "text": "c"
            },
            "type": {
              "name": "Integer",
              "size": 4
            }
          },
          "indexExprs": [],
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 14,
            "charNumber": 5
          }
        },
        "expr": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 6,
                "charNumber": 5
              },
              "text": "b"
            },
            "type": {
              "numElements": 10,
              "elementType": {
                "numElements": 10,
                "elementType": {
                  "name": "Integer",
                  "size": 4
                },
                "name": "T1",
                "size": 40
              },
              "name": "T2",
              "size": 400
            }
          },
          "indexExprs": [
            {
              "literal": {
                "symbol": "intLiteral",
                "position": {
                  "lineNumber": 14,
                  "charNumber": 12
                },
                "text": "1"
              },
              "exprType": {
                "name": "Integer",
                "size": 4
              },
              "exprPosition": {
                "lineNumber": 14,
                "charNumber": 12
              }
            }
          ],
          "exprType": {
            "numElements": 10,
            "elementType": {
              "numElements": 10,
              "elementType": {
                "name": "Integer",
                "size": 4
              },
              "name": "T1",
              "size": 40
            },
            "name": "T2",
            "size": 400
          },
          "exprPosition": {
            "lineNumber": 14,
            "charNumber": 10
          }
        },
        "assignPosition": {
          "lineNumber": 14,
          "charNumber": 7
        }
      }
    ]
  },
  "varLength": 0,
  "L1": "L0"
}
<sep>
Parsing Incorrect_303.cprl...
Parsing complete.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "numElements": {
          "literal": {
            "symbol": "intLiteral",
            "position": {
              "lineNumber": 1,
              "charNumber": 16
            },
            "text": "10"
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 1,
            "charNumber": 16
          }
        },
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 6
          },
          "text": "T"
        },
        "type": {
          "numElements": 10,
          "elementType": {
            "name": "Integer",
            "size": 4
          },
          "name": "T",
          "size": 40
        }
      },
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 2,
            "charNumber": 5
          },
          "text": "a"
        },
        "type": {
          "numElements": 10,
          "elementType": {
            "name": "Integer",
            "size": 4
          },
          "name": "T",
          "size": 40
        }
      }
    ],
    "subprogDecls": []
  },
  "stmtPart": {
    "statements": [
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 2,
                "charNumber": 5
              },
              "text": "a"
            },
            "type": {
              "numElements": 10,
              "elementType": {
                "name": "Integer",
                "size": 4
              },
              "name": "T",
              "size": 40
            }
          },
          "indexExprs": [
            {
              "literal": {
                "symbol": "intLiteral",
                "position": {
                  "lineNumber": 6,
                  "charNumber": 11
                },
                "text": "0"
              },
              "exprType": {
                "name": "Integer",
                "size": 4
              },
              "exprPosition": {
                "lineNumber": 6,
                "charNumber": 11
              }
            }
          ],
          "exprType": {
            "numElements": 10,
            "elementType": {
              "name": "Integer",
              "size": 4
            },
            "name": "T",
            "size": 40
          },
          "exprPosition": {
            "lineNumber": 6,
            "charNumber": 9
          }
        }
      },
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 2,
                "charNumber": 5
              },
              "text": "a"
            },
            "type": {
              "numElements": 10,
              "elementType": {
                "name": "Integer",
                "size": 4
              },
              "name": "T",
              "size": 40
            }
          },
          "indexExprs": [
            {
              "literal": {
                "symbol": "trueRW",
                "position": {
                  "lineNumber": 7,
                  "charNumber": 11
                },
                "text": "true"
              },
              "exprType": {
                "name": "Boolean",
                "size": 1
              },
              "exprPosition": {
                "lineNumber": 7,
                "charNumber": 11
              }
            }
          ],
          "exprType": {
            "numElements": 10,
            "elementType": {
              "name": "Integer",
              "size": 4
            },
            "name": "T",
            "size": 40
          },
          "exprPosition": {
            "lineNumber": 7,
            "charNumber": 9
          }
        }
      },
      {
        "expressions": [
          {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 2,
                  "charNumber": 5
                },
                "text": "a"
              },
              "type": {
                "numElements": 10,
                "elementType": {
                  "name": "Integer",
                  "size": 4
                },
                "name": "T",
                "size": 40
              }
            },
            "indexExprs": [
              {
                "literal": {
                  "symbol": "charLiteral",
                  "position": {
                    "lineNumber": 8,
                    "charNumber": 14
                  },
                  "text": "\u0027c\u0027"
                },
                "exprType": {
                  "name": "Char",
                  "size": 2
                },
                "exprPosition": {
                  "lineNumber": 8,
                  "charNumber": 14
                }
              }
            ],
            "exprType": {
              "numElements": 10,
              "elementType": {
                "name": "Integer",
                "size": 4
              },
              "name": "T",
              "size": 40
            },
            "exprPosition": {
              "lineNumber": 8,
              "charNumber": 12
            }
          }
        ]
      }
    ]
  },
  "varLength": 0,
  "L1": "L0"
}
<sep>
Parsing Incorrect_304.cprl...
Parsing complete.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "numElements": {
          "literal": {
            "symbol": "intLiteral",
            "position": {
              "lineNumber": 1,
              "charNumber": 16
            },
            "text": "10"
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 1,
            "charNumber": 16
          }
        },
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 6
          },
          "text": "T"
        },
        "type": {
          "numElements": 10,
          "elementType": {
            "name": "Integer",
            "size": 4
          },
          "name": "T",
          "size": 40
        }
      },
      {
        "numElements": {
          "literal": {
            "symbol": "intLiteral",
            "position": {
              "lineNumber": 2,
              "charNumber": 17
            },
            "text": "10"
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 2,
            "charNumber": 17
          }
        },
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 2,
            "charNumber": 6
          },
          "text": "T1"
        },
        "type": {
          "numElements": 10,
          "elementType": {
            "name": "Integer",
            "size": 4
          },
          "name": "T1",
          "size": 40
        }
      },
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 4,
            "charNumber": 5
          },
          "text": "a"
        },
        "type": {
          "numElements": 10,
          "elementType": {
            "name": "Integer",
            "size": 4
          },
          "name": "T",
          "size": 40
        }
      },
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 5,
            "charNumber": 5
          },
          "text": "b"
        },
        "type": {
          "numElements": 10,
          "elementType": {
            "name": "Integer",
            "size": 4
          },
          "name": "T",
          "size": 40
        }
      },
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 6,
            "charNumber": 5
          },
          "text": "c"
        },
        "type": {
          "numElements": 10,
          "elementType": {
            "name": "Integer",
            "size": 4
          },
          "name": "T1",
          "size": 40
        }
      }
    ],
    "subprogDecls": []
  },
  "stmtPart": {
    "statements": [
      {
        "booleanExpr": {
          "L1": "L0",
          "L2": "L1",
          "leftOperand": {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 4,
                  "charNumber": 5
                },
                "text": "a"
              },
              "type": {
                "numElements": 10,
                "elementType": {
                  "name": "Integer",
                  "size": 4
                },
                "name": "T",
                "size": 40
              }
            },
            "indexExprs": [],
            "exprType": {
              "numElements": 10,
              "elementType": {
                "name": "Integer",
                "size": 4
              },
              "name": "T",
              "size": 40
            },
            "exprPosition": {
              "lineNumber": 10,
              "charNumber": 6
            }
          },
          "operator": {
            "symbol": "equals",
            "position": {
              "lineNumber": 10,
              "charNumber": 8
            },
            "text": "\u003d"
          },
          "rightOperand": {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 6,
                  "charNumber": 5
                },
                "text": "c"
              },
              "type": {
                "numElements": 10,
                "elementType": {
                  "name": "Integer",
                  "size": 4
                },
                "name": "T1",
                "size": 40
              }
            },
            "indexExprs": [],
            "exprType": {
              "numElements": 10,
              "elementType": {
                "name": "Integer",
                "size": 4
              },
              "name": "T1",
              "size": 40
            },
            "exprPosition": {
              "lineNumber": 10,
              "charNumber": 10
            }
          },
          "exprType": {
            "name": "Boolean",
            "size": 1
          },
          "exprPosition": {
            "lineNumber": 10,
            "charNumber": 8
          }
        },
        "thenStmts": [
          {
            "expressions": [
              {
                "literal": {
                  "symbol": "stringLiteral",
                  "position": {
                    "lineNumber": 12,
                    "charNumber": 14
                  },
                  "text": "\"bogus\""
                },
                "exprType": {
                  "name": "String",
                  "size": 0
                },
                "exprPosition": {
                  "lineNumber": 12,
                  "charNumber": 14
                }
              }
            ]
          }
        ],
        "elsifParts": [],
        "elseStmts": [],
        "L1": "L2",
        "L2": "L3"
      },
      {
        "booleanExpr": {
          "L1": "L4",
          "L2": "L5",
          "leftOperand": {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 4,
                  "charNumber": 5
                },
                "text": "a"
              },
              "type": {
                "numElements": 10,
                "elementType": {
                  "name": "Integer",
                  "size": 4
                },
                "name": "T",
                "size": 40
              }
            },
            "indexExprs": [],
            "exprType": {
              "numElements": 10,
              "elementType": {
                "name": "Integer",
                "size": 4
              },
              "name": "T",
              "size": 40
            },
            "exprPosition": {
              "lineNumber": 15,
              "charNumber": 6
            }
          },
          "operator": {
            "symbol": "equals",
            "position": {
              "lineNumber": 15,
              "charNumber": 8
            },
            "text": "\u003d"
          },
          "rightOperand": {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 5,
                  "charNumber": 5
                },
                "text": "b"
              },
              "type": {
                "numElements": 10,
                "elementType": {
                  "name": "Integer",
                  "size": 4
                },
                "name": "T",
                "size": 40
              }
            },
            "indexExprs": [],
            "exprType": {
              "numElements": 10,
              "elementType": {
                "name": "Integer",
                "size": 4
              },
              "name": "T",
              "size": 40
            },
            "exprPosition": {
              "lineNumber": 15,
              "charNumber": 10
            }
          },
          "exprType": {
            "name": "Boolean",
            "size": 1
          },
          "exprPosition": {
            "lineNumber": 15,
            "charNumber": 8
          }
        },
        "thenStmts": [
          {
            "expressions": [
              {
                "literal": {
                  "symbol": "stringLiteral",
                  "position": {
                    "lineNumber": 17,
                    "charNumber": 13
                  },
                  "text": "\"bogus\""
                },
                "exprType": {
                  "name": "String",
                  "size": 0
                },
                "exprPosition": {
                  "lineNumber": 17,
                  "charNumber": 13
                }
              }
            ]
          }
        ],
        "elsifParts": [],
        "elseStmts": [],
        "L1": "L6",
        "L2": "L7"
      }
    ]
  },
  "varLength": 0,
  "L1": "L8"
}
<sep>
Parsing Incorrect_305.cprl...
*** Syntax error detected near line 1, character 16:
    Invalid constant.
Errors detected in Incorrect_305.cprl -- parsing terminated.

*** AST Dump ***
Program: {
  "declPart": {
    "initialDecls": [
      {
        "numElements": {
          "literal": {
            "symbol": "intLiteral",
            "position": {
              "lineNumber": 1,
              "charNumber": 16
            },
            "text": "0"
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 1,
            "charNumber": 16
          }
        },
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 1,
            "charNumber": 6
          },
          "text": "T"
        },
        "type": {
          "numElements": 0,
          "elementType": {
            "name": "Integer",
            "size": 4
          },
          "name": "T",
          "size": 0
        }
      },
      {
        "scopeLevel": "PROGRAM",
        "relAddr": 0,
        "idToken": {
          "symbol": "identifier",
          "position": {
            "lineNumber": 2,
            "charNumber": 6
          },
          "text": "a"
        },
        "type": {
          "numElements": 0,
          "elementType": {
            "name": "Integer",
            "size": 4
          },
          "name": "T",
          "size": 0
        }
      }
    ],
    "subprogDecls": []
  },
  "stmtPart": {
    "statements": [
      {
        "variable": {
          "decl": {
            "scopeLevel": "PROGRAM",
            "relAddr": 0,
            "idToken": {
              "symbol": "identifier",
              "position": {
                "lineNumber": 2,
                "charNumber": 6
              },
              "text": "a"
            },
            "type": {
              "numElements": 0,
              "elementType": {
                "name": "Integer",
                "size": 4
              },
              "name": "T",
              "size": 0
            }
          },
          "indexExprs": [
            {
              "literal": {
                "symbol": "intLiteral",
                "position": {
                  "lineNumber": 6,
                  "charNumber": 6
                },
                "text": "0"
              },
              "exprType": {
                "name": "Integer",
                "size": 4
              },
              "exprPosition": {
                "lineNumber": 6,
                "charNumber": 6
              }
            }
          ],
          "exprType": {
            "numElements": 0,
            "elementType": {
              "name": "Integer",
              "size": 4
            },
            "name": "T",
            "size": 0
          },
          "exprPosition": {
            "lineNumber": 6,
            "charNumber": 4
          }
        },
        "expr": {
          "literal": {
            "symbol": "intLiteral",
            "position": {
              "lineNumber": 6,
              "charNumber": 12
            },
            "text": "1"
          },
          "exprType": {
            "name": "Integer",
            "size": 4
          },
          "exprPosition": {
            "lineNumber": 6,
            "charNumber": 12
          }
        },
        "assignPosition": {
          "lineNumber": 6,
          "charNumber": 9
        }
      },
      {
        "expressions": [
          {
            "decl": {
              "scopeLevel": "PROGRAM",
              "relAddr": 0,
              "idToken": {
                "symbol": "identifier",
                "position": {
                  "lineNumber": 2,
                  "charNumber": 6
                },
                "text": "a"
              },
              "type": {
                "numElements": 0,
                "elementType": {
                  "name": "Integer",
                  "size": 4
                },
                "name": "T",
                "size": 0
              }
            },
            "indexExprs": [
              {
                "literal": {
                  "symbol": "intLiteral",
                  "position": {
                    "lineNumber": 7,
                    "charNumber": 14
                  },
                  "text": "0"
                },
                "exprType": {
                  "name": "Integer",
                  "size": 4
                },
                "exprPosition": {
                  "lineNumber": 7,
                  "charNumber": 14
                }
              }
            ],
            "exprType": {
              "numElements": 0,
              "elementType": {
                "name": "Integer",
                "size": 4
              },
              "name": "T",
              "size": 0
            },
            "exprPosition": {
              "lineNumber": 7,
              "charNumber": 12
            }
          }
        ]
      }
    ]
  },
  "varLength": 0,
  "L1": "L0"
}